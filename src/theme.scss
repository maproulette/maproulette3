@import './variables.scss';
@import './mixins.scss';

// Temporarily disable mobile breakpoints in Bulma until we
// add in mobile styling.
$desktop: 50px;
$tablet: 40px;

.has-centered-children {
  display: flex;
  justify-content: center;
}

.modal.is-active {
  z-index: $layer-modal;
}

.full-screen-height {
  height: calc(100vh - #{$navbar-height} - #{$subnav-height});
}

.task .full-screen-height, .about .full-screen-height {
  // no subnav in task mode or about pane
  .leaflet-container {
    height: calc(100vh - #{$navbar-height});
  }
}

// class for "full-screen" maps that calculates appropriate height based off
// presence or absence of navbar and subnav.
.full-screen-map {
  .leaflet-container {
    height: calc(100vh - #{$navbar-height} - #{$subnav-height});
  }

  &.task, &.about { // no subnav in task mode or about pane
    .leaflet-container {
      height: calc(100vh - #{$navbar-height});
    }
  }
}

// Dropdown that pops the menu out to the right
.dropdown.popout-right {
  .menu-wrapper {
    position: fixed;
    left: 65px;
    z-index: $layer-popout;

    .dropdown-menu {
      padding-top: 0;
      box-shadow: 0px 2px 6px 0px $box-shadow-color;
    }
  }
}

.dropdown.is-center {
  .dropdown-menu {
    left: auto;
    right: -25%;
  }
}

.button {
  &:focus {
    outline: 0 !important;
    box-shadow: none !important;
  }
}

.button.is-outlined {
  border-radius: 20px;
  border: 2px solid;
  font-size: $size-6;
  font-weight: $weight-medium;
  padding: 0px 30px;
  height: 30px;

  &.is-small {
    border-radius: 20px;
    font-size: $size-8;
    padding: 0px 30px;
  }

  &.is-big {
    font-size: $size-5;
    font-weight: $weight-normal;
    border-radius: 30px;
    padding: 0px 40px;
  }
}

.button.is-clear {
  border: none;
  background-color: transparent;
  padding: 0;

  .icon:first-child:last-child, .icon:first-child:not(:last-child) {
    margin-left: 0;
    margin-right: 0;
  }
}

.button.large-and-wide {
  svg {
    fill: $green;
  }

  width: 140px;
  height: 75px;
  background-color: $grey-lightest-more;
  font-size: $size-6;
  font-weight: $weight-medium;
  color: $green;
  border: none;
  display: flex;
  justify-content: center;
  align-items: center;

  &:hover, &:enabled:focus {
    box-shadow: 0px 2px 4px 0px $box-shadow-color;
    color: $green;
  }

  .control-icon svg {
    height: 20px;
    width: auto;
    margin-right: 8px;
    vertical-align: text-bottom;
  }

  &.full-width {
    width: 100%;
  }

  &.label-only {
    font-weight: $weight-normal;
  }
}

.button.icon-only {
  border: none;
  outline: none;
  background-color: transparent;
  justify-content: flex-start;
  padding: 0px 6px;

  .control-icon svg {
    fill: $green;
    height: 20px;
    width: auto;
    transition: fill 0.3s;
  }

  .control-label {
    display: none;
  }

  &:hover {
    .control-icon svg {
      fill: $black;
    }
  }
}

.button.has-svg-icon {
  svg {
    height: 15px;
    width: auto;
    margin: 0 5px;
  }

  &.is-primary {
    svg {
      fill: $primary;
    }

    &:enabled:hover, &:enabled:focus {
      svg {
        fill: $primary-invert;
      }
    }
  }

  &.is-loading {
    svg {
      visibility: hidden; // we only want to show the busy spinner
    }
  }
}

button.is-secondary {
  @include invert-on-hover($grey, $white);
}

button.is-green {
  @include invert-on-hover($green, $white);
}

button.is-primary.is-loading {
  &:enabled:focus:after {
    // Change spinner color. Bulma css has !important so we have to as well.
    border-color: transparent transparent $primary-invert $primary-invert !important;
  }
}

@import '../node_modules/bulma/bulma.sass';
@import '../node_modules/bulma-badge/badge.sass';
@import '../node_modules/bulma-timeline/timeline.sass';
@import "../node_modules/bulma-steps-component/bulma-steps.sass";

code {
  color: $coral;
  background-color: transparent;
  padding: 0;
  font-family: $family-sans-serif;
  font-size: inherit;
}
