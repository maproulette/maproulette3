@import './variables.scss';

// Buttons
@mixin button-color($foreground-color, $background-color) {
  color: $foreground-color;
  border-color: $foreground-color;
  background-color: $background-color;

  svg {
    fill: $foreground-color;
  }
}

@mixin invert-on-hover($foreground-color, $background-color) {
  @include button-color($foreground-color, $background-color);

  &:enabled:hover, &:enabled:focus {
    @include button-color($background-color, $foreground-color);
  }

  &.no-focus:focus:not(:hover) {
    @include button-color($foreground-color, $background-color);
  }

  &.is-loading {
    &:enabled:focus:after {
      border-color: transparent transparent $background-color $background-color !important;
    }
  }
}

@mixin dropdown-arrow($size: 10px) {
  height: $size;
  width: $size;
  transform: rotate(-45deg);
  transform-origin: center;
  transition: transform 0.25s;
}

@mixin triangle-up($size, $color) {
  position: relative;
  padding-top: $size;

  &:before {
    content:'';
    display:block;
    width:0;
    height:0;
    position:absolute;

    border-bottom: $size solid $color;
    border-left: $size solid transparent;
    border-right: $size solid transparent;

    top: 0;
    left: $size * 1.5;
  }
}

// helps display text content in a constrained area
@mixin constrained-text-content() {
  overflow-wrap: break-word;
  word-wrap: break-word;
  word-break: break-word;
  hyphens: auto;
}

@mixin markdown-content() {
  p {
    margin-bottom: 1rem;

    &:last-child {
      margin-bottom: 0;
    }
  }

  ul {
    list-style-type: disc;
    margin-left: 1rem;
    margin-bottom: 1rem;

    > li > ul {
      list-style-type: circle;

      > li > ul {
        list-style-type: square;
      }
    }
  }

  ol {
    margin-left: 1rem;
    margin-bottom: 1rem;
  }

  pre {
    padding: 10px;
    margin-bottom: 1rem;
  }
}

@mixin busy-spinner-color($color) {
  .busy-spinner-icon {
    border-color: $color;
    border-right-color: transparent;
    border-top-color: transparent;
  }
}

@mixin busy-spinner-size($size) {
  .busy-spinner-icon {
    width: $size;
    height: $size;
  }
}

@mixin basic-form-element-styling() {
  border-color: $form-element-border-color;
  border-width: 2px;
  border-style: solid;
  box-shadow: none;
  border-radius: $radius-medium;
  color: $grey;

  &:hover, &:focus {
    outline: none;
    border-color: $grey-light;
    box-shadow: none;
  }

  &[readonly], &[readonly]:hover, &[readonly]:focus {
    outline: none;
    border-color: $form-element-border-color;
    box-shadow: none;
  }
}

@mixin tag() {
  font-family: inherit;
  font-size: $size-7;
  background-color: $grey-lightest;
  color: $grey;
  border: none;
  border-radius: $radius-medium;
  margin: 5px;
  padding: 2px 5px 2px 10px;

  .react-tagsinput-remove {
    font-family: inherit;
    color: $grey-darkest;

    &:before {
      margin-left: 5px;
    }
  }
}

// Note: image must be set as a background-image.
@mixin circular-image() {
  border-radius: 50%;
  background-position: center;
  background-size: cover;
  width: 100%;
  height: 100%;
}
