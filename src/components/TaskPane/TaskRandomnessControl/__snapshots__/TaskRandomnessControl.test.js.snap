// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`proximity option is selected if tasks are to be loaded by promixity  1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskRandomnessControl
    challengeId={321}
    intl={
      Object {
        "formatMessage": [MockFunction],
      }
    }
    setTaskLoadBy={[MockFunction]}
    task={
      Object {
        "id": 123,
        "parent": Object {
          "id": 321,
        },
      }
    }
    taskLoadBy="proximity"
    user={
      Object {
        "id": 357,
        "isLoggedIn": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="control"
      >
        <div
          className="task-randomness-control__prompt"
        >
          <FormattedMessage
            defaultMessage="Load tasks by:"
            id="Challenge.controls.taskLoadBy.label"
            values={Object {}}
          />
        </div>
        <div
          className="task-randomness-control__options"
        >
          <label
            className="radio"
          >
            <input
              checked={false}
              className="task-randomness-control__random-option"
              name="randomnessPreference"
              onChange={[Function]}
              type="radio"
            />
            <FormattedMessage
              defaultMessage="Random"
              id="Task.loadByMethod.random"
              values={Object {}}
            />
          </label>
          <label
            className="radio"
          >
            <input
              checked={true}
              className="task-randomness-control__proximity-option"
              name="randomnessPreference"
              onChange={[Function]}
              type="radio"
            />
            <FormattedMessage
              defaultMessage="Proximity"
              id="Task.loadByMethod.proximity"
              values={Object {}}
            />
          </label>
        </div>
      </div>,
      "className": "task-randomness-control",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="task-randomness-control__prompt"
          >
            <FormattedMessage
              defaultMessage="Load tasks by:"
              id="Challenge.controls.taskLoadBy.label"
              values={Object {}}
            />
          </div>,
          <div
            className="task-randomness-control__options"
          >
            <label
              className="radio"
            >
              <input
                checked={false}
                className="task-randomness-control__random-option"
                name="randomnessPreference"
                onChange={[Function]}
                type="radio"
              />
              <FormattedMessage
                defaultMessage="Random"
                id="Task.loadByMethod.random"
                values={Object {}}
              />
            </label>
            <label
              className="radio"
            >
              <input
                checked={true}
                className="task-randomness-control__proximity-option"
                name="randomnessPreference"
                onChange={[Function]}
                type="radio"
              />
              <FormattedMessage
                defaultMessage="Proximity"
                id="Task.loadByMethod.proximity"
                values={Object {}}
              />
            </label>
          </div>,
        ],
        "className": "control",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <FormattedMessage
              defaultMessage="Load tasks by:"
              id="Challenge.controls.taskLoadBy.label"
              values={Object {}}
            />,
            "className": "task-randomness-control__prompt",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "defaultMessage": "Load tasks by:",
              "id": "Challenge.controls.taskLoadBy.label",
              "values": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                className="radio"
              >
                <input
                  checked={false}
                  className="task-randomness-control__random-option"
                  name="randomnessPreference"
                  onChange={[Function]}
                  type="radio"
                />
                <FormattedMessage
                  defaultMessage="Random"
                  id="Task.loadByMethod.random"
                  values={Object {}}
                />
              </label>,
              <label
                className="radio"
              >
                <input
                  checked={true}
                  className="task-randomness-control__proximity-option"
                  name="randomnessPreference"
                  onChange={[Function]}
                  type="radio"
                />
                <FormattedMessage
                  defaultMessage="Proximity"
                  id="Task.loadByMethod.proximity"
                  values={Object {}}
                />
              </label>,
            ],
            "className": "task-randomness-control__options",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    checked={false}
                    className="task-randomness-control__random-option"
                    name="randomnessPreference"
                    onChange={[Function]}
                    type="radio"
                  />,
                  <FormattedMessage
                    defaultMessage="Random"
                    id="Task.loadByMethod.random"
                    values={Object {}}
                  />,
                ],
                "className": "radio",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "checked": false,
                    "className": "task-randomness-control__random-option",
                    "name": "randomnessPreference",
                    "onChange": [Function],
                    "type": "radio",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultMessage": "Random",
                    "id": "Task.loadByMethod.random",
                    "values": Object {},
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    checked={true}
                    className="task-randomness-control__proximity-option"
                    name="randomnessPreference"
                    onChange={[Function]}
                    type="radio"
                  />,
                  <FormattedMessage
                    defaultMessage="Proximity"
                    id="Task.loadByMethod.proximity"
                    values={Object {}}
                  />,
                ],
                "className": "radio",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "checked": true,
                    "className": "task-randomness-control__proximity-option",
                    "name": "randomnessPreference",
                    "onChange": [Function],
                    "type": "radio",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultMessage": "Proximity",
                    "id": "Task.loadByMethod.proximity",
                    "values": Object {},
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "label",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="control"
        >
          <div
            className="task-randomness-control__prompt"
          >
            <FormattedMessage
              defaultMessage="Load tasks by:"
              id="Challenge.controls.taskLoadBy.label"
              values={Object {}}
            />
          </div>
          <div
            className="task-randomness-control__options"
          >
            <label
              className="radio"
            >
              <input
                checked={false}
                className="task-randomness-control__random-option"
                name="randomnessPreference"
                onChange={[Function]}
                type="radio"
              />
              <FormattedMessage
                defaultMessage="Random"
                id="Task.loadByMethod.random"
                values={Object {}}
              />
            </label>
            <label
              className="radio"
            >
              <input
                checked={true}
                className="task-randomness-control__proximity-option"
                name="randomnessPreference"
                onChange={[Function]}
                type="radio"
              />
              <FormattedMessage
                defaultMessage="Proximity"
                id="Task.loadByMethod.proximity"
                values={Object {}}
              />
            </label>
          </div>
        </div>,
        "className": "task-randomness-control",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="task-randomness-control__prompt"
            >
              <FormattedMessage
                defaultMessage="Load tasks by:"
                id="Challenge.controls.taskLoadBy.label"
                values={Object {}}
              />
            </div>,
            <div
              className="task-randomness-control__options"
            >
              <label
                className="radio"
              >
                <input
                  checked={false}
                  className="task-randomness-control__random-option"
                  name="randomnessPreference"
                  onChange={[Function]}
                  type="radio"
                />
                <FormattedMessage
                  defaultMessage="Random"
                  id="Task.loadByMethod.random"
                  values={Object {}}
                />
              </label>
              <label
                className="radio"
              >
                <input
                  checked={true}
                  className="task-randomness-control__proximity-option"
                  name="randomnessPreference"
                  onChange={[Function]}
                  type="radio"
                />
                <FormattedMessage
                  defaultMessage="Proximity"
                  id="Task.loadByMethod.proximity"
                  values={Object {}}
                />
              </label>
            </div>,
          ],
          "className": "control",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <FormattedMessage
                defaultMessage="Load tasks by:"
                id="Challenge.controls.taskLoadBy.label"
                values={Object {}}
              />,
              "className": "task-randomness-control__prompt",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "defaultMessage": "Load tasks by:",
                "id": "Challenge.controls.taskLoadBy.label",
                "values": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  className="radio"
                >
                  <input
                    checked={false}
                    className="task-randomness-control__random-option"
                    name="randomnessPreference"
                    onChange={[Function]}
                    type="radio"
                  />
                  <FormattedMessage
                    defaultMessage="Random"
                    id="Task.loadByMethod.random"
                    values={Object {}}
                  />
                </label>,
                <label
                  className="radio"
                >
                  <input
                    checked={true}
                    className="task-randomness-control__proximity-option"
                    name="randomnessPreference"
                    onChange={[Function]}
                    type="radio"
                  />
                  <FormattedMessage
                    defaultMessage="Proximity"
                    id="Task.loadByMethod.proximity"
                    values={Object {}}
                  />
                </label>,
              ],
              "className": "task-randomness-control__options",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <input
                      checked={false}
                      className="task-randomness-control__random-option"
                      name="randomnessPreference"
                      onChange={[Function]}
                      type="radio"
                    />,
                    <FormattedMessage
                      defaultMessage="Random"
                      id="Task.loadByMethod.random"
                      values={Object {}}
                    />,
                  ],
                  "className": "radio",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "checked": false,
                      "className": "task-randomness-control__random-option",
                      "name": "randomnessPreference",
                      "onChange": [Function],
                      "type": "radio",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "defaultMessage": "Random",
                      "id": "Task.loadByMethod.random",
                      "values": Object {},
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <input
                      checked={true}
                      className="task-randomness-control__proximity-option"
                      name="randomnessPreference"
                      onChange={[Function]}
                      type="radio"
                    />,
                    <FormattedMessage
                      defaultMessage="Proximity"
                      id="Task.loadByMethod.proximity"
                      values={Object {}}
                    />,
                  ],
                  "className": "radio",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "checked": true,
                      "className": "task-randomness-control__proximity-option",
                      "name": "randomnessPreference",
                      "onChange": [Function],
                      "type": "radio",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "defaultMessage": "Proximity",
                      "id": "Task.loadByMethod.proximity",
                      "values": Object {},
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "label",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`random option is selected if tasks are to be loaded by random  1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskRandomnessControl
    challengeId={321}
    intl={
      Object {
        "formatMessage": [MockFunction],
      }
    }
    setTaskLoadBy={[MockFunction]}
    task={
      Object {
        "id": 123,
        "parent": Object {
          "id": 321,
        },
      }
    }
    taskLoadBy="random"
    user={
      Object {
        "id": 357,
        "isLoggedIn": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="control"
      >
        <div
          className="task-randomness-control__prompt"
        >
          <FormattedMessage
            defaultMessage="Load tasks by:"
            id="Challenge.controls.taskLoadBy.label"
            values={Object {}}
          />
        </div>
        <div
          className="task-randomness-control__options"
        >
          <label
            className="radio"
          >
            <input
              checked={true}
              className="task-randomness-control__random-option"
              name="randomnessPreference"
              onChange={[Function]}
              type="radio"
            />
            <FormattedMessage
              defaultMessage="Random"
              id="Task.loadByMethod.random"
              values={Object {}}
            />
          </label>
          <label
            className="radio"
          >
            <input
              checked={false}
              className="task-randomness-control__proximity-option"
              name="randomnessPreference"
              onChange={[Function]}
              type="radio"
            />
            <FormattedMessage
              defaultMessage="Proximity"
              id="Task.loadByMethod.proximity"
              values={Object {}}
            />
          </label>
        </div>
      </div>,
      "className": "task-randomness-control",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="task-randomness-control__prompt"
          >
            <FormattedMessage
              defaultMessage="Load tasks by:"
              id="Challenge.controls.taskLoadBy.label"
              values={Object {}}
            />
          </div>,
          <div
            className="task-randomness-control__options"
          >
            <label
              className="radio"
            >
              <input
                checked={true}
                className="task-randomness-control__random-option"
                name="randomnessPreference"
                onChange={[Function]}
                type="radio"
              />
              <FormattedMessage
                defaultMessage="Random"
                id="Task.loadByMethod.random"
                values={Object {}}
              />
            </label>
            <label
              className="radio"
            >
              <input
                checked={false}
                className="task-randomness-control__proximity-option"
                name="randomnessPreference"
                onChange={[Function]}
                type="radio"
              />
              <FormattedMessage
                defaultMessage="Proximity"
                id="Task.loadByMethod.proximity"
                values={Object {}}
              />
            </label>
          </div>,
        ],
        "className": "control",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <FormattedMessage
              defaultMessage="Load tasks by:"
              id="Challenge.controls.taskLoadBy.label"
              values={Object {}}
            />,
            "className": "task-randomness-control__prompt",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "defaultMessage": "Load tasks by:",
              "id": "Challenge.controls.taskLoadBy.label",
              "values": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                className="radio"
              >
                <input
                  checked={true}
                  className="task-randomness-control__random-option"
                  name="randomnessPreference"
                  onChange={[Function]}
                  type="radio"
                />
                <FormattedMessage
                  defaultMessage="Random"
                  id="Task.loadByMethod.random"
                  values={Object {}}
                />
              </label>,
              <label
                className="radio"
              >
                <input
                  checked={false}
                  className="task-randomness-control__proximity-option"
                  name="randomnessPreference"
                  onChange={[Function]}
                  type="radio"
                />
                <FormattedMessage
                  defaultMessage="Proximity"
                  id="Task.loadByMethod.proximity"
                  values={Object {}}
                />
              </label>,
            ],
            "className": "task-randomness-control__options",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    checked={true}
                    className="task-randomness-control__random-option"
                    name="randomnessPreference"
                    onChange={[Function]}
                    type="radio"
                  />,
                  <FormattedMessage
                    defaultMessage="Random"
                    id="Task.loadByMethod.random"
                    values={Object {}}
                  />,
                ],
                "className": "radio",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "checked": true,
                    "className": "task-randomness-control__random-option",
                    "name": "randomnessPreference",
                    "onChange": [Function],
                    "type": "radio",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultMessage": "Random",
                    "id": "Task.loadByMethod.random",
                    "values": Object {},
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    checked={false}
                    className="task-randomness-control__proximity-option"
                    name="randomnessPreference"
                    onChange={[Function]}
                    type="radio"
                  />,
                  <FormattedMessage
                    defaultMessage="Proximity"
                    id="Task.loadByMethod.proximity"
                    values={Object {}}
                  />,
                ],
                "className": "radio",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "checked": false,
                    "className": "task-randomness-control__proximity-option",
                    "name": "randomnessPreference",
                    "onChange": [Function],
                    "type": "radio",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultMessage": "Proximity",
                    "id": "Task.loadByMethod.proximity",
                    "values": Object {},
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "label",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="control"
        >
          <div
            className="task-randomness-control__prompt"
          >
            <FormattedMessage
              defaultMessage="Load tasks by:"
              id="Challenge.controls.taskLoadBy.label"
              values={Object {}}
            />
          </div>
          <div
            className="task-randomness-control__options"
          >
            <label
              className="radio"
            >
              <input
                checked={true}
                className="task-randomness-control__random-option"
                name="randomnessPreference"
                onChange={[Function]}
                type="radio"
              />
              <FormattedMessage
                defaultMessage="Random"
                id="Task.loadByMethod.random"
                values={Object {}}
              />
            </label>
            <label
              className="radio"
            >
              <input
                checked={false}
                className="task-randomness-control__proximity-option"
                name="randomnessPreference"
                onChange={[Function]}
                type="radio"
              />
              <FormattedMessage
                defaultMessage="Proximity"
                id="Task.loadByMethod.proximity"
                values={Object {}}
              />
            </label>
          </div>
        </div>,
        "className": "task-randomness-control",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="task-randomness-control__prompt"
            >
              <FormattedMessage
                defaultMessage="Load tasks by:"
                id="Challenge.controls.taskLoadBy.label"
                values={Object {}}
              />
            </div>,
            <div
              className="task-randomness-control__options"
            >
              <label
                className="radio"
              >
                <input
                  checked={true}
                  className="task-randomness-control__random-option"
                  name="randomnessPreference"
                  onChange={[Function]}
                  type="radio"
                />
                <FormattedMessage
                  defaultMessage="Random"
                  id="Task.loadByMethod.random"
                  values={Object {}}
                />
              </label>
              <label
                className="radio"
              >
                <input
                  checked={false}
                  className="task-randomness-control__proximity-option"
                  name="randomnessPreference"
                  onChange={[Function]}
                  type="radio"
                />
                <FormattedMessage
                  defaultMessage="Proximity"
                  id="Task.loadByMethod.proximity"
                  values={Object {}}
                />
              </label>
            </div>,
          ],
          "className": "control",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <FormattedMessage
                defaultMessage="Load tasks by:"
                id="Challenge.controls.taskLoadBy.label"
                values={Object {}}
              />,
              "className": "task-randomness-control__prompt",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "defaultMessage": "Load tasks by:",
                "id": "Challenge.controls.taskLoadBy.label",
                "values": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  className="radio"
                >
                  <input
                    checked={true}
                    className="task-randomness-control__random-option"
                    name="randomnessPreference"
                    onChange={[Function]}
                    type="radio"
                  />
                  <FormattedMessage
                    defaultMessage="Random"
                    id="Task.loadByMethod.random"
                    values={Object {}}
                  />
                </label>,
                <label
                  className="radio"
                >
                  <input
                    checked={false}
                    className="task-randomness-control__proximity-option"
                    name="randomnessPreference"
                    onChange={[Function]}
                    type="radio"
                  />
                  <FormattedMessage
                    defaultMessage="Proximity"
                    id="Task.loadByMethod.proximity"
                    values={Object {}}
                  />
                </label>,
              ],
              "className": "task-randomness-control__options",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <input
                      checked={true}
                      className="task-randomness-control__random-option"
                      name="randomnessPreference"
                      onChange={[Function]}
                      type="radio"
                    />,
                    <FormattedMessage
                      defaultMessage="Random"
                      id="Task.loadByMethod.random"
                      values={Object {}}
                    />,
                  ],
                  "className": "radio",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "checked": true,
                      "className": "task-randomness-control__random-option",
                      "name": "randomnessPreference",
                      "onChange": [Function],
                      "type": "radio",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "defaultMessage": "Random",
                      "id": "Task.loadByMethod.random",
                      "values": Object {},
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <input
                      checked={false}
                      className="task-randomness-control__proximity-option"
                      name="randomnessPreference"
                      onChange={[Function]}
                      type="radio"
                    />,
                    <FormattedMessage
                      defaultMessage="Proximity"
                      id="Task.loadByMethod.proximity"
                      values={Object {}}
                    />,
                  ],
                  "className": "radio",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "checked": false,
                      "className": "task-randomness-control__proximity-option",
                      "name": "randomnessPreference",
                      "onChange": [Function],
                      "type": "radio",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "defaultMessage": "Proximity",
                      "id": "Task.loadByMethod.proximity",
                      "values": Object {},
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "label",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
