// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`it renders completion controls 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskCompletionControls
    activateKeyboardShortcuts={[Function]}
    closeEditor={[Function]}
    comment="Foo"
    completeTask={[Function]}
    deactivateKeyboardShortcuts={[Function]}
    keyboardShortcutGroups={
        Object {
            "taskCompletion": Object {
              "cancel": Object {
                "key": "Escape",
                "keyLabel": "ESC",
                "label": "Cancel Editing",
              },
            },
            "taskEditing": Object {
              "editId": Object {
                "key": "e",
                "label": "Edit in Id",
              },
              "editJosm": Object {
                "key": "r",
                "label": "Edit in JOSM",
              },
              "editJosmLayer": Object {
                "key": "t",
                "label": "Edit in new JOSM layer",
              },
              "falsePositive": Object {
                "key": "q",
                "label": "Not an Issue",
              },
              "skip": Object {
                "key": "w",
                "label": "Skip",
              },
            },
          }
    }
    setComment={[Function]}
    setTaskBeingCompleted={[Function]}
    task={
        Object {
            "id": 123,
            "parent": Object {
              "id": 321,
            },
          }
    }
    user={
        Object {
            "id": 357,
            "isLoggedIn": true,
            "settings": Object {
              "defaultEditor": 1,
            },
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <TaskCommentInput
          activateKeyboardShortcuts={[Function]}
          className="task-completion-controls__task-comment"
          closeEditor={[Function]}
          comment="Foo"
          commentChanged={[Function]}
          completeTask={[Function]}
          deactivateKeyboardShortcuts={[Function]}
          keyboardShortcutGroups={
                    Object {
                              "taskCompletion": Object {
                                "cancel": Object {
                                  "key": "Escape",
                                  "keyLabel": "ESC",
                                  "label": "Cancel Editing",
                                },
                              },
                              "taskEditing": Object {
                                "editId": Object {
                                  "key": "e",
                                  "label": "Edit in Id",
                                },
                                "editJosm": Object {
                                  "key": "r",
                                  "label": "Edit in JOSM",
                                },
                                "editJosmLayer": Object {
                                  "key": "t",
                                  "label": "Edit in new JOSM layer",
                                },
                                "falsePositive": Object {
                                  "key": "q",
                                  "label": "Not an Issue",
                                },
                                "skip": Object {
                                  "key": "w",
                                  "label": "Skip",
                                },
                              },
                            }
          }
          setComment={[Function]}
          setTaskBeingCompleted={[Function]}
          task={
                    Object {
                              "id": 123,
                              "parent": Object {
                                "id": 321,
                              },
                            }
          }
          user={
                    Object {
                              "id": 357,
                              "isLoggedIn": true,
                              "settings": Object {
                                "defaultEditor": 1,
                              },
                            }
          }
          value="Foo"
/>,
        <button
          className="button large-and-wide full-width task-completion-controls__fix"
          onClick={[Function]}
>
          <FormattedMessage
                    defaultMessage="I fixed it!"
                    id="ActiveTask.controls.fixed.label"
                    values={Object {}}
          />
</button>,
        <button
          className="button large-and-wide full-width task-completion-controls__too-hard"
          onClick={[Function]}
>
          <FormattedMessage
                    defaultMessage="Too difficult / Couldn't see"
                    id="ActiveTask.controls.notFixed.label"
                    values={Object {}}
          />
</button>,
        <button
          className="button large-and-wide full-width task-completion-controls__already-fixed"
          onClick={[Function]}
>
          <FormattedMessage
                    defaultMessage="Already fixed"
                    id="ActiveTask.controls.aleadyFixed.label"
                    values={Object {}}
          />
</button>,
        <div
          className="has-centered-children"
>
          <a
                    className="is-text task-completion-controls__cancel"
                    onClick={[Function]}
          >
                    <SvgSymbol
                              sym="back-icon"
                              viewBox="0 0 20 20"
                    />
                    <FormattedMessage
                              defaultMessage="Go Back"
                              id="ActiveTask.controls.cancelEditing.label"
                              values={Object {}}
                    />
          </a>
</div>,
      ],
      "className": "task-completion-controls",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activateKeyboardShortcuts": [Function],
          "className": "task-completion-controls__task-comment",
          "closeEditor": [Function],
          "comment": "Foo",
          "commentChanged": [Function],
          "completeTask": [Function],
          "deactivateKeyboardShortcuts": [Function],
          "keyboardShortcutGroups": Object {
            "taskCompletion": Object {
              "cancel": Object {
                "key": "Escape",
                "keyLabel": "ESC",
                "label": "Cancel Editing",
              },
            },
            "taskEditing": Object {
              "editId": Object {
                "key": "e",
                "label": "Edit in Id",
              },
              "editJosm": Object {
                "key": "r",
                "label": "Edit in JOSM",
              },
              "editJosmLayer": Object {
                "key": "t",
                "label": "Edit in new JOSM layer",
              },
              "falsePositive": Object {
                "key": "q",
                "label": "Not an Issue",
              },
              "skip": Object {
                "key": "w",
                "label": "Skip",
              },
            },
          },
          "setComment": [Function],
          "setTaskBeingCompleted": [Function],
          "task": Object {
            "id": 123,
            "parent": Object {
              "id": 321,
            },
          },
          "user": Object {
            "id": 357,
            "isLoggedIn": true,
            "settings": Object {
              "defaultEditor": 1,
            },
          },
          "value": "Foo",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <FormattedMessage
            defaultMessage="I fixed it!"
            id="ActiveTask.controls.fixed.label"
            values={Object {}}
/>,
          "className": "button large-and-wide full-width task-completion-controls__fix",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "defaultMessage": "I fixed it!",
            "id": "ActiveTask.controls.fixed.label",
            "values": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <FormattedMessage
            defaultMessage="Too difficult / Couldn't see"
            id="ActiveTask.controls.notFixed.label"
            values={Object {}}
/>,
          "className": "button large-and-wide full-width task-completion-controls__too-hard",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "defaultMessage": "Too difficult / Couldn't see",
            "id": "ActiveTask.controls.notFixed.label",
            "values": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <FormattedMessage
            defaultMessage="Already fixed"
            id="ActiveTask.controls.aleadyFixed.label"
            values={Object {}}
/>,
          "className": "button large-and-wide full-width task-completion-controls__already-fixed",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "defaultMessage": "Already fixed",
            "id": "ActiveTask.controls.aleadyFixed.label",
            "values": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <a
            className="is-text task-completion-controls__cancel"
            onClick={[Function]}
>
            <SvgSymbol
                        sym="back-icon"
                        viewBox="0 0 20 20"
            />
            <FormattedMessage
                        defaultMessage="Go Back"
                        id="ActiveTask.controls.cancelEditing.label"
                        values={Object {}}
            />
</a>,
          "className": "has-centered-children",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SvgSymbol
                sym="back-icon"
                viewBox="0 0 20 20"
/>,
              <FormattedMessage
                defaultMessage="Go Back"
                id="ActiveTask.controls.cancelEditing.label"
                values={Object {}}
/>,
            ],
            "className": "is-text task-completion-controls__cancel",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "sym": "back-icon",
                "viewBox": "0 0 20 20",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "defaultMessage": "Go Back",
                "id": "ActiveTask.controls.cancelEditing.label",
                "values": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "a",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <TaskCommentInput
            activateKeyboardShortcuts={[Function]}
            className="task-completion-controls__task-comment"
            closeEditor={[Function]}
            comment="Foo"
            commentChanged={[Function]}
            completeTask={[Function]}
            deactivateKeyboardShortcuts={[Function]}
            keyboardShortcutGroups={
                        Object {
                                    "taskCompletion": Object {
                                      "cancel": Object {
                                        "key": "Escape",
                                        "keyLabel": "ESC",
                                        "label": "Cancel Editing",
                                      },
                                    },
                                    "taskEditing": Object {
                                      "editId": Object {
                                        "key": "e",
                                        "label": "Edit in Id",
                                      },
                                      "editJosm": Object {
                                        "key": "r",
                                        "label": "Edit in JOSM",
                                      },
                                      "editJosmLayer": Object {
                                        "key": "t",
                                        "label": "Edit in new JOSM layer",
                                      },
                                      "falsePositive": Object {
                                        "key": "q",
                                        "label": "Not an Issue",
                                      },
                                      "skip": Object {
                                        "key": "w",
                                        "label": "Skip",
                                      },
                                    },
                                  }
            }
            setComment={[Function]}
            setTaskBeingCompleted={[Function]}
            task={
                        Object {
                                    "id": 123,
                                    "parent": Object {
                                      "id": 321,
                                    },
                                  }
            }
            user={
                        Object {
                                    "id": 357,
                                    "isLoggedIn": true,
                                    "settings": Object {
                                      "defaultEditor": 1,
                                    },
                                  }
            }
            value="Foo"
/>,
          <button
            className="button large-and-wide full-width task-completion-controls__fix"
            onClick={[Function]}
>
            <FormattedMessage
                        defaultMessage="I fixed it!"
                        id="ActiveTask.controls.fixed.label"
                        values={Object {}}
            />
</button>,
          <button
            className="button large-and-wide full-width task-completion-controls__too-hard"
            onClick={[Function]}
>
            <FormattedMessage
                        defaultMessage="Too difficult / Couldn't see"
                        id="ActiveTask.controls.notFixed.label"
                        values={Object {}}
            />
</button>,
          <button
            className="button large-and-wide full-width task-completion-controls__already-fixed"
            onClick={[Function]}
>
            <FormattedMessage
                        defaultMessage="Already fixed"
                        id="ActiveTask.controls.aleadyFixed.label"
                        values={Object {}}
            />
</button>,
          <div
            className="has-centered-children"
>
            <a
                        className="is-text task-completion-controls__cancel"
                        onClick={[Function]}
            >
                        <SvgSymbol
                                    sym="back-icon"
                                    viewBox="0 0 20 20"
                        />
                        <FormattedMessage
                                    defaultMessage="Go Back"
                                    id="ActiveTask.controls.cancelEditing.label"
                                    values={Object {}}
                        />
            </a>
</div>,
        ],
        "className": "task-completion-controls",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activateKeyboardShortcuts": [Function],
            "className": "task-completion-controls__task-comment",
            "closeEditor": [Function],
            "comment": "Foo",
            "commentChanged": [Function],
            "completeTask": [Function],
            "deactivateKeyboardShortcuts": [Function],
            "keyboardShortcutGroups": Object {
              "taskCompletion": Object {
                "cancel": Object {
                  "key": "Escape",
                  "keyLabel": "ESC",
                  "label": "Cancel Editing",
                },
              },
              "taskEditing": Object {
                "editId": Object {
                  "key": "e",
                  "label": "Edit in Id",
                },
                "editJosm": Object {
                  "key": "r",
                  "label": "Edit in JOSM",
                },
                "editJosmLayer": Object {
                  "key": "t",
                  "label": "Edit in new JOSM layer",
                },
                "falsePositive": Object {
                  "key": "q",
                  "label": "Not an Issue",
                },
                "skip": Object {
                  "key": "w",
                  "label": "Skip",
                },
              },
            },
            "setComment": [Function],
            "setTaskBeingCompleted": [Function],
            "task": Object {
              "id": 123,
              "parent": Object {
                "id": 321,
              },
            },
            "user": Object {
              "id": 357,
              "isLoggedIn": true,
              "settings": Object {
                "defaultEditor": 1,
              },
            },
            "value": "Foo",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <FormattedMessage
              defaultMessage="I fixed it!"
              id="ActiveTask.controls.fixed.label"
              values={Object {}}
/>,
            "className": "button large-and-wide full-width task-completion-controls__fix",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "defaultMessage": "I fixed it!",
              "id": "ActiveTask.controls.fixed.label",
              "values": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <FormattedMessage
              defaultMessage="Too difficult / Couldn't see"
              id="ActiveTask.controls.notFixed.label"
              values={Object {}}
/>,
            "className": "button large-and-wide full-width task-completion-controls__too-hard",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "defaultMessage": "Too difficult / Couldn't see",
              "id": "ActiveTask.controls.notFixed.label",
              "values": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <FormattedMessage
              defaultMessage="Already fixed"
              id="ActiveTask.controls.aleadyFixed.label"
              values={Object {}}
/>,
            "className": "button large-and-wide full-width task-completion-controls__already-fixed",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "defaultMessage": "Already fixed",
              "id": "ActiveTask.controls.aleadyFixed.label",
              "values": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <a
              className="is-text task-completion-controls__cancel"
              onClick={[Function]}
>
              <SvgSymbol
                            sym="back-icon"
                            viewBox="0 0 20 20"
              />
              <FormattedMessage
                            defaultMessage="Go Back"
                            id="ActiveTask.controls.cancelEditing.label"
                            values={Object {}}
              />
</a>,
            "className": "has-centered-children",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <SvgSymbol
                  sym="back-icon"
                  viewBox="0 0 20 20"
/>,
                <FormattedMessage
                  defaultMessage="Go Back"
                  id="ActiveTask.controls.cancelEditing.label"
                  values={Object {}}
/>,
              ],
              "className": "is-text task-completion-controls__cancel",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "sym": "back-icon",
                  "viewBox": "0 0 20 20",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultMessage": "Go Back",
                  "id": "ActiveTask.controls.cancelEditing.label",
                  "values": Object {},
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "a",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
