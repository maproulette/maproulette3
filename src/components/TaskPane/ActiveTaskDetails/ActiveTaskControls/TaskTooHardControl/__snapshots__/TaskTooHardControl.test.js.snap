// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`shows too-hard control 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskTooHardControl
    activateKeyboardShortcut={
      [MockFunction] {
        "calls": Array [
          Array [
            "taskCompletion",
            Object {
              "tooHard": Object {
                "key": "d",
                "label": Object {
                  "defaultMessage": "Too difficult / Couldn't see",
                  "id": "KeyMapping.taskCompletion.tooHard",
                },
              },
            },
            undefined,
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    complete={[MockFunction]}
    deactivateKeyboardShortcut={[MockFunction]}
    intl={
      Object {
        "formatMessage": [MockFunction],
      }
    }
    keyboardShortcutGroups={
      Object {
        "openEditor": Object {
          "editId": Object {
            "key": "e",
            "label": Object {
              "defaultMessage": "Edit in Id",
              "id": "KeyMapping.openEditor.editId",
            },
          },
          "editJosm": Object {
            "key": "r",
            "label": Object {
              "defaultMessage": "Edit in JOSM",
              "id": "KeyMapping.openEditor.editJosm",
            },
          },
          "editJosmFeatures": Object {
            "key": "y",
            "label": Object {
              "defaultMessage": "Edit just features in JOSM",
              "id": "KeyMapping.openEditor.editJosmFeatures",
            },
          },
          "editJosmLayer": Object {
            "key": "t",
            "label": Object {
              "defaultMessage": "Edit in new JOSM layer",
              "id": "KeyMapping.openEditor.editJosmLayer",
            },
          },
          "editLevel0": Object {
            "key": "v",
            "label": Object {
              "defaultMessage": "Edit in Level0",
              "id": "KeyMapping.openEditor.editLevel0",
            },
          },
        },
        "taskCompletion": Object {
          "alreadyFixed": Object {
            "key": "x",
            "label": Object {
              "defaultMessage": "Already fixed",
              "id": "KeyMapping.taskCompletion.alreadyFixed",
            },
          },
          "falsePositive": Object {
            "key": "q",
            "label": Object {
              "defaultMessage": "Not an Issue",
              "id": "KeyMapping.taskCompletion.falsePositive",
            },
          },
          "fixed": Object {
            "key": "f",
            "label": Object {
              "defaultMessage": "I fixed it!",
              "id": "KeyMapping.taskCompletion.fixed",
            },
          },
          "skip": Object {
            "key": "w",
            "label": Object {
              "defaultMessage": "Skip",
              "id": "KeyMapping.taskCompletion.skip",
            },
          },
          "tooHard": Object {
            "key": "d",
            "label": Object {
              "defaultMessage": "Too difficult / Couldn't see",
              "id": "KeyMapping.taskCompletion.tooHard",
            },
          },
        },
        "taskEditing": Object {
          "cancel": Object {
            "key": "Escape",
            "keyLabel": Object {
              "defaultMessage": "ESC",
              "id": "KeyMapping.taskEditing.escapeLabel",
            },
            "label": Object {
              "defaultMessage": "Cancel Editing",
              "id": "KeyMapping.taskEditing.cancel",
            },
          },
          "fitBounds": Object {
            "key": "0",
            "label": Object {
              "defaultMessage": "Fit Map to Task Features",
              "id": "KeyMapping.taskEditing.fitBounds",
            },
          },
        },
        "taskReview": Object {
          "nextTask": Object {
            "key": "l",
            "label": Object {
              "defaultMessage": "Next Task",
              "id": "KeyMapping.taskReview.nextTask",
            },
          },
          "prevTask": Object {
            "key": "h",
            "label": Object {
              "defaultMessage": "Previous Task",
              "id": "KeyMapping.taskReview.prevTask",
            },
          },
        },
      }
    }
    quickKeyHandler={
      [MockFunction] {
        "calls": Array [
          Array [
            "d",
            [Function],
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    task={
      Object {
        "id": 123,
        "parent": Object {
          "id": 321,
        },
        "status": 0,
      }
    }
    textInputActive={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <FormattedMessage
        defaultMessage="Too difficult / Couldn't see"
        id="Task.controls.tooHard.label"
        values={Object {}}
      />,
      "className": "button large-and-wide full-width label-only too-hard-control",
      "onClick": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "defaultMessage": "Too difficult / Couldn't see",
        "id": "Task.controls.tooHard.label",
        "values": Object {},
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "button",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <FormattedMessage
          defaultMessage="Too difficult / Couldn't see"
          id="Task.controls.tooHard.label"
          values={Object {}}
        />,
        "className": "button large-and-wide full-width label-only too-hard-control",
        "onClick": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "defaultMessage": "Too difficult / Couldn't see",
          "id": "Task.controls.tooHard.label",
          "values": Object {},
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "button",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
