// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`the toggle switch is checked if the task is saved 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskTrackControls
    intl={
      Object {
        "formatMessage": [MockFunction],
      }
    }
    saveTask={[MockFunction]}
    task={
      Object {
        "id": 123,
        "parent": Object {
          "id": 321,
        },
        "status": 1,
      }
    }
    unsaveTask={[MockFunction]}
    user={
      Object {
        "id": 357,
        "isLoggedIn": true,
        "savedTasks": Array [
          Object {
            "id": 123,
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="has-centered-children"
      >
        <div
          className="switch-backdrop"
        >
          <div
            className="field"
            onClick={[Function]}
          >
            <input
              checked={true}
              className="switch is-rounded short-and-wide"
              onChange={[Function]}
              type="checkbox"
            />
            <label>
              <FormattedMessage
                defaultMessage="Track this Task"
                id="Task.controls.track.label"
                values={Object {}}
              />
            </label>
          </div>
        </div>
      </div>,
      "className": "task-track-controls",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="switch-backdrop"
        >
          <div
            className="field"
            onClick={[Function]}
          >
            <input
              checked={true}
              className="switch is-rounded short-and-wide"
              onChange={[Function]}
              type="checkbox"
            />
            <label>
              <FormattedMessage
                defaultMessage="Track this Task"
                id="Task.controls.track.label"
                values={Object {}}
              />
            </label>
          </div>
        </div>,
        "className": "has-centered-children",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="field"
            onClick={[Function]}
          >
            <input
              checked={true}
              className="switch is-rounded short-and-wide"
              onChange={[Function]}
              type="checkbox"
            />
            <label>
              <FormattedMessage
                defaultMessage="Track this Task"
                id="Task.controls.track.label"
                values={Object {}}
              />
            </label>
          </div>,
          "className": "switch-backdrop",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                checked={true}
                className="switch is-rounded short-and-wide"
                onChange={[Function]}
                type="checkbox"
              />,
              <label>
                <FormattedMessage
                  defaultMessage="Track this Task"
                  id="Task.controls.track.label"
                  values={Object {}}
                />
              </label>,
            ],
            "className": "field",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "checked": true,
                "className": "switch is-rounded short-and-wide",
                "onChange": [Function],
                "type": "checkbox",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <FormattedMessage
                  defaultMessage="Track this Task"
                  id="Task.controls.track.label"
                  values={Object {}}
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultMessage": "Track this Task",
                  "id": "Task.controls.track.label",
                  "values": Object {},
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "label",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="has-centered-children"
        >
          <div
            className="switch-backdrop"
          >
            <div
              className="field"
              onClick={[Function]}
            >
              <input
                checked={true}
                className="switch is-rounded short-and-wide"
                onChange={[Function]}
                type="checkbox"
              />
              <label>
                <FormattedMessage
                  defaultMessage="Track this Task"
                  id="Task.controls.track.label"
                  values={Object {}}
                />
              </label>
            </div>
          </div>
        </div>,
        "className": "task-track-controls",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="switch-backdrop"
          >
            <div
              className="field"
              onClick={[Function]}
            >
              <input
                checked={true}
                className="switch is-rounded short-and-wide"
                onChange={[Function]}
                type="checkbox"
              />
              <label>
                <FormattedMessage
                  defaultMessage="Track this Task"
                  id="Task.controls.track.label"
                  values={Object {}}
                />
              </label>
            </div>
          </div>,
          "className": "has-centered-children",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="field"
              onClick={[Function]}
            >
              <input
                checked={true}
                className="switch is-rounded short-and-wide"
                onChange={[Function]}
                type="checkbox"
              />
              <label>
                <FormattedMessage
                  defaultMessage="Track this Task"
                  id="Task.controls.track.label"
                  values={Object {}}
                />
              </label>
            </div>,
            "className": "switch-backdrop",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  checked={true}
                  className="switch is-rounded short-and-wide"
                  onChange={[Function]}
                  type="checkbox"
                />,
                <label>
                  <FormattedMessage
                    defaultMessage="Track this Task"
                    id="Task.controls.track.label"
                    values={Object {}}
                  />
                </label>,
              ],
              "className": "field",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "checked": true,
                  "className": "switch is-rounded short-and-wide",
                  "onChange": [Function],
                  "type": "checkbox",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <FormattedMessage
                    defaultMessage="Track this Task"
                    id="Task.controls.track.label"
                    values={Object {}}
                  />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultMessage": "Track this Task",
                    "id": "Task.controls.track.label",
                    "values": Object {},
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "label",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`the toggle switch is not checked if the task is not saved 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskTrackControls
    intl={
      Object {
        "formatMessage": [MockFunction],
      }
    }
    saveTask={[MockFunction]}
    task={
      Object {
        "id": 123,
        "parent": Object {
          "id": 321,
        },
        "status": 1,
      }
    }
    unsaveTask={[MockFunction]}
    user={
      Object {
        "id": 357,
        "isLoggedIn": true,
        "savedTasks": Array [],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="has-centered-children"
      >
        <div
          className="switch-backdrop"
        >
          <div
            className="field"
            onClick={[Function]}
          >
            <input
              checked={false}
              className="switch is-rounded short-and-wide"
              onChange={[Function]}
              type="checkbox"
            />
            <label>
              <FormattedMessage
                defaultMessage="Track this Task"
                id="Task.controls.track.label"
                values={Object {}}
              />
            </label>
          </div>
        </div>
      </div>,
      "className": "task-track-controls",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="switch-backdrop"
        >
          <div
            className="field"
            onClick={[Function]}
          >
            <input
              checked={false}
              className="switch is-rounded short-and-wide"
              onChange={[Function]}
              type="checkbox"
            />
            <label>
              <FormattedMessage
                defaultMessage="Track this Task"
                id="Task.controls.track.label"
                values={Object {}}
              />
            </label>
          </div>
        </div>,
        "className": "has-centered-children",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="field"
            onClick={[Function]}
          >
            <input
              checked={false}
              className="switch is-rounded short-and-wide"
              onChange={[Function]}
              type="checkbox"
            />
            <label>
              <FormattedMessage
                defaultMessage="Track this Task"
                id="Task.controls.track.label"
                values={Object {}}
              />
            </label>
          </div>,
          "className": "switch-backdrop",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                checked={false}
                className="switch is-rounded short-and-wide"
                onChange={[Function]}
                type="checkbox"
              />,
              <label>
                <FormattedMessage
                  defaultMessage="Track this Task"
                  id="Task.controls.track.label"
                  values={Object {}}
                />
              </label>,
            ],
            "className": "field",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "checked": false,
                "className": "switch is-rounded short-and-wide",
                "onChange": [Function],
                "type": "checkbox",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <FormattedMessage
                  defaultMessage="Track this Task"
                  id="Task.controls.track.label"
                  values={Object {}}
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultMessage": "Track this Task",
                  "id": "Task.controls.track.label",
                  "values": Object {},
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "label",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="has-centered-children"
        >
          <div
            className="switch-backdrop"
          >
            <div
              className="field"
              onClick={[Function]}
            >
              <input
                checked={false}
                className="switch is-rounded short-and-wide"
                onChange={[Function]}
                type="checkbox"
              />
              <label>
                <FormattedMessage
                  defaultMessage="Track this Task"
                  id="Task.controls.track.label"
                  values={Object {}}
                />
              </label>
            </div>
          </div>
        </div>,
        "className": "task-track-controls",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="switch-backdrop"
          >
            <div
              className="field"
              onClick={[Function]}
            >
              <input
                checked={false}
                className="switch is-rounded short-and-wide"
                onChange={[Function]}
                type="checkbox"
              />
              <label>
                <FormattedMessage
                  defaultMessage="Track this Task"
                  id="Task.controls.track.label"
                  values={Object {}}
                />
              </label>
            </div>
          </div>,
          "className": "has-centered-children",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="field"
              onClick={[Function]}
            >
              <input
                checked={false}
                className="switch is-rounded short-and-wide"
                onChange={[Function]}
                type="checkbox"
              />
              <label>
                <FormattedMessage
                  defaultMessage="Track this Task"
                  id="Task.controls.track.label"
                  values={Object {}}
                />
              </label>
            </div>,
            "className": "switch-backdrop",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  checked={false}
                  className="switch is-rounded short-and-wide"
                  onChange={[Function]}
                  type="checkbox"
                />,
                <label>
                  <FormattedMessage
                    defaultMessage="Track this Task"
                    id="Task.controls.track.label"
                    values={Object {}}
                  />
                </label>,
              ],
              "className": "field",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "checked": false,
                  "className": "switch is-rounded short-and-wide",
                  "onChange": [Function],
                  "type": "checkbox",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <FormattedMessage
                    defaultMessage="Track this Task"
                    id="Task.controls.track.label"
                    values={Object {}}
                  />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultMessage": "Track this Task",
                    "id": "Task.controls.track.label",
                    "values": Object {},
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "label",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
