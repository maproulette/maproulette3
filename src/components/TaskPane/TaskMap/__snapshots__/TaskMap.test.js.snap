// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders with props as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskMap
    centerPoint={
        Object {
            "lat": 0,
            "lng": 0,
          }
    }
    setTaskMapBounds={[Function]}
    task={
        Object {
            "geometries": Object {
              "features": null,
            },
            "id": 2,
            "parent": Object {
              "defaultZoom": 2,
              "maxZoom": 0,
              "minZoom": 1,
            },
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Connect(Connect(Connect(InjectIntl(_WithLayerSources))))
          centerPoint={
                    Object {
                              "lat": 0,
                              "lng": 0,
                            }
          }
          setTaskMapBounds={[Function]}
          showTaskFeatures={true}
          task={
                    Object {
                              "geometries": Object {
                                "features": null,
                              },
                              "id": 2,
                              "parent": Object {
                                "defaultZoom": 2,
                                "maxZoom": 0,
                                "minZoom": 1,
                              },
                            }
          }
          toggleTaskFeatures={[Function]}
/>,
        <EnhancedMap
          animateFeatures={true}
          center={
                    Object {
                              "lat": 0,
                              "lng": 0,
                            }
          }
          features={null}
          fitFeaturesOnlyOnce={true}
          justFitFeatures={false}
          maxZoom={0}
          minZoom={1}
          onBoundsChange={[Function]}
          setInitialBounds={true}
          zoom={2}
          zoomControl={false}
>
          <ZoomControl
                    position="topright"
          />
          <InjectIntl(FitBoundsControl) />
          <Connect(Connect(Connect(InjectIntl(SourcedTileLayer))))
                    centerPoint={
                              Object {
                                        "lat": 0,
                                        "lng": 0,
                                      }
                    }
                    maxZoom={0}
                    setTaskMapBounds={[Function]}
                    task={
                              Object {
                                        "geometries": Object {
                                          "features": null,
                                        },
                                        "id": 2,
                                        "parent": Object {
                                          "defaultZoom": 2,
                                          "maxZoom": 0,
                                          "minZoom": 1,
                                        },
                                      }
                    }
          />
</EnhancedMap>,
      ],
      "className": "task-map full-screen-map task",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "centerPoint": Object {
            "lat": 0,
            "lng": 0,
          },
          "setTaskMapBounds": [Function],
          "showTaskFeatures": true,
          "task": Object {
            "geometries": Object {
              "features": null,
            },
            "id": 2,
            "parent": Object {
              "defaultZoom": 2,
              "maxZoom": 0,
              "minZoom": 1,
            },
          },
          "toggleTaskFeatures": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "animateFeatures": true,
          "center": Object {
            "lat": 0,
            "lng": 0,
          },
          "children": Array [
            <ZoomControl
              position="topright"
/>,
            <InjectIntl(FitBoundsControl) />,
            <Connect(Connect(Connect(InjectIntl(SourcedTileLayer))))
              centerPoint={
                            Object {
                                          "lat": 0,
                                          "lng": 0,
                                        }
              }
              maxZoom={0}
              setTaskMapBounds={[Function]}
              task={
                            Object {
                                          "geometries": Object {
                                            "features": null,
                                          },
                                          "id": 2,
                                          "parent": Object {
                                            "defaultZoom": 2,
                                            "maxZoom": 0,
                                            "minZoom": 1,
                                          },
                                        }
              }
/>,
          ],
          "features": null,
          "fitFeaturesOnlyOnce": true,
          "justFitFeatures": false,
          "maxZoom": 0,
          "minZoom": 1,
          "onBoundsChange": [Function],
          "setInitialBounds": true,
          "zoom": 2,
          "zoomControl": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "position": "topright",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "centerPoint": Object {
                "lat": 0,
                "lng": 0,
              },
              "maxZoom": 0,
              "setTaskMapBounds": [Function],
              "task": Object {
                "geometries": Object {
                  "features": null,
                },
                "id": 2,
                "parent": Object {
                  "defaultZoom": 2,
                  "maxZoom": 0,
                  "minZoom": 1,
                },
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(Connect(Connect(InjectIntl(_WithLayerSources))))
            centerPoint={
                        Object {
                                    "lat": 0,
                                    "lng": 0,
                                  }
            }
            setTaskMapBounds={[Function]}
            showTaskFeatures={true}
            task={
                        Object {
                                    "geometries": Object {
                                      "features": null,
                                    },
                                    "id": 2,
                                    "parent": Object {
                                      "defaultZoom": 2,
                                      "maxZoom": 0,
                                      "minZoom": 1,
                                    },
                                  }
            }
            toggleTaskFeatures={[Function]}
/>,
          <EnhancedMap
            animateFeatures={true}
            center={
                        Object {
                                    "lat": 0,
                                    "lng": 0,
                                  }
            }
            features={null}
            fitFeaturesOnlyOnce={true}
            justFitFeatures={false}
            maxZoom={0}
            minZoom={1}
            onBoundsChange={[Function]}
            setInitialBounds={true}
            zoom={2}
            zoomControl={false}
>
            <ZoomControl
                        position="topright"
            />
            <InjectIntl(FitBoundsControl) />
            <Connect(Connect(Connect(InjectIntl(SourcedTileLayer))))
                        centerPoint={
                                    Object {
                                                "lat": 0,
                                                "lng": 0,
                                              }
                        }
                        maxZoom={0}
                        setTaskMapBounds={[Function]}
                        task={
                                    Object {
                                                "geometries": Object {
                                                  "features": null,
                                                },
                                                "id": 2,
                                                "parent": Object {
                                                  "defaultZoom": 2,
                                                  "maxZoom": 0,
                                                  "minZoom": 1,
                                                },
                                              }
                        }
            />
</EnhancedMap>,
        ],
        "className": "task-map full-screen-map task",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "centerPoint": Object {
              "lat": 0,
              "lng": 0,
            },
            "setTaskMapBounds": [Function],
            "showTaskFeatures": true,
            "task": Object {
              "geometries": Object {
                "features": null,
              },
              "id": 2,
              "parent": Object {
                "defaultZoom": 2,
                "maxZoom": 0,
                "minZoom": 1,
              },
            },
            "toggleTaskFeatures": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "animateFeatures": true,
            "center": Object {
              "lat": 0,
              "lng": 0,
            },
            "children": Array [
              <ZoomControl
                position="topright"
/>,
              <InjectIntl(FitBoundsControl) />,
              <Connect(Connect(Connect(InjectIntl(SourcedTileLayer))))
                centerPoint={
                                Object {
                                                "lat": 0,
                                                "lng": 0,
                                              }
                }
                maxZoom={0}
                setTaskMapBounds={[Function]}
                task={
                                Object {
                                                "geometries": Object {
                                                  "features": null,
                                                },
                                                "id": 2,
                                                "parent": Object {
                                                  "defaultZoom": 2,
                                                  "maxZoom": 0,
                                                  "minZoom": 1,
                                                },
                                              }
                }
/>,
            ],
            "features": null,
            "fitFeaturesOnlyOnce": true,
            "justFitFeatures": false,
            "maxZoom": 0,
            "minZoom": 1,
            "onBoundsChange": [Function],
            "setInitialBounds": true,
            "zoom": 2,
            "zoomControl": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "position": "topright",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "centerPoint": Object {
                  "lat": 0,
                  "lng": 0,
                },
                "maxZoom": 0,
                "setTaskMapBounds": [Function],
                "task": Object {
                  "geometries": Object {
                    "features": null,
                  },
                  "id": 2,
                  "parent": Object {
                    "defaultZoom": 2,
                    "maxZoom": 0,
                    "minZoom": 1,
                  },
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
