// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders the challenge tags 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ChallengeKeywords
    challenge={
      Object {
        "id": 123,
        "tags": Array [
          "foo",
          "bar",
          "baz",
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span
          className="tag"
        >
          foo
        </span>,
        <span
          className="tag"
        >
          bar
        </span>,
        <span
          className="tag"
        >
          baz
        </span>,
      ],
      "className": "challenge-keywords",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "foo",
        "nodeType": "host",
        "props": Object {
          "children": "foo",
          "className": "tag",
        },
        "ref": null,
        "rendered": "foo",
        "type": "span",
      },
      Object {
        "instance": null,
        "key": "bar",
        "nodeType": "host",
        "props": Object {
          "children": "bar",
          "className": "tag",
        },
        "ref": null,
        "rendered": "bar",
        "type": "span",
      },
      Object {
        "instance": null,
        "key": "baz",
        "nodeType": "host",
        "props": Object {
          "children": "baz",
          "className": "tag",
        },
        "ref": null,
        "rendered": "baz",
        "type": "span",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className="tag"
          >
            foo
          </span>,
          <span
            className="tag"
          >
            bar
          </span>,
          <span
            className="tag"
          >
            baz
          </span>,
        ],
        "className": "challenge-keywords",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "foo",
          "nodeType": "host",
          "props": Object {
            "children": "foo",
            "className": "tag",
          },
          "ref": null,
          "rendered": "foo",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": "bar",
          "nodeType": "host",
          "props": Object {
            "children": "bar",
            "className": "tag",
          },
          "ref": null,
          "rendered": "bar",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": "baz",
          "nodeType": "host",
          "props": Object {
            "children": "baz",
            "className": "tag",
          },
          "ref": null,
          "rendered": "baz",
          "type": "span",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
