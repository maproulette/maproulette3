// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`a busy indicator is displayed if tasks are loading 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ChallengeBrowseMap
    browsedChallenge={
      Object {
        "id": 123,
      }
    }
    mapBounds={
      Object {
        "challengeBrowse": Object {
          "bounds": Object {
            "_northEast": Object {
              "lat": 0,
              "lng": 0,
            },
            "_southWest": Object {
              "lat": 0,
              "lng": 0,
            },
          },
          "challengeId": 123,
        },
      }
    }
    setChallengeBrowseMapBounds={[MockFunction]}
    source={
      Object {
        "id": "foo",
      }
    }
    taskMarkers={Array []}
    tasksLoading={true}
    visibleOverlays={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": "123",
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Connect(Connect(Connect(InjectIntl(_WithLayerSources))))
          browsedChallenge={
            Object {
              "id": 123,
            }
          }
          mapBounds={
            Object {
              "challengeBrowse": Object {
                "bounds": Object {
                  "_northEast": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                  "_southWest": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                },
                "challengeId": 123,
              },
            }
          }
          setChallengeBrowseMapBounds={[MockFunction]}
          source={
            Object {
              "id": "foo",
            }
          }
          taskMarkers={Array []}
          tasksLoading={true}
          visibleOverlays={Array []}
        />,
        <EnhancedMap
          animate={true}
          animateFeatures={false}
          center={
            Object {
              "lat": 0,
              "lng": 45,
            }
          }
          initialBounds={null}
          justFitFeatures={false}
          maxZoom={18}
          minZoom={2}
          onBoundsChange={[Function]}
          setInitialBounds={false}
          worldCopyJump={true}
          zoom={3}
          zoomControl={false}
        >
          <ZoomControl
            position="topright"
          />
          <Connect(Connect(Connect(InjectIntl(SourcedTileLayer))))
            browsedChallenge={
              Object {
                "id": 123,
              }
            }
            mapBounds={
              Object {
                "challengeBrowse": Object {
                  "bounds": Object {
                    "_northEast": Object {
                      "lat": 0,
                      "lng": 0,
                    },
                    "_southWest": Object {
                      "lat": 0,
                      "lng": 0,
                    },
                  },
                  "challengeId": 123,
                },
              }
            }
            setChallengeBrowseMapBounds={[MockFunction]}
            source={
              Object {
                "id": "foo",
              }
            }
            taskMarkers={Array []}
            tasksLoading={true}
            visibleOverlays={Array []}
            zIndex={1}
          />
        </EnhancedMap>,
        <BusySpinner />,
      ],
      "className": "full-screen-map",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "browsedChallenge": Object {
            "id": 123,
          },
          "mapBounds": Object {
            "challengeBrowse": Object {
              "bounds": Object {
                "_northEast": Object {
                  "lat": 0,
                  "lng": 0,
                },
                "_southWest": Object {
                  "lat": 0,
                  "lng": 0,
                },
              },
              "challengeId": 123,
            },
          },
          "setChallengeBrowseMapBounds": [MockFunction],
          "source": Object {
            "id": "foo",
          },
          "taskMarkers": Array [],
          "tasksLoading": true,
          "visibleOverlays": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "animate": true,
          "animateFeatures": false,
          "center": Object {
            "lat": 0,
            "lng": 45,
          },
          "children": Array [
            <ZoomControl
              position="topright"
            />,
            <Connect(Connect(Connect(InjectIntl(SourcedTileLayer))))
              browsedChallenge={
                Object {
                  "id": 123,
                }
              }
              mapBounds={
                Object {
                  "challengeBrowse": Object {
                    "bounds": Object {
                      "_northEast": Object {
                        "lat": 0,
                        "lng": 0,
                      },
                      "_southWest": Object {
                        "lat": 0,
                        "lng": 0,
                      },
                    },
                    "challengeId": 123,
                  },
                }
              }
              setChallengeBrowseMapBounds={[MockFunction]}
              source={
                Object {
                  "id": "foo",
                }
              }
              taskMarkers={Array []}
              tasksLoading={true}
              visibleOverlays={Array []}
              zIndex={1}
            />,
            Array [],
            false,
          ],
          "features": undefined,
          "initialBounds": null,
          "justFitFeatures": false,
          "maxZoom": 18,
          "minZoom": 2,
          "onBoundsChange": [Function],
          "setInitialBounds": false,
          "worldCopyJump": true,
          "zoom": 3,
          "zoomControl": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "position": "topright",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "browsedChallenge": Object {
                "id": 123,
              },
              "mapBounds": Object {
                "challengeBrowse": Object {
                  "bounds": Object {
                    "_northEast": Object {
                      "lat": 0,
                      "lng": 0,
                    },
                    "_southWest": Object {
                      "lat": 0,
                      "lng": 0,
                    },
                  },
                  "challengeId": 123,
                },
              },
              "setChallengeBrowseMapBounds": [MockFunction],
              "source": Object {
                "id": "foo",
              },
              "taskMarkers": Array [],
              "tasksLoading": true,
              "visibleOverlays": Array [],
              "zIndex": 1,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          false,
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": "123",
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(Connect(Connect(InjectIntl(_WithLayerSources))))
            browsedChallenge={
              Object {
                "id": 123,
              }
            }
            mapBounds={
              Object {
                "challengeBrowse": Object {
                  "bounds": Object {
                    "_northEast": Object {
                      "lat": 0,
                      "lng": 0,
                    },
                    "_southWest": Object {
                      "lat": 0,
                      "lng": 0,
                    },
                  },
                  "challengeId": 123,
                },
              }
            }
            setChallengeBrowseMapBounds={[MockFunction]}
            source={
              Object {
                "id": "foo",
              }
            }
            taskMarkers={Array []}
            tasksLoading={true}
            visibleOverlays={Array []}
          />,
          <EnhancedMap
            animate={true}
            animateFeatures={false}
            center={
              Object {
                "lat": 0,
                "lng": 45,
              }
            }
            initialBounds={null}
            justFitFeatures={false}
            maxZoom={18}
            minZoom={2}
            onBoundsChange={[Function]}
            setInitialBounds={false}
            worldCopyJump={true}
            zoom={3}
            zoomControl={false}
          >
            <ZoomControl
              position="topright"
            />
            <Connect(Connect(Connect(InjectIntl(SourcedTileLayer))))
              browsedChallenge={
                Object {
                  "id": 123,
                }
              }
              mapBounds={
                Object {
                  "challengeBrowse": Object {
                    "bounds": Object {
                      "_northEast": Object {
                        "lat": 0,
                        "lng": 0,
                      },
                      "_southWest": Object {
                        "lat": 0,
                        "lng": 0,
                      },
                    },
                    "challengeId": 123,
                  },
                }
              }
              setChallengeBrowseMapBounds={[MockFunction]}
              source={
                Object {
                  "id": "foo",
                }
              }
              taskMarkers={Array []}
              tasksLoading={true}
              visibleOverlays={Array []}
              zIndex={1}
            />
          </EnhancedMap>,
          <BusySpinner />,
        ],
        "className": "full-screen-map",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "browsedChallenge": Object {
              "id": 123,
            },
            "mapBounds": Object {
              "challengeBrowse": Object {
                "bounds": Object {
                  "_northEast": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                  "_southWest": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                },
                "challengeId": 123,
              },
            },
            "setChallengeBrowseMapBounds": [MockFunction],
            "source": Object {
              "id": "foo",
            },
            "taskMarkers": Array [],
            "tasksLoading": true,
            "visibleOverlays": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "animate": true,
            "animateFeatures": false,
            "center": Object {
              "lat": 0,
              "lng": 45,
            },
            "children": Array [
              <ZoomControl
                position="topright"
              />,
              <Connect(Connect(Connect(InjectIntl(SourcedTileLayer))))
                browsedChallenge={
                  Object {
                    "id": 123,
                  }
                }
                mapBounds={
                  Object {
                    "challengeBrowse": Object {
                      "bounds": Object {
                        "_northEast": Object {
                          "lat": 0,
                          "lng": 0,
                        },
                        "_southWest": Object {
                          "lat": 0,
                          "lng": 0,
                        },
                      },
                      "challengeId": 123,
                    },
                  }
                }
                setChallengeBrowseMapBounds={[MockFunction]}
                source={
                  Object {
                    "id": "foo",
                  }
                }
                taskMarkers={Array []}
                tasksLoading={true}
                visibleOverlays={Array []}
                zIndex={1}
              />,
              Array [],
              false,
            ],
            "features": undefined,
            "initialBounds": null,
            "justFitFeatures": false,
            "maxZoom": 18,
            "minZoom": 2,
            "onBoundsChange": [Function],
            "setInitialBounds": false,
            "worldCopyJump": true,
            "zoom": 3,
            "zoomControl": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "position": "topright",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "browsedChallenge": Object {
                  "id": 123,
                },
                "mapBounds": Object {
                  "challengeBrowse": Object {
                    "bounds": Object {
                      "_northEast": Object {
                        "lat": 0,
                        "lng": 0,
                      },
                      "_southWest": Object {
                        "lat": 0,
                        "lng": 0,
                      },
                    },
                    "challengeId": 123,
                  },
                },
                "setChallengeBrowseMapBounds": [MockFunction],
                "source": Object {
                  "id": "foo",
                },
                "taskMarkers": Array [],
                "tasksLoading": true,
                "visibleOverlays": Array [],
                "zIndex": 1,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            false,
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`it renders a full screen map 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ChallengeBrowseMap
    browsedChallenge={
      Object {
        "id": 123,
      }
    }
    mapBounds={
      Object {
        "challengeBrowse": Object {
          "bounds": Object {
            "_northEast": Object {
              "lat": 0,
              "lng": 0,
            },
            "_southWest": Object {
              "lat": 0,
              "lng": 0,
            },
          },
          "challengeId": 123,
        },
      }
    }
    setChallengeBrowseMapBounds={[MockFunction]}
    source={
      Object {
        "id": "foo",
      }
    }
    taskMarkers={Array []}
    visibleOverlays={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": "123",
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Connect(Connect(Connect(InjectIntl(_WithLayerSources))))
          browsedChallenge={
            Object {
              "id": 123,
            }
          }
          mapBounds={
            Object {
              "challengeBrowse": Object {
                "bounds": Object {
                  "_northEast": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                  "_southWest": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                },
                "challengeId": 123,
              },
            }
          }
          setChallengeBrowseMapBounds={[MockFunction]}
          source={
            Object {
              "id": "foo",
            }
          }
          taskMarkers={Array []}
          visibleOverlays={Array []}
        />,
        <EnhancedMap
          animate={true}
          animateFeatures={false}
          center={
            Object {
              "lat": 0,
              "lng": 45,
            }
          }
          initialBounds={null}
          justFitFeatures={false}
          maxZoom={18}
          minZoom={2}
          onBoundsChange={[Function]}
          setInitialBounds={false}
          worldCopyJump={true}
          zoom={3}
          zoomControl={false}
        >
          <ZoomControl
            position="topright"
          />
          <Connect(Connect(Connect(InjectIntl(SourcedTileLayer))))
            browsedChallenge={
              Object {
                "id": 123,
              }
            }
            mapBounds={
              Object {
                "challengeBrowse": Object {
                  "bounds": Object {
                    "_northEast": Object {
                      "lat": 0,
                      "lng": 0,
                    },
                    "_southWest": Object {
                      "lat": 0,
                      "lng": 0,
                    },
                  },
                  "challengeId": 123,
                },
              }
            }
            setChallengeBrowseMapBounds={[MockFunction]}
            source={
              Object {
                "id": "foo",
              }
            }
            taskMarkers={Array []}
            visibleOverlays={Array []}
            zIndex={1}
          />
        </EnhancedMap>,
        false,
      ],
      "className": "full-screen-map",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "browsedChallenge": Object {
            "id": 123,
          },
          "mapBounds": Object {
            "challengeBrowse": Object {
              "bounds": Object {
                "_northEast": Object {
                  "lat": 0,
                  "lng": 0,
                },
                "_southWest": Object {
                  "lat": 0,
                  "lng": 0,
                },
              },
              "challengeId": 123,
            },
          },
          "setChallengeBrowseMapBounds": [MockFunction],
          "source": Object {
            "id": "foo",
          },
          "taskMarkers": Array [],
          "visibleOverlays": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "animate": true,
          "animateFeatures": false,
          "center": Object {
            "lat": 0,
            "lng": 45,
          },
          "children": Array [
            <ZoomControl
              position="topright"
            />,
            <Connect(Connect(Connect(InjectIntl(SourcedTileLayer))))
              browsedChallenge={
                Object {
                  "id": 123,
                }
              }
              mapBounds={
                Object {
                  "challengeBrowse": Object {
                    "bounds": Object {
                      "_northEast": Object {
                        "lat": 0,
                        "lng": 0,
                      },
                      "_southWest": Object {
                        "lat": 0,
                        "lng": 0,
                      },
                    },
                    "challengeId": 123,
                  },
                }
              }
              setChallengeBrowseMapBounds={[MockFunction]}
              source={
                Object {
                  "id": "foo",
                }
              }
              taskMarkers={Array []}
              visibleOverlays={Array []}
              zIndex={1}
            />,
            Array [],
            false,
          ],
          "features": undefined,
          "initialBounds": null,
          "justFitFeatures": false,
          "maxZoom": 18,
          "minZoom": 2,
          "onBoundsChange": [Function],
          "setInitialBounds": false,
          "worldCopyJump": true,
          "zoom": 3,
          "zoomControl": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "position": "topright",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "browsedChallenge": Object {
                "id": 123,
              },
              "mapBounds": Object {
                "challengeBrowse": Object {
                  "bounds": Object {
                    "_northEast": Object {
                      "lat": 0,
                      "lng": 0,
                    },
                    "_southWest": Object {
                      "lat": 0,
                      "lng": 0,
                    },
                  },
                  "challengeId": 123,
                },
              },
              "setChallengeBrowseMapBounds": [MockFunction],
              "source": Object {
                "id": "foo",
              },
              "taskMarkers": Array [],
              "visibleOverlays": Array [],
              "zIndex": 1,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          false,
        ],
        "type": [Function],
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": "123",
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(Connect(Connect(InjectIntl(_WithLayerSources))))
            browsedChallenge={
              Object {
                "id": 123,
              }
            }
            mapBounds={
              Object {
                "challengeBrowse": Object {
                  "bounds": Object {
                    "_northEast": Object {
                      "lat": 0,
                      "lng": 0,
                    },
                    "_southWest": Object {
                      "lat": 0,
                      "lng": 0,
                    },
                  },
                  "challengeId": 123,
                },
              }
            }
            setChallengeBrowseMapBounds={[MockFunction]}
            source={
              Object {
                "id": "foo",
              }
            }
            taskMarkers={Array []}
            visibleOverlays={Array []}
          />,
          <EnhancedMap
            animate={true}
            animateFeatures={false}
            center={
              Object {
                "lat": 0,
                "lng": 45,
              }
            }
            initialBounds={null}
            justFitFeatures={false}
            maxZoom={18}
            minZoom={2}
            onBoundsChange={[Function]}
            setInitialBounds={false}
            worldCopyJump={true}
            zoom={3}
            zoomControl={false}
          >
            <ZoomControl
              position="topright"
            />
            <Connect(Connect(Connect(InjectIntl(SourcedTileLayer))))
              browsedChallenge={
                Object {
                  "id": 123,
                }
              }
              mapBounds={
                Object {
                  "challengeBrowse": Object {
                    "bounds": Object {
                      "_northEast": Object {
                        "lat": 0,
                        "lng": 0,
                      },
                      "_southWest": Object {
                        "lat": 0,
                        "lng": 0,
                      },
                    },
                    "challengeId": 123,
                  },
                }
              }
              setChallengeBrowseMapBounds={[MockFunction]}
              source={
                Object {
                  "id": "foo",
                }
              }
              taskMarkers={Array []}
              visibleOverlays={Array []}
              zIndex={1}
            />
          </EnhancedMap>,
          false,
        ],
        "className": "full-screen-map",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "browsedChallenge": Object {
              "id": 123,
            },
            "mapBounds": Object {
              "challengeBrowse": Object {
                "bounds": Object {
                  "_northEast": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                  "_southWest": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                },
                "challengeId": 123,
              },
            },
            "setChallengeBrowseMapBounds": [MockFunction],
            "source": Object {
              "id": "foo",
            },
            "taskMarkers": Array [],
            "visibleOverlays": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "animate": true,
            "animateFeatures": false,
            "center": Object {
              "lat": 0,
              "lng": 45,
            },
            "children": Array [
              <ZoomControl
                position="topright"
              />,
              <Connect(Connect(Connect(InjectIntl(SourcedTileLayer))))
                browsedChallenge={
                  Object {
                    "id": 123,
                  }
                }
                mapBounds={
                  Object {
                    "challengeBrowse": Object {
                      "bounds": Object {
                        "_northEast": Object {
                          "lat": 0,
                          "lng": 0,
                        },
                        "_southWest": Object {
                          "lat": 0,
                          "lng": 0,
                        },
                      },
                      "challengeId": 123,
                    },
                  }
                }
                setChallengeBrowseMapBounds={[MockFunction]}
                source={
                  Object {
                    "id": "foo",
                  }
                }
                taskMarkers={Array []}
                visibleOverlays={Array []}
                zIndex={1}
              />,
              Array [],
              false,
            ],
            "features": undefined,
            "initialBounds": null,
            "justFitFeatures": false,
            "maxZoom": 18,
            "minZoom": 2,
            "onBoundsChange": [Function],
            "setInitialBounds": false,
            "worldCopyJump": true,
            "zoom": 3,
            "zoomControl": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "position": "topright",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "browsedChallenge": Object {
                  "id": 123,
                },
                "mapBounds": Object {
                  "challengeBrowse": Object {
                    "bounds": Object {
                      "_northEast": Object {
                        "lat": 0,
                        "lng": 0,
                      },
                      "_southWest": Object {
                        "lat": 0,
                        "lng": 0,
                      },
                    },
                    "challengeId": 123,
                  },
                },
                "setChallengeBrowseMapBounds": [MockFunction],
                "source": Object {
                  "id": "foo",
                },
                "taskMarkers": Array [],
                "visibleOverlays": Array [],
                "zIndex": 1,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            false,
          ],
          "type": [Function],
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`the busy indicator is removed once tasks are done loading 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ChallengeBrowseMap
    browsedChallenge={
      Object {
        "id": 123,
      }
    }
    mapBounds={
      Object {
        "challengeBrowse": Object {
          "bounds": Object {
            "_northEast": Object {
              "lat": 0,
              "lng": 0,
            },
            "_southWest": Object {
              "lat": 0,
              "lng": 0,
            },
          },
          "challengeId": 123,
        },
      }
    }
    setChallengeBrowseMapBounds={[MockFunction]}
    source={
      Object {
        "id": "foo",
      }
    }
    taskMarkers={Array []}
    tasksLoading={false}
    visibleOverlays={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": "123",
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Connect(Connect(Connect(InjectIntl(_WithLayerSources))))
          browsedChallenge={
            Object {
              "id": 123,
            }
          }
          mapBounds={
            Object {
              "challengeBrowse": Object {
                "bounds": Object {
                  "_northEast": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                  "_southWest": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                },
                "challengeId": 123,
              },
            }
          }
          setChallengeBrowseMapBounds={[MockFunction]}
          source={
            Object {
              "id": "foo",
            }
          }
          taskMarkers={Array []}
          tasksLoading={false}
          visibleOverlays={Array []}
        />,
        <EnhancedMap
          animate={true}
          animateFeatures={false}
          center={
            Object {
              "lat": 0,
              "lng": 45,
            }
          }
          initialBounds={null}
          justFitFeatures={false}
          maxZoom={18}
          minZoom={2}
          onBoundsChange={[Function]}
          setInitialBounds={false}
          worldCopyJump={true}
          zoom={3}
          zoomControl={false}
        >
          <ZoomControl
            position="topright"
          />
          <Connect(Connect(Connect(InjectIntl(SourcedTileLayer))))
            browsedChallenge={
              Object {
                "id": 123,
              }
            }
            mapBounds={
              Object {
                "challengeBrowse": Object {
                  "bounds": Object {
                    "_northEast": Object {
                      "lat": 0,
                      "lng": 0,
                    },
                    "_southWest": Object {
                      "lat": 0,
                      "lng": 0,
                    },
                  },
                  "challengeId": 123,
                },
              }
            }
            setChallengeBrowseMapBounds={[MockFunction]}
            source={
              Object {
                "id": "foo",
              }
            }
            taskMarkers={Array []}
            tasksLoading={false}
            visibleOverlays={Array []}
            zIndex={1}
          />
        </EnhancedMap>,
        false,
      ],
      "className": "full-screen-map",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "browsedChallenge": Object {
            "id": 123,
          },
          "mapBounds": Object {
            "challengeBrowse": Object {
              "bounds": Object {
                "_northEast": Object {
                  "lat": 0,
                  "lng": 0,
                },
                "_southWest": Object {
                  "lat": 0,
                  "lng": 0,
                },
              },
              "challengeId": 123,
            },
          },
          "setChallengeBrowseMapBounds": [MockFunction],
          "source": Object {
            "id": "foo",
          },
          "taskMarkers": Array [],
          "tasksLoading": false,
          "visibleOverlays": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "animate": true,
          "animateFeatures": false,
          "center": Object {
            "lat": 0,
            "lng": 45,
          },
          "children": Array [
            <ZoomControl
              position="topright"
            />,
            <Connect(Connect(Connect(InjectIntl(SourcedTileLayer))))
              browsedChallenge={
                Object {
                  "id": 123,
                }
              }
              mapBounds={
                Object {
                  "challengeBrowse": Object {
                    "bounds": Object {
                      "_northEast": Object {
                        "lat": 0,
                        "lng": 0,
                      },
                      "_southWest": Object {
                        "lat": 0,
                        "lng": 0,
                      },
                    },
                    "challengeId": 123,
                  },
                }
              }
              setChallengeBrowseMapBounds={[MockFunction]}
              source={
                Object {
                  "id": "foo",
                }
              }
              taskMarkers={Array []}
              tasksLoading={false}
              visibleOverlays={Array []}
              zIndex={1}
            />,
            Array [],
            false,
          ],
          "features": undefined,
          "initialBounds": null,
          "justFitFeatures": false,
          "maxZoom": 18,
          "minZoom": 2,
          "onBoundsChange": [Function],
          "setInitialBounds": false,
          "worldCopyJump": true,
          "zoom": 3,
          "zoomControl": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "position": "topright",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "browsedChallenge": Object {
                "id": 123,
              },
              "mapBounds": Object {
                "challengeBrowse": Object {
                  "bounds": Object {
                    "_northEast": Object {
                      "lat": 0,
                      "lng": 0,
                    },
                    "_southWest": Object {
                      "lat": 0,
                      "lng": 0,
                    },
                  },
                  "challengeId": 123,
                },
              },
              "setChallengeBrowseMapBounds": [MockFunction],
              "source": Object {
                "id": "foo",
              },
              "taskMarkers": Array [],
              "tasksLoading": false,
              "visibleOverlays": Array [],
              "zIndex": 1,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          false,
        ],
        "type": [Function],
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": "123",
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(Connect(Connect(InjectIntl(_WithLayerSources))))
            browsedChallenge={
              Object {
                "id": 123,
              }
            }
            mapBounds={
              Object {
                "challengeBrowse": Object {
                  "bounds": Object {
                    "_northEast": Object {
                      "lat": 0,
                      "lng": 0,
                    },
                    "_southWest": Object {
                      "lat": 0,
                      "lng": 0,
                    },
                  },
                  "challengeId": 123,
                },
              }
            }
            setChallengeBrowseMapBounds={[MockFunction]}
            source={
              Object {
                "id": "foo",
              }
            }
            taskMarkers={Array []}
            tasksLoading={false}
            visibleOverlays={Array []}
          />,
          <EnhancedMap
            animate={true}
            animateFeatures={false}
            center={
              Object {
                "lat": 0,
                "lng": 45,
              }
            }
            initialBounds={null}
            justFitFeatures={false}
            maxZoom={18}
            minZoom={2}
            onBoundsChange={[Function]}
            setInitialBounds={false}
            worldCopyJump={true}
            zoom={3}
            zoomControl={false}
          >
            <ZoomControl
              position="topright"
            />
            <Connect(Connect(Connect(InjectIntl(SourcedTileLayer))))
              browsedChallenge={
                Object {
                  "id": 123,
                }
              }
              mapBounds={
                Object {
                  "challengeBrowse": Object {
                    "bounds": Object {
                      "_northEast": Object {
                        "lat": 0,
                        "lng": 0,
                      },
                      "_southWest": Object {
                        "lat": 0,
                        "lng": 0,
                      },
                    },
                    "challengeId": 123,
                  },
                }
              }
              setChallengeBrowseMapBounds={[MockFunction]}
              source={
                Object {
                  "id": "foo",
                }
              }
              taskMarkers={Array []}
              tasksLoading={false}
              visibleOverlays={Array []}
              zIndex={1}
            />
          </EnhancedMap>,
          false,
        ],
        "className": "full-screen-map",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "browsedChallenge": Object {
              "id": 123,
            },
            "mapBounds": Object {
              "challengeBrowse": Object {
                "bounds": Object {
                  "_northEast": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                  "_southWest": Object {
                    "lat": 0,
                    "lng": 0,
                  },
                },
                "challengeId": 123,
              },
            },
            "setChallengeBrowseMapBounds": [MockFunction],
            "source": Object {
              "id": "foo",
            },
            "taskMarkers": Array [],
            "tasksLoading": false,
            "visibleOverlays": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "animate": true,
            "animateFeatures": false,
            "center": Object {
              "lat": 0,
              "lng": 45,
            },
            "children": Array [
              <ZoomControl
                position="topright"
              />,
              <Connect(Connect(Connect(InjectIntl(SourcedTileLayer))))
                browsedChallenge={
                  Object {
                    "id": 123,
                  }
                }
                mapBounds={
                  Object {
                    "challengeBrowse": Object {
                      "bounds": Object {
                        "_northEast": Object {
                          "lat": 0,
                          "lng": 0,
                        },
                        "_southWest": Object {
                          "lat": 0,
                          "lng": 0,
                        },
                      },
                      "challengeId": 123,
                    },
                  }
                }
                setChallengeBrowseMapBounds={[MockFunction]}
                source={
                  Object {
                    "id": "foo",
                  }
                }
                taskMarkers={Array []}
                tasksLoading={false}
                visibleOverlays={Array []}
                zIndex={1}
              />,
              Array [],
              false,
            ],
            "features": undefined,
            "initialBounds": null,
            "justFitFeatures": false,
            "maxZoom": 18,
            "minZoom": 2,
            "onBoundsChange": [Function],
            "setInitialBounds": false,
            "worldCopyJump": true,
            "zoom": 3,
            "zoomControl": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "position": "topright",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "browsedChallenge": Object {
                  "id": 123,
                },
                "mapBounds": Object {
                  "challengeBrowse": Object {
                    "bounds": Object {
                      "_northEast": Object {
                        "lat": 0,
                        "lng": 0,
                      },
                      "_southWest": Object {
                        "lat": 0,
                        "lng": 0,
                      },
                    },
                    "challengeId": 123,
                  },
                },
                "setChallengeBrowseMapBounds": [MockFunction],
                "source": Object {
                  "id": "foo",
                },
                "taskMarkers": Array [],
                "tasksLoading": false,
                "visibleOverlays": Array [],
                "zIndex": 1,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            false,
          ],
          "type": [Function],
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
