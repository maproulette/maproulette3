// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`it renders a badge with is-empty class for empty comments 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CommentCountBadge
    comments={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <span
        className="badge is-badge-outlined is-empty"
        data-badge={0}
      >
        <SvgSymbol
          sym="chat-icon"
          viewBox="0 0 20 20"
        />
      </span>,
      "className": "comment-count-badge",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <SvgSymbol
          sym="chat-icon"
          viewBox="0 0 20 20"
        />,
        "className": "badge is-badge-outlined is-empty",
        "data-badge": 0,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "sym": "chat-icon",
          "viewBox": "0 0 20 20",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "span",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <span
          className="badge is-badge-outlined is-empty"
          data-badge={0}
        >
          <SvgSymbol
            sym="chat-icon"
            viewBox="0 0 20 20"
          />
        </span>,
        "className": "comment-count-badge",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <SvgSymbol
            sym="chat-icon"
            viewBox="0 0 20 20"
          />,
          "className": "badge is-badge-outlined is-empty",
          "data-badge": 0,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "sym": "chat-icon",
            "viewBox": "0 0 20 20",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "span",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`it renders a badge with the count of the given comments 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CommentCountBadge
    comments={
      Array [
        Object {
          "id": 123,
        },
        Object {
          "id": 456,
        },
        Object {
          "id": 789,
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <span
        className="badge is-badge-outlined"
        data-badge={3}
      >
        <SvgSymbol
          sym="chat-icon"
          viewBox="0 0 20 20"
        />
      </span>,
      "className": "comment-count-badge",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <SvgSymbol
          sym="chat-icon"
          viewBox="0 0 20 20"
        />,
        "className": "badge is-badge-outlined",
        "data-badge": 3,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "sym": "chat-icon",
          "viewBox": "0 0 20 20",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "span",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <span
          className="badge is-badge-outlined"
          data-badge={3}
        >
          <SvgSymbol
            sym="chat-icon"
            viewBox="0 0 20 20"
          />
        </span>,
        "className": "comment-count-badge",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <SvgSymbol
            sym="chat-icon"
            viewBox="0 0 20 20"
          />,
          "className": "badge is-badge-outlined",
          "data-badge": 3,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "sym": "chat-icon",
            "viewBox": "0 0 20 20",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "span",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
