// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`does not show an admin link if user is not signed in 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Navbar
    location={
      Object {
        "pathname": "/some/path",
      }
    }
    user={
      Object {
        "id": 357,
        "isLoggedIn": false,
        "osmProfile": Object {
          "avatarURL": "http://example.com/profilepic.jpg",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "aria-label": "main navigation",
      "children": Array [
        <div
          className="navbar-brand"
        >
          <Link
            className="navbar-item top-nav__home-link"
            replace={false}
            to="/"
          >
            <SvgSymbol
              className="navbar__logo"
              sym="mr-logo"
              viewBox="0 0 20 20"
            />
            <span
              className="is-size-4"
            >
              <span
                className="has-text-weight-bold"
              >
                Map
              </span>
              Roulette
            </span>
          </Link>
        </div>,
        <MediaQuery
          query="(min-width: 1024px)"
          values={Object {}}
        >
          <div
            className="navbar-menu"
          >
            <div
              className="navbar-start"
            >
              <NavbarPrimaryLinks
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
            </div>
            <div
              className="navbar-end"
            >
              <InjectIntl(AccountNavItem)
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
            </div>
          </div>
        </MediaQuery>,
        <MediaQuery
          query="(max-width: 1023px)"
          values={Object {}}
        >
          <Menu
            bodyClassName=""
            burgerBarClassName=""
            burgerButtonClassName=""
            className=""
            crossButtonClassName=""
            crossClassName=""
            customBurgerIcon={
              <SvgSymbol
                sym="menu-icon"
                viewBox="0 0 20 20"
              />
            }
            customCrossIcon={
              <SvgSymbol
                sym="cross-icon"
                viewBox="0 0 20 20"
              />
            }
            disableCloseOnEsc={false}
            id=""
            isOpen={false}
            itemListClassName=""
            menuClassName=""
            morphShapeClassName=""
            noOverlay={false}
            onStateChange={[Function]}
            outerContainerId=""
            overlayClassName=""
            pageWrapId=""
            right={true}
            styles={
              Object {
                "bmCrossButton": Object {
                  "right": "16px",
                  "top": "20px",
                },
                "bmMenuWrap": Object {
                  "width": "275px",
                },
                "bmOverlay": Object {
                  "background": "rgb(0,165,146, 0.7)",
                },
              }
            }
            width={300}
          >
            <Connect(SignInButton)
              className="white-on-green top-nav__signin-link"
              location={
                Object {
                  "pathname": "/some/path",
                }
              }
              user={
                Object {
                  "id": 357,
                  "isLoggedIn": false,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                }
              }
            />
            <NavbarPrimaryLinks
              location={
                Object {
                  "pathname": "/some/path",
                }
              }
              onLinkClick={[Function]}
              user={
                Object {
                  "id": 357,
                  "isLoggedIn": false,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                }
              }
            />
          </Menu>
        </MediaQuery>,
      ],
      "className": "navbar top-nav",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Link
            className="navbar-item top-nav__home-link"
            replace={false}
            to="/"
          >
            <SvgSymbol
              className="navbar__logo"
              sym="mr-logo"
              viewBox="0 0 20 20"
            />
            <span
              className="is-size-4"
            >
              <span
                className="has-text-weight-bold"
              >
                Map
              </span>
              Roulette
            </span>
          </Link>,
          "className": "navbar-brand",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <SvgSymbol
                className="navbar__logo"
                sym="mr-logo"
                viewBox="0 0 20 20"
              />,
              <span
                className="is-size-4"
              >
                <span
                  className="has-text-weight-bold"
                >
                  Map
                </span>
                Roulette
              </span>,
            ],
            "className": "navbar-item top-nav__home-link",
            "replace": false,
            "to": "/",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "navbar__logo",
                "sym": "mr-logo",
                "viewBox": "0 0 20 20",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span
                    className="has-text-weight-bold"
                  >
                    Map
                  </span>,
                  "Roulette",
                ],
                "className": "is-size-4",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Map",
                    "className": "has-text-weight-bold",
                  },
                  "ref": null,
                  "rendered": "Map",
                  "type": "span",
                },
                "Roulette",
              ],
              "type": "span",
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div
            className="navbar-menu"
          >
            <div
              className="navbar-start"
            >
              <NavbarPrimaryLinks
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
            </div>
            <div
              className="navbar-end"
            >
              <InjectIntl(AccountNavItem)
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
            </div>
          </div>,
          "query": "(min-width: 1024px)",
          "values": Object {},
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="navbar-start"
              >
                <NavbarPrimaryLinks
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": false,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />
              </div>,
              <div
                className="navbar-end"
              >
                <InjectIntl(AccountNavItem)
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": false,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />
              </div>,
            ],
            "className": "navbar-menu",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <NavbarPrimaryLinks
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": false,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />,
                "className": "navbar-start",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "location": Object {
                    "pathname": "/some/path",
                  },
                  "user": Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <InjectIntl(AccountNavItem)
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": false,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />,
                "className": "navbar-end",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "location": Object {
                    "pathname": "/some/path",
                  },
                  "user": Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Menu
            bodyClassName=""
            burgerBarClassName=""
            burgerButtonClassName=""
            className=""
            crossButtonClassName=""
            crossClassName=""
            customBurgerIcon={
              <SvgSymbol
                sym="menu-icon"
                viewBox="0 0 20 20"
              />
            }
            customCrossIcon={
              <SvgSymbol
                sym="cross-icon"
                viewBox="0 0 20 20"
              />
            }
            disableCloseOnEsc={false}
            id=""
            isOpen={false}
            itemListClassName=""
            menuClassName=""
            morphShapeClassName=""
            noOverlay={false}
            onStateChange={[Function]}
            outerContainerId=""
            overlayClassName=""
            pageWrapId=""
            right={true}
            styles={
              Object {
                "bmCrossButton": Object {
                  "right": "16px",
                  "top": "20px",
                },
                "bmMenuWrap": Object {
                  "width": "275px",
                },
                "bmOverlay": Object {
                  "background": "rgb(0,165,146, 0.7)",
                },
              }
            }
            width={300}
          >
            <Connect(SignInButton)
              className="white-on-green top-nav__signin-link"
              location={
                Object {
                  "pathname": "/some/path",
                }
              }
              user={
                Object {
                  "id": 357,
                  "isLoggedIn": false,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                }
              }
            />
            <NavbarPrimaryLinks
              location={
                Object {
                  "pathname": "/some/path",
                }
              }
              onLinkClick={[Function]}
              user={
                Object {
                  "id": 357,
                  "isLoggedIn": false,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                }
              }
            />
          </Menu>,
          "query": "(max-width: 1023px)",
          "values": Object {},
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bodyClassName": "",
            "burgerBarClassName": "",
            "burgerButtonClassName": "",
            "children": Array [
              <Connect(SignInButton)
                className="white-on-green top-nav__signin-link"
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />,
              <NavbarPrimaryLinks
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                onLinkClick={[Function]}
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />,
              false,
            ],
            "className": "",
            "crossButtonClassName": "",
            "crossClassName": "",
            "customBurgerIcon": <SvgSymbol
              sym="menu-icon"
              viewBox="0 0 20 20"
            />,
            "customCrossIcon": <SvgSymbol
              sym="cross-icon"
              viewBox="0 0 20 20"
            />,
            "disableCloseOnEsc": false,
            "id": "",
            "isOpen": false,
            "itemListClassName": "",
            "menuClassName": "",
            "morphShapeClassName": "",
            "noOverlay": false,
            "onStateChange": [Function],
            "outerContainerId": "",
            "overlayClassName": "",
            "pageWrapId": "",
            "right": true,
            "styles": Object {
              "bmCrossButton": Object {
                "right": "16px",
                "top": "20px",
              },
              "bmMenuWrap": Object {
                "width": "275px",
              },
              "bmOverlay": Object {
                "background": "rgb(0,165,146, 0.7)",
              },
            },
            "width": 300,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "white-on-green top-nav__signin-link",
                "location": Object {
                  "pathname": "/some/path",
                },
                "user": Object {
                  "id": 357,
                  "isLoggedIn": false,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "location": Object {
                  "pathname": "/some/path",
                },
                "onLinkClick": [Function],
                "user": Object {
                  "id": 357,
                  "isLoggedIn": false,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            false,
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "nav",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "aria-label": "main navigation",
        "children": Array [
          <div
            className="navbar-brand"
          >
            <Link
              className="navbar-item top-nav__home-link"
              replace={false}
              to="/"
            >
              <SvgSymbol
                className="navbar__logo"
                sym="mr-logo"
                viewBox="0 0 20 20"
              />
              <span
                className="is-size-4"
              >
                <span
                  className="has-text-weight-bold"
                >
                  Map
                </span>
                Roulette
              </span>
            </Link>
          </div>,
          <MediaQuery
            query="(min-width: 1024px)"
            values={Object {}}
          >
            <div
              className="navbar-menu"
            >
              <div
                className="navbar-start"
              >
                <NavbarPrimaryLinks
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": false,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />
              </div>
              <div
                className="navbar-end"
              >
                <InjectIntl(AccountNavItem)
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": false,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />
              </div>
            </div>
          </MediaQuery>,
          <MediaQuery
            query="(max-width: 1023px)"
            values={Object {}}
          >
            <Menu
              bodyClassName=""
              burgerBarClassName=""
              burgerButtonClassName=""
              className=""
              crossButtonClassName=""
              crossClassName=""
              customBurgerIcon={
                <SvgSymbol
                  sym="menu-icon"
                  viewBox="0 0 20 20"
                />
              }
              customCrossIcon={
                <SvgSymbol
                  sym="cross-icon"
                  viewBox="0 0 20 20"
                />
              }
              disableCloseOnEsc={false}
              id=""
              isOpen={false}
              itemListClassName=""
              menuClassName=""
              morphShapeClassName=""
              noOverlay={false}
              onStateChange={[Function]}
              outerContainerId=""
              overlayClassName=""
              pageWrapId=""
              right={true}
              styles={
                Object {
                  "bmCrossButton": Object {
                    "right": "16px",
                    "top": "20px",
                  },
                  "bmMenuWrap": Object {
                    "width": "275px",
                  },
                  "bmOverlay": Object {
                    "background": "rgb(0,165,146, 0.7)",
                  },
                }
              }
              width={300}
            >
              <Connect(SignInButton)
                className="white-on-green top-nav__signin-link"
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
              <NavbarPrimaryLinks
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                onLinkClick={[Function]}
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
            </Menu>
          </MediaQuery>,
        ],
        "className": "navbar top-nav",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Link
              className="navbar-item top-nav__home-link"
              replace={false}
              to="/"
            >
              <SvgSymbol
                className="navbar__logo"
                sym="mr-logo"
                viewBox="0 0 20 20"
              />
              <span
                className="is-size-4"
              >
                <span
                  className="has-text-weight-bold"
                >
                  Map
                </span>
                Roulette
              </span>
            </Link>,
            "className": "navbar-brand",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <SvgSymbol
                  className="navbar__logo"
                  sym="mr-logo"
                  viewBox="0 0 20 20"
                />,
                <span
                  className="is-size-4"
                >
                  <span
                    className="has-text-weight-bold"
                  >
                    Map
                  </span>
                  Roulette
                </span>,
              ],
              "className": "navbar-item top-nav__home-link",
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "navbar__logo",
                  "sym": "mr-logo",
                  "viewBox": "0 0 20 20",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span
                      className="has-text-weight-bold"
                    >
                      Map
                    </span>,
                    "Roulette",
                  ],
                  "className": "is-size-4",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Map",
                      "className": "has-text-weight-bold",
                    },
                    "ref": null,
                    "rendered": "Map",
                    "type": "span",
                  },
                  "Roulette",
                ],
                "type": "span",
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <div
              className="navbar-menu"
            >
              <div
                className="navbar-start"
              >
                <NavbarPrimaryLinks
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": false,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />
              </div>
              <div
                className="navbar-end"
              >
                <InjectIntl(AccountNavItem)
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": false,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />
              </div>
            </div>,
            "query": "(min-width: 1024px)",
            "values": Object {},
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="navbar-start"
                >
                  <NavbarPrimaryLinks
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": false,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />
                </div>,
                <div
                  className="navbar-end"
                >
                  <InjectIntl(AccountNavItem)
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": false,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />
                </div>,
              ],
              "className": "navbar-menu",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <NavbarPrimaryLinks
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": false,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />,
                  "className": "navbar-start",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "location": Object {
                      "pathname": "/some/path",
                    },
                    "user": Object {
                      "id": 357,
                      "isLoggedIn": false,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <InjectIntl(AccountNavItem)
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": false,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />,
                  "className": "navbar-end",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "location": Object {
                      "pathname": "/some/path",
                    },
                    "user": Object {
                      "id": 357,
                      "isLoggedIn": false,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Menu
              bodyClassName=""
              burgerBarClassName=""
              burgerButtonClassName=""
              className=""
              crossButtonClassName=""
              crossClassName=""
              customBurgerIcon={
                <SvgSymbol
                  sym="menu-icon"
                  viewBox="0 0 20 20"
                />
              }
              customCrossIcon={
                <SvgSymbol
                  sym="cross-icon"
                  viewBox="0 0 20 20"
                />
              }
              disableCloseOnEsc={false}
              id=""
              isOpen={false}
              itemListClassName=""
              menuClassName=""
              morphShapeClassName=""
              noOverlay={false}
              onStateChange={[Function]}
              outerContainerId=""
              overlayClassName=""
              pageWrapId=""
              right={true}
              styles={
                Object {
                  "bmCrossButton": Object {
                    "right": "16px",
                    "top": "20px",
                  },
                  "bmMenuWrap": Object {
                    "width": "275px",
                  },
                  "bmOverlay": Object {
                    "background": "rgb(0,165,146, 0.7)",
                  },
                }
              }
              width={300}
            >
              <Connect(SignInButton)
                className="white-on-green top-nav__signin-link"
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
              <NavbarPrimaryLinks
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                onLinkClick={[Function]}
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
            </Menu>,
            "query": "(max-width: 1023px)",
            "values": Object {},
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bodyClassName": "",
              "burgerBarClassName": "",
              "burgerButtonClassName": "",
              "children": Array [
                <Connect(SignInButton)
                  className="white-on-green top-nav__signin-link"
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": false,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />,
                <NavbarPrimaryLinks
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  onLinkClick={[Function]}
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": false,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />,
                false,
              ],
              "className": "",
              "crossButtonClassName": "",
              "crossClassName": "",
              "customBurgerIcon": <SvgSymbol
                sym="menu-icon"
                viewBox="0 0 20 20"
              />,
              "customCrossIcon": <SvgSymbol
                sym="cross-icon"
                viewBox="0 0 20 20"
              />,
              "disableCloseOnEsc": false,
              "id": "",
              "isOpen": false,
              "itemListClassName": "",
              "menuClassName": "",
              "morphShapeClassName": "",
              "noOverlay": false,
              "onStateChange": [Function],
              "outerContainerId": "",
              "overlayClassName": "",
              "pageWrapId": "",
              "right": true,
              "styles": Object {
                "bmCrossButton": Object {
                  "right": "16px",
                  "top": "20px",
                },
                "bmMenuWrap": Object {
                  "width": "275px",
                },
                "bmOverlay": Object {
                  "background": "rgb(0,165,146, 0.7)",
                },
              },
              "width": 300,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "white-on-green top-nav__signin-link",
                  "location": Object {
                    "pathname": "/some/path",
                  },
                  "user": Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "location": Object {
                    "pathname": "/some/path",
                  },
                  "onLinkClick": [Function],
                  "user": Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              false,
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "nav",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`includes a link to user profile page if user is logged in 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Navbar
    location={
      Object {
        "pathname": "/some/path",
      }
    }
    user={
      Object {
        "id": 357,
        "isLoggedIn": true,
        "osmProfile": Object {
          "avatarURL": "http://example.com/profilepic.jpg",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "aria-label": "main navigation",
      "children": Array [
        <div
          className="navbar-brand"
        >
          <Link
            className="navbar-item top-nav__home-link"
            replace={false}
            to="/"
          >
            <SvgSymbol
              className="navbar__logo"
              sym="mr-logo"
              viewBox="0 0 20 20"
            />
            <span
              className="is-size-4"
            >
              <span
                className="has-text-weight-bold"
              >
                Map
              </span>
              Roulette
            </span>
          </Link>
        </div>,
        <MediaQuery
          query="(min-width: 1024px)"
          values={Object {}}
        >
          <div
            className="navbar-menu"
          >
            <div
              className="navbar-start"
            >
              <NavbarPrimaryLinks
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": true,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
            </div>
            <div
              className="navbar-end"
            >
              <InjectIntl(AccountNavItem)
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": true,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
            </div>
          </div>
        </MediaQuery>,
        <MediaQuery
          query="(max-width: 1023px)"
          values={Object {}}
        >
          <Menu
            bodyClassName=""
            burgerBarClassName=""
            burgerButtonClassName=""
            className=""
            crossButtonClassName=""
            crossClassName=""
            customBurgerIcon={
              <SvgSymbol
                sym="menu-icon"
                viewBox="0 0 20 20"
              />
            }
            customCrossIcon={
              <SvgSymbol
                sym="cross-icon"
                viewBox="0 0 20 20"
              />
            }
            disableCloseOnEsc={false}
            id=""
            isOpen={false}
            itemListClassName=""
            menuClassName=""
            morphShapeClassName=""
            noOverlay={false}
            onStateChange={[Function]}
            outerContainerId=""
            overlayClassName=""
            pageWrapId=""
            right={true}
            styles={
              Object {
                "bmCrossButton": Object {
                  "right": "16px",
                  "top": "20px",
                },
                "bmMenuWrap": Object {
                  "width": "275px",
                },
                "bmOverlay": Object {
                  "background": "rgb(0,165,146, 0.7)",
                },
              }
            }
            width={300}
          >
            <Link
              onClick={[Function]}
              replace={false}
              to="/user/profile"
            >
              <figure
                className="navbar__account-nav-item__avatar image is-96x96"
              >
                <div
                  className="circular-image"
                  style={
                    Object {
                      "backgroundImage": "url(http://example.com/profilepic.jpg)",
                    }
                  }
                />
              </figure>
            </Link>
            <NavbarPrimaryLinks
              location={
                Object {
                  "pathname": "/some/path",
                }
              }
              onLinkClick={[Function]}
              user={
                Object {
                  "id": 357,
                  "isLoggedIn": true,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                }
              }
            />
            <React.Fragment>
              <Link
                className="navbar-item top-nav__profile-link"
                onClick={[Function]}
                replace={false}
                to="/user/profile"
              >
                <span
                  className="item-text"
                >
                  <FormattedMessage
                    defaultMessage="User Profile"
                    id="Navbar.links.mobile.userProfile"
                    values={Object {}}
                  />
                </span>
              </Link>
              <a
                className="navbar-item top-nav__signout-link"
                onClick={[Function]}
              >
                <span
                  className="item-text"
                >
                  <FormattedMessage
                    defaultMessage="Sign out"
                    id="Navbar.mobile.links.signout"
                    values={Object {}}
                  />
                </span>
              </a>
            </React.Fragment>
          </Menu>
        </MediaQuery>,
      ],
      "className": "navbar top-nav",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Link
            className="navbar-item top-nav__home-link"
            replace={false}
            to="/"
          >
            <SvgSymbol
              className="navbar__logo"
              sym="mr-logo"
              viewBox="0 0 20 20"
            />
            <span
              className="is-size-4"
            >
              <span
                className="has-text-weight-bold"
              >
                Map
              </span>
              Roulette
            </span>
          </Link>,
          "className": "navbar-brand",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <SvgSymbol
                className="navbar__logo"
                sym="mr-logo"
                viewBox="0 0 20 20"
              />,
              <span
                className="is-size-4"
              >
                <span
                  className="has-text-weight-bold"
                >
                  Map
                </span>
                Roulette
              </span>,
            ],
            "className": "navbar-item top-nav__home-link",
            "replace": false,
            "to": "/",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "navbar__logo",
                "sym": "mr-logo",
                "viewBox": "0 0 20 20",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span
                    className="has-text-weight-bold"
                  >
                    Map
                  </span>,
                  "Roulette",
                ],
                "className": "is-size-4",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Map",
                    "className": "has-text-weight-bold",
                  },
                  "ref": null,
                  "rendered": "Map",
                  "type": "span",
                },
                "Roulette",
              ],
              "type": "span",
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div
            className="navbar-menu"
          >
            <div
              className="navbar-start"
            >
              <NavbarPrimaryLinks
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": true,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
            </div>
            <div
              className="navbar-end"
            >
              <InjectIntl(AccountNavItem)
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": true,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
            </div>
          </div>,
          "query": "(min-width: 1024px)",
          "values": Object {},
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="navbar-start"
              >
                <NavbarPrimaryLinks
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": true,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />
              </div>,
              <div
                className="navbar-end"
              >
                <InjectIntl(AccountNavItem)
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": true,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />
              </div>,
            ],
            "className": "navbar-menu",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <NavbarPrimaryLinks
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": true,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />,
                "className": "navbar-start",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "location": Object {
                    "pathname": "/some/path",
                  },
                  "user": Object {
                    "id": 357,
                    "isLoggedIn": true,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <InjectIntl(AccountNavItem)
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": true,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />,
                "className": "navbar-end",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "location": Object {
                    "pathname": "/some/path",
                  },
                  "user": Object {
                    "id": 357,
                    "isLoggedIn": true,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Menu
            bodyClassName=""
            burgerBarClassName=""
            burgerButtonClassName=""
            className=""
            crossButtonClassName=""
            crossClassName=""
            customBurgerIcon={
              <SvgSymbol
                sym="menu-icon"
                viewBox="0 0 20 20"
              />
            }
            customCrossIcon={
              <SvgSymbol
                sym="cross-icon"
                viewBox="0 0 20 20"
              />
            }
            disableCloseOnEsc={false}
            id=""
            isOpen={false}
            itemListClassName=""
            menuClassName=""
            morphShapeClassName=""
            noOverlay={false}
            onStateChange={[Function]}
            outerContainerId=""
            overlayClassName=""
            pageWrapId=""
            right={true}
            styles={
              Object {
                "bmCrossButton": Object {
                  "right": "16px",
                  "top": "20px",
                },
                "bmMenuWrap": Object {
                  "width": "275px",
                },
                "bmOverlay": Object {
                  "background": "rgb(0,165,146, 0.7)",
                },
              }
            }
            width={300}
          >
            <Link
              onClick={[Function]}
              replace={false}
              to="/user/profile"
            >
              <figure
                className="navbar__account-nav-item__avatar image is-96x96"
              >
                <div
                  className="circular-image"
                  style={
                    Object {
                      "backgroundImage": "url(http://example.com/profilepic.jpg)",
                    }
                  }
                />
              </figure>
            </Link>
            <NavbarPrimaryLinks
              location={
                Object {
                  "pathname": "/some/path",
                }
              }
              onLinkClick={[Function]}
              user={
                Object {
                  "id": 357,
                  "isLoggedIn": true,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                }
              }
            />
            <React.Fragment>
              <Link
                className="navbar-item top-nav__profile-link"
                onClick={[Function]}
                replace={false}
                to="/user/profile"
              >
                <span
                  className="item-text"
                >
                  <FormattedMessage
                    defaultMessage="User Profile"
                    id="Navbar.links.mobile.userProfile"
                    values={Object {}}
                  />
                </span>
              </Link>
              <a
                className="navbar-item top-nav__signout-link"
                onClick={[Function]}
              >
                <span
                  className="item-text"
                >
                  <FormattedMessage
                    defaultMessage="Sign out"
                    id="Navbar.mobile.links.signout"
                    values={Object {}}
                  />
                </span>
              </a>
            </React.Fragment>
          </Menu>,
          "query": "(max-width: 1023px)",
          "values": Object {},
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bodyClassName": "",
            "burgerBarClassName": "",
            "burgerButtonClassName": "",
            "children": Array [
              <Link
                onClick={[Function]}
                replace={false}
                to="/user/profile"
              >
                <figure
                  className="navbar__account-nav-item__avatar image is-96x96"
                >
                  <div
                    className="circular-image"
                    style={
                      Object {
                        "backgroundImage": "url(http://example.com/profilepic.jpg)",
                      }
                    }
                  />
                </figure>
              </Link>,
              <NavbarPrimaryLinks
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                onLinkClick={[Function]}
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": true,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />,
              <React.Fragment>
                <Link
                  className="navbar-item top-nav__profile-link"
                  onClick={[Function]}
                  replace={false}
                  to="/user/profile"
                >
                  <span
                    className="item-text"
                  >
                    <FormattedMessage
                      defaultMessage="User Profile"
                      id="Navbar.links.mobile.userProfile"
                      values={Object {}}
                    />
                  </span>
                </Link>
                <a
                  className="navbar-item top-nav__signout-link"
                  onClick={[Function]}
                >
                  <span
                    className="item-text"
                  >
                    <FormattedMessage
                      defaultMessage="Sign out"
                      id="Navbar.mobile.links.signout"
                      values={Object {}}
                    />
                  </span>
                </a>
              </React.Fragment>,
            ],
            "className": "",
            "crossButtonClassName": "",
            "crossClassName": "",
            "customBurgerIcon": <SvgSymbol
              sym="menu-icon"
              viewBox="0 0 20 20"
            />,
            "customCrossIcon": <SvgSymbol
              sym="cross-icon"
              viewBox="0 0 20 20"
            />,
            "disableCloseOnEsc": false,
            "id": "",
            "isOpen": false,
            "itemListClassName": "",
            "menuClassName": "",
            "morphShapeClassName": "",
            "noOverlay": false,
            "onStateChange": [Function],
            "outerContainerId": "",
            "overlayClassName": "",
            "pageWrapId": "",
            "right": true,
            "styles": Object {
              "bmCrossButton": Object {
                "right": "16px",
                "top": "20px",
              },
              "bmMenuWrap": Object {
                "width": "275px",
              },
              "bmOverlay": Object {
                "background": "rgb(0,165,146, 0.7)",
              },
            },
            "width": 300,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <figure
                  className="navbar__account-nav-item__avatar image is-96x96"
                >
                  <div
                    className="circular-image"
                    style={
                      Object {
                        "backgroundImage": "url(http://example.com/profilepic.jpg)",
                      }
                    }
                  />
                </figure>,
                "onClick": [Function],
                "replace": false,
                "to": "/user/profile",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="circular-image"
                    style={
                      Object {
                        "backgroundImage": "url(http://example.com/profilepic.jpg)",
                      }
                    }
                  />,
                  "className": "navbar__account-nav-item__avatar image is-96x96",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "circular-image",
                    "style": Object {
                      "backgroundImage": "url(http://example.com/profilepic.jpg)",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                "type": "figure",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "location": Object {
                  "pathname": "/some/path",
                },
                "onLinkClick": [Function],
                "user": Object {
                  "id": 357,
                  "isLoggedIn": true,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Link
                    className="navbar-item top-nav__profile-link"
                    onClick={[Function]}
                    replace={false}
                    to="/user/profile"
                  >
                    <span
                      className="item-text"
                    >
                      <FormattedMessage
                        defaultMessage="User Profile"
                        id="Navbar.links.mobile.userProfile"
                        values={Object {}}
                      />
                    </span>
                  </Link>,
                  <a
                    className="navbar-item top-nav__signout-link"
                    onClick={[Function]}
                  >
                    <span
                      className="item-text"
                    >
                      <FormattedMessage
                        defaultMessage="Sign out"
                        id="Navbar.mobile.links.signout"
                        values={Object {}}
                      />
                    </span>
                  </a>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <span
                      className="item-text"
                    >
                      <FormattedMessage
                        defaultMessage="User Profile"
                        id="Navbar.links.mobile.userProfile"
                        values={Object {}}
                      />
                    </span>,
                    "className": "navbar-item top-nav__profile-link",
                    "onClick": [Function],
                    "replace": false,
                    "to": "/user/profile",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <FormattedMessage
                        defaultMessage="User Profile"
                        id="Navbar.links.mobile.userProfile"
                        values={Object {}}
                      />,
                      "className": "item-text",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "defaultMessage": "User Profile",
                        "id": "Navbar.links.mobile.userProfile",
                        "values": Object {},
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "span",
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <span
                      className="item-text"
                    >
                      <FormattedMessage
                        defaultMessage="Sign out"
                        id="Navbar.mobile.links.signout"
                        values={Object {}}
                      />
                    </span>,
                    "className": "navbar-item top-nav__signout-link",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <FormattedMessage
                        defaultMessage="Sign out"
                        id="Navbar.mobile.links.signout"
                        values={Object {}}
                      />,
                      "className": "item-text",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "defaultMessage": "Sign out",
                        "id": "Navbar.mobile.links.signout",
                        "values": Object {},
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "span",
                  },
                  "type": "a",
                },
              ],
              "type": Symbol(react.fragment),
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "nav",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "aria-label": "main navigation",
        "children": Array [
          <div
            className="navbar-brand"
          >
            <Link
              className="navbar-item top-nav__home-link"
              replace={false}
              to="/"
            >
              <SvgSymbol
                className="navbar__logo"
                sym="mr-logo"
                viewBox="0 0 20 20"
              />
              <span
                className="is-size-4"
              >
                <span
                  className="has-text-weight-bold"
                >
                  Map
                </span>
                Roulette
              </span>
            </Link>
          </div>,
          <MediaQuery
            query="(min-width: 1024px)"
            values={Object {}}
          >
            <div
              className="navbar-menu"
            >
              <div
                className="navbar-start"
              >
                <NavbarPrimaryLinks
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": true,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />
              </div>
              <div
                className="navbar-end"
              >
                <InjectIntl(AccountNavItem)
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": true,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />
              </div>
            </div>
          </MediaQuery>,
          <MediaQuery
            query="(max-width: 1023px)"
            values={Object {}}
          >
            <Menu
              bodyClassName=""
              burgerBarClassName=""
              burgerButtonClassName=""
              className=""
              crossButtonClassName=""
              crossClassName=""
              customBurgerIcon={
                <SvgSymbol
                  sym="menu-icon"
                  viewBox="0 0 20 20"
                />
              }
              customCrossIcon={
                <SvgSymbol
                  sym="cross-icon"
                  viewBox="0 0 20 20"
                />
              }
              disableCloseOnEsc={false}
              id=""
              isOpen={false}
              itemListClassName=""
              menuClassName=""
              morphShapeClassName=""
              noOverlay={false}
              onStateChange={[Function]}
              outerContainerId=""
              overlayClassName=""
              pageWrapId=""
              right={true}
              styles={
                Object {
                  "bmCrossButton": Object {
                    "right": "16px",
                    "top": "20px",
                  },
                  "bmMenuWrap": Object {
                    "width": "275px",
                  },
                  "bmOverlay": Object {
                    "background": "rgb(0,165,146, 0.7)",
                  },
                }
              }
              width={300}
            >
              <Link
                onClick={[Function]}
                replace={false}
                to="/user/profile"
              >
                <figure
                  className="navbar__account-nav-item__avatar image is-96x96"
                >
                  <div
                    className="circular-image"
                    style={
                      Object {
                        "backgroundImage": "url(http://example.com/profilepic.jpg)",
                      }
                    }
                  />
                </figure>
              </Link>
              <NavbarPrimaryLinks
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                onLinkClick={[Function]}
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": true,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
              <React.Fragment>
                <Link
                  className="navbar-item top-nav__profile-link"
                  onClick={[Function]}
                  replace={false}
                  to="/user/profile"
                >
                  <span
                    className="item-text"
                  >
                    <FormattedMessage
                      defaultMessage="User Profile"
                      id="Navbar.links.mobile.userProfile"
                      values={Object {}}
                    />
                  </span>
                </Link>
                <a
                  className="navbar-item top-nav__signout-link"
                  onClick={[Function]}
                >
                  <span
                    className="item-text"
                  >
                    <FormattedMessage
                      defaultMessage="Sign out"
                      id="Navbar.mobile.links.signout"
                      values={Object {}}
                    />
                  </span>
                </a>
              </React.Fragment>
            </Menu>
          </MediaQuery>,
        ],
        "className": "navbar top-nav",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Link
              className="navbar-item top-nav__home-link"
              replace={false}
              to="/"
            >
              <SvgSymbol
                className="navbar__logo"
                sym="mr-logo"
                viewBox="0 0 20 20"
              />
              <span
                className="is-size-4"
              >
                <span
                  className="has-text-weight-bold"
                >
                  Map
                </span>
                Roulette
              </span>
            </Link>,
            "className": "navbar-brand",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <SvgSymbol
                  className="navbar__logo"
                  sym="mr-logo"
                  viewBox="0 0 20 20"
                />,
                <span
                  className="is-size-4"
                >
                  <span
                    className="has-text-weight-bold"
                  >
                    Map
                  </span>
                  Roulette
                </span>,
              ],
              "className": "navbar-item top-nav__home-link",
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "navbar__logo",
                  "sym": "mr-logo",
                  "viewBox": "0 0 20 20",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span
                      className="has-text-weight-bold"
                    >
                      Map
                    </span>,
                    "Roulette",
                  ],
                  "className": "is-size-4",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Map",
                      "className": "has-text-weight-bold",
                    },
                    "ref": null,
                    "rendered": "Map",
                    "type": "span",
                  },
                  "Roulette",
                ],
                "type": "span",
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <div
              className="navbar-menu"
            >
              <div
                className="navbar-start"
              >
                <NavbarPrimaryLinks
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": true,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />
              </div>
              <div
                className="navbar-end"
              >
                <InjectIntl(AccountNavItem)
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": true,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />
              </div>
            </div>,
            "query": "(min-width: 1024px)",
            "values": Object {},
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="navbar-start"
                >
                  <NavbarPrimaryLinks
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": true,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />
                </div>,
                <div
                  className="navbar-end"
                >
                  <InjectIntl(AccountNavItem)
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": true,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />
                </div>,
              ],
              "className": "navbar-menu",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <NavbarPrimaryLinks
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": true,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />,
                  "className": "navbar-start",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "location": Object {
                      "pathname": "/some/path",
                    },
                    "user": Object {
                      "id": 357,
                      "isLoggedIn": true,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <InjectIntl(AccountNavItem)
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": true,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />,
                  "className": "navbar-end",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "location": Object {
                      "pathname": "/some/path",
                    },
                    "user": Object {
                      "id": 357,
                      "isLoggedIn": true,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Menu
              bodyClassName=""
              burgerBarClassName=""
              burgerButtonClassName=""
              className=""
              crossButtonClassName=""
              crossClassName=""
              customBurgerIcon={
                <SvgSymbol
                  sym="menu-icon"
                  viewBox="0 0 20 20"
                />
              }
              customCrossIcon={
                <SvgSymbol
                  sym="cross-icon"
                  viewBox="0 0 20 20"
                />
              }
              disableCloseOnEsc={false}
              id=""
              isOpen={false}
              itemListClassName=""
              menuClassName=""
              morphShapeClassName=""
              noOverlay={false}
              onStateChange={[Function]}
              outerContainerId=""
              overlayClassName=""
              pageWrapId=""
              right={true}
              styles={
                Object {
                  "bmCrossButton": Object {
                    "right": "16px",
                    "top": "20px",
                  },
                  "bmMenuWrap": Object {
                    "width": "275px",
                  },
                  "bmOverlay": Object {
                    "background": "rgb(0,165,146, 0.7)",
                  },
                }
              }
              width={300}
            >
              <Link
                onClick={[Function]}
                replace={false}
                to="/user/profile"
              >
                <figure
                  className="navbar__account-nav-item__avatar image is-96x96"
                >
                  <div
                    className="circular-image"
                    style={
                      Object {
                        "backgroundImage": "url(http://example.com/profilepic.jpg)",
                      }
                    }
                  />
                </figure>
              </Link>
              <NavbarPrimaryLinks
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                onLinkClick={[Function]}
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": true,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
              <React.Fragment>
                <Link
                  className="navbar-item top-nav__profile-link"
                  onClick={[Function]}
                  replace={false}
                  to="/user/profile"
                >
                  <span
                    className="item-text"
                  >
                    <FormattedMessage
                      defaultMessage="User Profile"
                      id="Navbar.links.mobile.userProfile"
                      values={Object {}}
                    />
                  </span>
                </Link>
                <a
                  className="navbar-item top-nav__signout-link"
                  onClick={[Function]}
                >
                  <span
                    className="item-text"
                  >
                    <FormattedMessage
                      defaultMessage="Sign out"
                      id="Navbar.mobile.links.signout"
                      values={Object {}}
                    />
                  </span>
                </a>
              </React.Fragment>
            </Menu>,
            "query": "(max-width: 1023px)",
            "values": Object {},
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bodyClassName": "",
              "burgerBarClassName": "",
              "burgerButtonClassName": "",
              "children": Array [
                <Link
                  onClick={[Function]}
                  replace={false}
                  to="/user/profile"
                >
                  <figure
                    className="navbar__account-nav-item__avatar image is-96x96"
                  >
                    <div
                      className="circular-image"
                      style={
                        Object {
                          "backgroundImage": "url(http://example.com/profilepic.jpg)",
                        }
                      }
                    />
                  </figure>
                </Link>,
                <NavbarPrimaryLinks
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  onLinkClick={[Function]}
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": true,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />,
                <React.Fragment>
                  <Link
                    className="navbar-item top-nav__profile-link"
                    onClick={[Function]}
                    replace={false}
                    to="/user/profile"
                  >
                    <span
                      className="item-text"
                    >
                      <FormattedMessage
                        defaultMessage="User Profile"
                        id="Navbar.links.mobile.userProfile"
                        values={Object {}}
                      />
                    </span>
                  </Link>
                  <a
                    className="navbar-item top-nav__signout-link"
                    onClick={[Function]}
                  >
                    <span
                      className="item-text"
                    >
                      <FormattedMessage
                        defaultMessage="Sign out"
                        id="Navbar.mobile.links.signout"
                        values={Object {}}
                      />
                    </span>
                  </a>
                </React.Fragment>,
              ],
              "className": "",
              "crossButtonClassName": "",
              "crossClassName": "",
              "customBurgerIcon": <SvgSymbol
                sym="menu-icon"
                viewBox="0 0 20 20"
              />,
              "customCrossIcon": <SvgSymbol
                sym="cross-icon"
                viewBox="0 0 20 20"
              />,
              "disableCloseOnEsc": false,
              "id": "",
              "isOpen": false,
              "itemListClassName": "",
              "menuClassName": "",
              "morphShapeClassName": "",
              "noOverlay": false,
              "onStateChange": [Function],
              "outerContainerId": "",
              "overlayClassName": "",
              "pageWrapId": "",
              "right": true,
              "styles": Object {
                "bmCrossButton": Object {
                  "right": "16px",
                  "top": "20px",
                },
                "bmMenuWrap": Object {
                  "width": "275px",
                },
                "bmOverlay": Object {
                  "background": "rgb(0,165,146, 0.7)",
                },
              },
              "width": 300,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <figure
                    className="navbar__account-nav-item__avatar image is-96x96"
                  >
                    <div
                      className="circular-image"
                      style={
                        Object {
                          "backgroundImage": "url(http://example.com/profilepic.jpg)",
                        }
                      }
                    />
                  </figure>,
                  "onClick": [Function],
                  "replace": false,
                  "to": "/user/profile",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="circular-image"
                      style={
                        Object {
                          "backgroundImage": "url(http://example.com/profilepic.jpg)",
                        }
                      }
                    />,
                    "className": "navbar__account-nav-item__avatar image is-96x96",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "circular-image",
                      "style": Object {
                        "backgroundImage": "url(http://example.com/profilepic.jpg)",
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "div",
                  },
                  "type": "figure",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "location": Object {
                    "pathname": "/some/path",
                  },
                  "onLinkClick": [Function],
                  "user": Object {
                    "id": 357,
                    "isLoggedIn": true,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Link
                      className="navbar-item top-nav__profile-link"
                      onClick={[Function]}
                      replace={false}
                      to="/user/profile"
                    >
                      <span
                        className="item-text"
                      >
                        <FormattedMessage
                          defaultMessage="User Profile"
                          id="Navbar.links.mobile.userProfile"
                          values={Object {}}
                        />
                      </span>
                    </Link>,
                    <a
                      className="navbar-item top-nav__signout-link"
                      onClick={[Function]}
                    >
                      <span
                        className="item-text"
                      >
                        <FormattedMessage
                          defaultMessage="Sign out"
                          id="Navbar.mobile.links.signout"
                          values={Object {}}
                        />
                      </span>
                    </a>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <span
                        className="item-text"
                      >
                        <FormattedMessage
                          defaultMessage="User Profile"
                          id="Navbar.links.mobile.userProfile"
                          values={Object {}}
                        />
                      </span>,
                      "className": "navbar-item top-nav__profile-link",
                      "onClick": [Function],
                      "replace": false,
                      "to": "/user/profile",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <FormattedMessage
                          defaultMessage="User Profile"
                          id="Navbar.links.mobile.userProfile"
                          values={Object {}}
                        />,
                        "className": "item-text",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "defaultMessage": "User Profile",
                          "id": "Navbar.links.mobile.userProfile",
                          "values": Object {},
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "span",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <span
                        className="item-text"
                      >
                        <FormattedMessage
                          defaultMessage="Sign out"
                          id="Navbar.mobile.links.signout"
                          values={Object {}}
                        />
                      </span>,
                      "className": "navbar-item top-nav__signout-link",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <FormattedMessage
                          defaultMessage="Sign out"
                          id="Navbar.mobile.links.signout"
                          values={Object {}}
                        />,
                        "className": "item-text",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "defaultMessage": "Sign out",
                          "id": "Navbar.mobile.links.signout",
                          "values": Object {},
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "span",
                    },
                    "type": "a",
                  },
                ],
                "type": Symbol(react.fragment),
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "nav",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
