// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`shows a dropdown menu if user is logged in 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AccountNavItem
    intl={
      Object {
        "formatMessage": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "defaultMessage": "User Profile",
                "id": "Navbar.links.userProfile",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Sign out",
                "id": "Navbar.links.signout",
              },
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      }
    }
    logoutUser={[MockFunction]}
    user={
      Object {
        "id": 357,
        "isLoggedIn": true,
        "osmProfile": Object {
          "avatarURL": "some/url",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <OnClickOutside(WithDeactivateOnOutsideClick)
        className="is-right navbar__account-nav-item__dropdown"
        eventTypes={
          Array [
            "mousedown",
            "touchstart",
          ]
        }
        excludeScrollbar={false}
        onSelect={[Function]}
        options={
          Array [
            Object {
              "className": "profile",
              "key": "profile",
              "text": undefined,
              "value": "profile",
            },
            Object {
              "className": "signout",
              "key": "signout",
              "text": undefined,
              "value": "signout",
            },
          ]
        }
        outsideClickIgnoreClass="ignore-react-onclickoutside"
        preventDefault={false}
        stopPropagation={false}
      >
        <figure
          className="navbar__account-nav-item__avatar image is-48x48"
        >
          <div
            className="circular-image"
            style={
              Object {
                "backgroundImage": "url(some/url)",
              }
            }
          />
        </figure>
        <span
          className="navbar__account-nav-item__username"
        />
        <div
          className="navbar__account-nav-item__icon"
        />
      </OnClickOutside(WithDeactivateOnOutsideClick)>,
      "className": "navbar-item navbar__account-nav-item signed-in login-status-known",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <figure
            className="navbar__account-nav-item__avatar image is-48x48"
          >
            <div
              className="circular-image"
              style={
                Object {
                  "backgroundImage": "url(some/url)",
                }
              }
            />
          </figure>,
          <span
            className="navbar__account-nav-item__username"
          />,
          <div
            className="navbar__account-nav-item__icon"
          />,
        ],
        "className": "is-right navbar__account-nav-item__dropdown",
        "eventTypes": Array [
          "mousedown",
          "touchstart",
        ],
        "excludeScrollbar": false,
        "onSelect": [Function],
        "options": Array [
          Object {
            "className": "profile",
            "key": "profile",
            "text": undefined,
            "value": "profile",
          },
          Object {
            "className": "signout",
            "key": "signout",
            "text": undefined,
            "value": "signout",
          },
        ],
        "outsideClickIgnoreClass": "ignore-react-onclickoutside",
        "preventDefault": false,
        "stopPropagation": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="circular-image"
              style={
                Object {
                  "backgroundImage": "url(some/url)",
                }
              }
            />,
            "className": "navbar__account-nav-item__avatar image is-48x48",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "circular-image",
              "style": Object {
                "backgroundImage": "url(some/url)",
              },
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          "type": "figure",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
            "className": "navbar__account-nav-item__username",
          },
          "ref": null,
          "rendered": null,
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "navbar__account-nav-item__icon",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <OnClickOutside(WithDeactivateOnOutsideClick)
          className="is-right navbar__account-nav-item__dropdown"
          eventTypes={
            Array [
              "mousedown",
              "touchstart",
            ]
          }
          excludeScrollbar={false}
          onSelect={[Function]}
          options={
            Array [
              Object {
                "className": "profile",
                "key": "profile",
                "text": undefined,
                "value": "profile",
              },
              Object {
                "className": "signout",
                "key": "signout",
                "text": undefined,
                "value": "signout",
              },
            ]
          }
          outsideClickIgnoreClass="ignore-react-onclickoutside"
          preventDefault={false}
          stopPropagation={false}
        >
          <figure
            className="navbar__account-nav-item__avatar image is-48x48"
          >
            <div
              className="circular-image"
              style={
                Object {
                  "backgroundImage": "url(some/url)",
                }
              }
            />
          </figure>
          <span
            className="navbar__account-nav-item__username"
          />
          <div
            className="navbar__account-nav-item__icon"
          />
        </OnClickOutside(WithDeactivateOnOutsideClick)>,
        "className": "navbar-item navbar__account-nav-item signed-in login-status-known",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <figure
              className="navbar__account-nav-item__avatar image is-48x48"
            >
              <div
                className="circular-image"
                style={
                  Object {
                    "backgroundImage": "url(some/url)",
                  }
                }
              />
            </figure>,
            <span
              className="navbar__account-nav-item__username"
            />,
            <div
              className="navbar__account-nav-item__icon"
            />,
          ],
          "className": "is-right navbar__account-nav-item__dropdown",
          "eventTypes": Array [
            "mousedown",
            "touchstart",
          ],
          "excludeScrollbar": false,
          "onSelect": [Function],
          "options": Array [
            Object {
              "className": "profile",
              "key": "profile",
              "text": undefined,
              "value": "profile",
            },
            Object {
              "className": "signout",
              "key": "signout",
              "text": undefined,
              "value": "signout",
            },
          ],
          "outsideClickIgnoreClass": "ignore-react-onclickoutside",
          "preventDefault": false,
          "stopPropagation": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="circular-image"
                style={
                  Object {
                    "backgroundImage": "url(some/url)",
                  }
                }
              />,
              "className": "navbar__account-nav-item__avatar image is-48x48",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "circular-image",
                "style": Object {
                  "backgroundImage": "url(some/url)",
                },
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            "type": "figure",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "navbar__account-nav-item__username",
            },
            "ref": null,
            "rendered": null,
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "navbar__account-nav-item__icon",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`shows only a sign-in button if the user is not logged in 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AccountNavItem
    intl={
      Object {
        "formatMessage": [MockFunction],
      }
    }
    logoutUser={[MockFunction]}
    user={
      Object {
        "id": 357,
        "isLoggedIn": false,
        "osmProfile": Object {
          "avatarURL": "some/url",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Connect(SignInButton)
        className="white-on-green navbar__account-nav-item__signin"
        intl={
          Object {
            "formatMessage": [MockFunction],
          }
        }
        logoutUser={[MockFunction]}
        user={
          Object {
            "id": 357,
            "isLoggedIn": false,
            "osmProfile": Object {
              "avatarURL": "some/url",
            },
          }
        }
      />,
      "className": "navbar-item navbar__account-nav-item login-status-known",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "className": "white-on-green navbar__account-nav-item__signin",
        "intl": Object {
          "formatMessage": [MockFunction],
        },
        "logoutUser": [MockFunction],
        "user": Object {
          "id": 357,
          "isLoggedIn": false,
          "osmProfile": Object {
            "avatarURL": "some/url",
          },
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Connect(SignInButton)
          className="white-on-green navbar__account-nav-item__signin"
          intl={
            Object {
              "formatMessage": [MockFunction],
            }
          }
          logoutUser={[MockFunction]}
          user={
            Object {
              "id": 357,
              "isLoggedIn": false,
              "osmProfile": Object {
                "avatarURL": "some/url",
              },
            }
          }
        />,
        "className": "navbar-item navbar__account-nav-item login-status-known",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "className": "white-on-green navbar__account-nav-item__signin",
          "intl": Object {
            "formatMessage": [MockFunction],
          },
          "logoutUser": [MockFunction],
          "user": Object {
            "id": 357,
            "isLoggedIn": false,
            "osmProfile": Object {
              "avatarURL": "some/url",
            },
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
