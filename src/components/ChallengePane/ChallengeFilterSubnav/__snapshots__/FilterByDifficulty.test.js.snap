// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`it renders with props as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FilterByDifficulty
    asMenuList={false}
    challenges={
      Array [
        Object {
          "blurb": "Challenge 309 blurb",
          "description": "Challenge 309 description",
          "id": 309,
          "name": "Challenge 309",
          "parent": Object {
            "displayName": "foo",
          },
        },
        Object {
          "blurb": "Challenge 311 blurb",
          "description": "Challenge 311 description",
          "id": 311,
          "name": "Challenge 311",
          "parent": Object {
            "displayName": "bar",
          },
        },
      ]
    }
    intl={
      Object {
        "formatMessage": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "defaultMessage": "Easy",
                "id": "Challenge.difficulty.easy",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Normal",
                "id": "Challenge.difficulty.normal",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Expert",
                "id": "Challenge.difficulty.expert",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Any",
                "id": "Challenge.difficulty.any",
              },
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": "Easy",
            },
            Object {
              "isThrow": false,
              "value": "Normal",
            },
            Object {
              "isThrow": false,
              "value": "Expert",
            },
            Object {
              "isThrow": false,
              "value": "Any",
            },
          ],
        },
      }
    }
    removeSearchFilters={[MockFunction]}
    searchFilters={
      Object {
        "difficulty": 1,
      }
    }
    setSearchFilters={[MockFunction]}
    user={
      Object {
        "id": 11,
        "savedChallenges": Array [],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "eventTypes": Array [
        "mousedown",
        "touchstart",
      ],
      "excludeScrollbar": false,
      "label": <FormattedMessage
        defaultMessage="Difficulty"
        id="ChallengeFilterSubnav.filter.difficulty.label"
        values={Object {}}
      />,
      "onChange": [Function],
      "options": Array [
        Object {
          "key": "any",
          "text": "Any",
          "value": undefined,
        },
        Object {
          "key": 1,
          "text": "Easy",
          "value": 1,
        },
        Object {
          "key": 2,
          "text": "Normal",
          "value": 2,
        },
        Object {
          "key": 3,
          "text": "Expert",
          "value": 3,
        },
      ],
      "outsideClickIgnoreClass": "ignore-react-onclickoutside",
      "placeholder": "Any",
      "preventDefault": false,
      "stopPropagation": false,
      "value": 1,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "eventTypes": Array [
          "mousedown",
          "touchstart",
        ],
        "excludeScrollbar": false,
        "label": <FormattedMessage
          defaultMessage="Difficulty"
          id="ChallengeFilterSubnav.filter.difficulty.label"
          values={Object {}}
        />,
        "onChange": [Function],
        "options": Array [
          Object {
            "key": "any",
            "text": "Any",
            "value": undefined,
          },
          Object {
            "key": 1,
            "text": "Easy",
            "value": 1,
          },
          Object {
            "key": 2,
            "text": "Normal",
            "value": 2,
          },
          Object {
            "key": 3,
            "text": "Expert",
            "value": 3,
          },
        ],
        "outsideClickIgnoreClass": "ignore-react-onclickoutside",
        "placeholder": "Any",
        "preventDefault": false,
        "stopPropagation": false,
        "value": 1,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
