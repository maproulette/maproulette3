// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`it renders with props as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FilterByKeyword
    asMenuList={false}
    challenges={
      Array [
        Object {
          "blurb": "Challenge 309 blurb",
          "description": "Challenge 309 description",
          "id": 309,
          "name": "Challenge 309",
          "parent": Object {
            "displayName": "foo",
          },
        },
        Object {
          "blurb": "Challenge 311 blurb",
          "description": "Challenge 311 description",
          "id": 311,
          "name": "Challenge 311",
          "parent": Object {
            "displayName": "bar",
          },
        },
      ]
    }
    intl={
      Object {
        "formatMessage": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "defaultMessage": "Roads / Pedestrian / Cycleways",
                "id": "Challenge.keywords.navigation",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Water",
                "id": "Challenge.keywords.water",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Points / Areas of Interest",
                "id": "Challenge.keywords.pointsOfInterest",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Buildings",
                "id": "Challenge.keywords.buildings",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Land Use / Administrative Boundaries",
                "id": "Challenge.keywords.landUse",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Transit",
                "id": "Challenge.keywords.transit",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Other",
                "id": "Challenge.keywords.other",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Anything",
                "id": "Challenge.keywords.any",
              },
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      }
    }
    removeSearchFilters={[MockFunction]}
    searchFilters={
      Object {
        "difficulty": 1,
        "keywords": "Challenge",
      }
    }
    setKeywordFilter={[MockFunction]}
    user={
      Object {
        "id": 11,
        "savedChallenges": Array [],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "eventTypes": Array [
        "mousedown",
        "touchstart",
      ],
      "excludeScrollbar": false,
      "label": <FormattedMessage
        defaultMessage="Work on"
        id="ChallengeFilterSubnav.filter.keyword.label"
        values={Object {}}
      />,
      "onChange": [Function],
      "options": Array [
        Object {
          "key": "any",
          "text": undefined,
          "value": null,
        },
        Object {
          "key": "navigation",
          "text": undefined,
          "value": "navigation",
        },
        Object {
          "key": "water",
          "text": undefined,
          "value": "water",
        },
        Object {
          "key": "pointsOfInterest",
          "text": undefined,
          "value": "pointsOfInterest",
        },
        Object {
          "key": "buildings",
          "text": undefined,
          "value": "buildings",
        },
        Object {
          "key": "landUse",
          "text": undefined,
          "value": "landUse",
        },
        Object {
          "key": "transit",
          "text": undefined,
          "value": "transit",
        },
        Object {
          "Renderable": [Function],
          "key": "other",
          "ownProps": Object {
            "clearSearch": [Function],
            "placeholder": "",
            "searchQuery": Object {
              "query": "C",
            },
            "setSearch": [Function],
          },
          "text": undefined,
          "value": "other",
        },
      ],
      "outsideClickIgnoreClass": "ignore-react-onclickoutside",
      "placeholder": undefined,
      "preventDefault": false,
      "stopPropagation": false,
      "value": "other",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "eventTypes": Array [
          "mousedown",
          "touchstart",
        ],
        "excludeScrollbar": false,
        "label": <FormattedMessage
          defaultMessage="Work on"
          id="ChallengeFilterSubnav.filter.keyword.label"
          values={Object {}}
        />,
        "onChange": [Function],
        "options": Array [
          Object {
            "key": "any",
            "text": undefined,
            "value": null,
          },
          Object {
            "key": "navigation",
            "text": undefined,
            "value": "navigation",
          },
          Object {
            "key": "water",
            "text": undefined,
            "value": "water",
          },
          Object {
            "key": "pointsOfInterest",
            "text": undefined,
            "value": "pointsOfInterest",
          },
          Object {
            "key": "buildings",
            "text": undefined,
            "value": "buildings",
          },
          Object {
            "key": "landUse",
            "text": undefined,
            "value": "landUse",
          },
          Object {
            "key": "transit",
            "text": undefined,
            "value": "transit",
          },
          Object {
            "Renderable": [Function],
            "key": "other",
            "ownProps": Object {
              "clearSearch": [Function],
              "placeholder": "",
              "searchQuery": Object {
                "query": "C",
              },
              "setSearch": [Function],
            },
            "text": undefined,
            "value": "other",
          },
        ],
        "outsideClickIgnoreClass": "ignore-react-onclickoutside",
        "placeholder": undefined,
        "preventDefault": false,
        "stopPropagation": false,
        "value": "other",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
