// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`classNames are included on the wrapper element 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBox
    className="my-class"
    clearSearch={[MockFunction]}
    deactivate={[MockFunction]}
    fetchResults={[MockFunction]}
    searchQuery={
      Object {
        "query": "",
      }
    }
    setSearch={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="search-box__search-field"
      >
        <div
          className="control-wrapper"
        >
          <SvgSymbol
            className="search-box__icon"
            sym="search-icon"
            viewBox="0 0 20 20"
          />
          <div
            className="control is-medium"
          >
            <input
              className="input is-medium search-box__input"
              maxLength="63"
              onChange={[Function]}
              onKeyDown={[Function]}
              type="text"
              value=""
            />
          </div>
        </div>
      </div>,
      "className": "search-box my-class",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value=""
              />
            </div>
          </div>,
          null,
          null,
        ],
        "className": "search-box__search-field",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />,
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />
              </div>,
            ],
            "className": "control-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "search-box__icon",
                "sym": "search-icon",
                "viewBox": "0 0 20 20",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />,
                "className": "control is-medium",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input is-medium search-box__input",
                  "maxLength": "63",
                  "onChange": [Function],
                  "onKeyDown": [Function],
                  "placeholder": undefined,
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        null,
        null,
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="search-box__search-field"
        >
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value=""
              />
            </div>
          </div>
        </div>,
        "className": "search-box my-class",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="control-wrapper"
            >
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />
              </div>
            </div>,
            null,
            null,
          ],
          "className": "search-box__search-field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <SvgSymbol
                  className="search-box__icon"
                  sym="search-icon"
                  viewBox="0 0 20 20"
                />,
                <div
                  className="control is-medium"
                >
                  <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value=""
                  />
                </div>,
              ],
              "className": "control-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "search-box__icon",
                  "sym": "search-icon",
                  "viewBox": "0 0 20 20",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value=""
                  />,
                  "className": "control is-medium",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "input is-medium search-box__input",
                    "maxLength": "63",
                    "onChange": [Function],
                    "onKeyDown": [Function],
                    "placeholder": undefined,
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          null,
          null,
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`clearSearch called when the clear button is pressed 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBox
    clearSearch={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    deactivate={[MockFunction]}
    fetchResults={[MockFunction]}
    searchQuery={
      Object {
        "query": "test me",
      }
    }
    setSearch={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="search-box__search-field"
      >
        <div
          className="control-wrapper"
        >
          <SvgSymbol
            className="search-box__icon"
            sym="search-icon"
            viewBox="0 0 20 20"
          />
          <div
            className="control is-medium"
          >
            <input
              className="input is-medium search-box__input"
              maxLength="63"
              onChange={[Function]}
              onKeyDown={[Function]}
              type="text"
              value="test me"
            />
          </div>
        </div>
        <button
          aria-label="delete"
          className="search-box--clear-button delete"
          onClick={
            [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
              ],
            }
          }
        />
      </div>,
      "className": "search-box",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value="test me"
              />
            </div>
          </div>,
          null,
          <button
            aria-label="delete"
            className="search-box--clear-button delete"
            onClick={
              [MockFunction] {
                "calls": Array [
                  Array [],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": undefined,
                  },
                ],
              }
            }
          />,
        ],
        "className": "search-box__search-field",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />,
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value="test me"
                />
              </div>,
            ],
            "className": "control-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "search-box__icon",
                "sym": "search-icon",
                "viewBox": "0 0 20 20",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value="test me"
                />,
                "className": "control is-medium",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input is-medium search-box__input",
                  "maxLength": "63",
                  "onChange": [Function],
                  "onKeyDown": [Function],
                  "placeholder": undefined,
                  "type": "text",
                  "value": "test me",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "aria-label": "delete",
            "className": "search-box--clear-button delete",
            "onClick": [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
              ],
            },
          },
          "ref": null,
          "rendered": null,
          "type": "button",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="search-box__search-field"
        >
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value="test me"
              />
            </div>
          </div>
          <button
            aria-label="delete"
            className="search-box--clear-button delete"
            onClick={
              [MockFunction] {
                "calls": Array [
                  Array [],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": undefined,
                  },
                ],
              }
            }
          />
        </div>,
        "className": "search-box",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="control-wrapper"
            >
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value="test me"
                />
              </div>
            </div>,
            null,
            <button
              aria-label="delete"
              className="search-box--clear-button delete"
              onClick={
                [MockFunction] {
                  "calls": Array [
                    Array [],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                }
              }
            />,
          ],
          "className": "search-box__search-field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <SvgSymbol
                  className="search-box__icon"
                  sym="search-icon"
                  viewBox="0 0 20 20"
                />,
                <div
                  className="control is-medium"
                >
                  <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value="test me"
                  />
                </div>,
              ],
              "className": "control-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "search-box__icon",
                  "sym": "search-icon",
                  "viewBox": "0 0 20 20",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value="test me"
                  />,
                  "className": "control is-medium",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "input is-medium search-box__input",
                    "maxLength": "63",
                    "onChange": [Function],
                    "onKeyDown": [Function],
                    "placeholder": undefined,
                    "type": "text",
                    "value": "test me",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          null,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-label": "delete",
              "className": "search-box--clear-button delete",
              "onClick": [MockFunction] {
                "calls": Array [
                  Array [],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": undefined,
                  },
                ],
              },
            },
            "ref": null,
            "rendered": null,
            "type": "button",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`clearSearch is called when escape is pressed 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBox
    clearSearch={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    deactivate={[MockFunction]}
    fetchResults={[MockFunction]}
    searchQuery={
      Object {
        "query": "",
      }
    }
    setSearch={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="search-box__search-field"
      >
        <div
          className="control-wrapper"
        >
          <SvgSymbol
            className="search-box__icon"
            sym="search-icon"
            viewBox="0 0 20 20"
          />
          <div
            className="control is-medium"
          >
            <input
              className="input is-medium search-box__input"
              maxLength="63"
              onChange={[Function]}
              onKeyDown={[Function]}
              type="text"
              value=""
            />
          </div>
        </div>
      </div>,
      "className": "search-box",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value=""
              />
            </div>
          </div>,
          null,
          null,
        ],
        "className": "search-box__search-field",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />,
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />
              </div>,
            ],
            "className": "control-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "search-box__icon",
                "sym": "search-icon",
                "viewBox": "0 0 20 20",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />,
                "className": "control is-medium",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input is-medium search-box__input",
                  "maxLength": "63",
                  "onChange": [Function],
                  "onKeyDown": [Function],
                  "placeholder": undefined,
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        null,
        null,
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="search-box__search-field"
        >
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value=""
              />
            </div>
          </div>
        </div>,
        "className": "search-box",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="control-wrapper"
            >
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />
              </div>
            </div>,
            null,
            null,
          ],
          "className": "search-box__search-field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <SvgSymbol
                  className="search-box__icon"
                  sym="search-icon"
                  viewBox="0 0 20 20"
                />,
                <div
                  className="control is-medium"
                >
                  <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value=""
                  />
                </div>,
              ],
              "className": "control-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "search-box__icon",
                  "sym": "search-icon",
                  "viewBox": "0 0 20 20",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value=""
                  />,
                  "className": "control is-medium",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "input is-medium search-box__input",
                    "maxLength": "63",
                    "onChange": [Function],
                    "onKeyDown": [Function],
                    "placeholder": undefined,
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          null,
          null,
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`deactivate function called when search icon clicked 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBox
    clearSearch={[MockFunction]}
    deactivate={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    fetchResults={[MockFunction]}
    searchQuery={
      Object {
        "query": "some query",
      }
    }
    setSearch={[MockFunction]}
    showDoneButton={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="search-box__search-field"
      >
        <div
          className="control-wrapper"
        >
          <SvgSymbol
            className="search-box__icon"
            sym="search-icon"
            viewBox="0 0 20 20"
          />
          <div
            className="control is-medium"
          >
            <input
              className="input is-medium search-box__input"
              maxLength="63"
              onChange={[Function]}
              onKeyDown={[Function]}
              type="text"
              value="some query"
            />
          </div>
        </div>
        <button
          className="button is-clear has-svg-icon search-box--done-button"
          onClick={[Function]}
        >
          <SvgSymbol
            sym="outline-arrow-right-icon"
            viewBox="0 0 20 20"
          />
        </button>
        <button
          aria-label="delete"
          className="search-box--clear-button delete"
          onClick={[MockFunction]}
        />
      </div>,
      "className": "search-box",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value="some query"
              />
            </div>
          </div>,
          <button
            className="button is-clear has-svg-icon search-box--done-button"
            onClick={[Function]}
          >
            <SvgSymbol
              sym="outline-arrow-right-icon"
              viewBox="0 0 20 20"
            />
          </button>,
          <button
            aria-label="delete"
            className="search-box--clear-button delete"
            onClick={[MockFunction]}
          />,
        ],
        "className": "search-box__search-field",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />,
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value="some query"
                />
              </div>,
            ],
            "className": "control-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "search-box__icon",
                "sym": "search-icon",
                "viewBox": "0 0 20 20",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value="some query"
                />,
                "className": "control is-medium",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input is-medium search-box__input",
                  "maxLength": "63",
                  "onChange": [Function],
                  "onKeyDown": [Function],
                  "placeholder": undefined,
                  "type": "text",
                  "value": "some query",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <SvgSymbol
              sym="outline-arrow-right-icon"
              viewBox="0 0 20 20"
            />,
            "className": "button is-clear has-svg-icon search-box--done-button",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "sym": "outline-arrow-right-icon",
              "viewBox": "0 0 20 20",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "aria-label": "delete",
            "className": "search-box--clear-button delete",
            "onClick": [MockFunction],
          },
          "ref": null,
          "rendered": null,
          "type": "button",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="search-box__search-field"
        >
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value="some query"
              />
            </div>
          </div>
          <button
            className="button is-clear has-svg-icon search-box--done-button"
            onClick={[Function]}
          >
            <SvgSymbol
              sym="outline-arrow-right-icon"
              viewBox="0 0 20 20"
            />
          </button>
          <button
            aria-label="delete"
            className="search-box--clear-button delete"
            onClick={[MockFunction]}
          />
        </div>,
        "className": "search-box",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="control-wrapper"
            >
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value="some query"
                />
              </div>
            </div>,
            <button
              className="button is-clear has-svg-icon search-box--done-button"
              onClick={[Function]}
            >
              <SvgSymbol
                sym="outline-arrow-right-icon"
                viewBox="0 0 20 20"
              />
            </button>,
            <button
              aria-label="delete"
              className="search-box--clear-button delete"
              onClick={[MockFunction]}
            />,
          ],
          "className": "search-box__search-field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <SvgSymbol
                  className="search-box__icon"
                  sym="search-icon"
                  viewBox="0 0 20 20"
                />,
                <div
                  className="control is-medium"
                >
                  <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value="some query"
                  />
                </div>,
              ],
              "className": "control-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "search-box__icon",
                  "sym": "search-icon",
                  "viewBox": "0 0 20 20",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value="some query"
                  />,
                  "className": "control is-medium",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "input is-medium search-box__input",
                    "maxLength": "63",
                    "onChange": [Function],
                    "onKeyDown": [Function],
                    "placeholder": undefined,
                    "type": "text",
                    "value": "some query",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <SvgSymbol
                sym="outline-arrow-right-icon"
                viewBox="0 0 20 20"
              />,
              "className": "button is-clear has-svg-icon search-box--done-button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "sym": "outline-arrow-right-icon",
                "viewBox": "0 0 20 20",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-label": "delete",
              "className": "search-box--clear-button delete",
              "onClick": [MockFunction],
            },
            "ref": null,
            "rendered": null,
            "type": "button",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`deactivate is called when escape is pressed 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBox
    clearSearch={[MockFunction]}
    deactivate={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    fetchResults={[MockFunction]}
    searchQuery={
      Object {
        "query": "",
      }
    }
    setSearch={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="search-box__search-field"
      >
        <div
          className="control-wrapper"
        >
          <SvgSymbol
            className="search-box__icon"
            sym="search-icon"
            viewBox="0 0 20 20"
          />
          <div
            className="control is-medium"
          >
            <input
              className="input is-medium search-box__input"
              maxLength="63"
              onChange={[Function]}
              onKeyDown={[Function]}
              type="text"
              value=""
            />
          </div>
        </div>
      </div>,
      "className": "search-box",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value=""
              />
            </div>
          </div>,
          null,
          null,
        ],
        "className": "search-box__search-field",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />,
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />
              </div>,
            ],
            "className": "control-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "search-box__icon",
                "sym": "search-icon",
                "viewBox": "0 0 20 20",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />,
                "className": "control is-medium",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input is-medium search-box__input",
                  "maxLength": "63",
                  "onChange": [Function],
                  "onKeyDown": [Function],
                  "placeholder": undefined,
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        null,
        null,
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="search-box__search-field"
        >
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value=""
              />
            </div>
          </div>
        </div>,
        "className": "search-box",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="control-wrapper"
            >
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />
              </div>
            </div>,
            null,
            null,
          ],
          "className": "search-box__search-field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <SvgSymbol
                  className="search-box__icon"
                  sym="search-icon"
                  viewBox="0 0 20 20"
                />,
                <div
                  className="control is-medium"
                >
                  <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value=""
                  />
                </div>,
              ],
              "className": "control-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "search-box__icon",
                  "sym": "search-icon",
                  "viewBox": "0 0 20 20",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value=""
                  />,
                  "className": "control is-medium",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "input is-medium search-box__input",
                    "maxLength": "63",
                    "onChange": [Function],
                    "onKeyDown": [Function],
                    "placeholder": undefined,
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          null,
          null,
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`does not show a done button if empty query string 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBox
    clearSearch={[MockFunction]}
    deactivate={[MockFunction]}
    fetchResults={[MockFunction]}
    searchQuery={
      Object {
        "query": "",
      }
    }
    setSearch={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="search-box__search-field"
      >
        <div
          className="control-wrapper"
        >
          <SvgSymbol
            className="search-box__icon"
            sym="search-icon"
            viewBox="0 0 20 20"
          />
          <div
            className="control is-medium"
          >
            <input
              className="input is-medium search-box__input"
              maxLength="63"
              onChange={[Function]}
              onKeyDown={[Function]}
              type="text"
              value=""
            />
          </div>
        </div>
      </div>,
      "className": "search-box",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value=""
              />
            </div>
          </div>,
          null,
          null,
        ],
        "className": "search-box__search-field",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />,
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />
              </div>,
            ],
            "className": "control-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "search-box__icon",
                "sym": "search-icon",
                "viewBox": "0 0 20 20",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />,
                "className": "control is-medium",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input is-medium search-box__input",
                  "maxLength": "63",
                  "onChange": [Function],
                  "onKeyDown": [Function],
                  "placeholder": undefined,
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        null,
        null,
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="search-box__search-field"
        >
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value=""
              />
            </div>
          </div>
        </div>,
        "className": "search-box",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="control-wrapper"
            >
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />
              </div>
            </div>,
            null,
            null,
          ],
          "className": "search-box__search-field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <SvgSymbol
                  className="search-box__icon"
                  sym="search-icon"
                  viewBox="0 0 20 20"
                />,
                <div
                  className="control is-medium"
                >
                  <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value=""
                  />
                </div>,
              ],
              "className": "control-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "search-box__icon",
                  "sym": "search-icon",
                  "viewBox": "0 0 20 20",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value=""
                  />,
                  "className": "control is-medium",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "input is-medium search-box__input",
                    "maxLength": "63",
                    "onChange": [Function],
                    "onKeyDown": [Function],
                    "placeholder": undefined,
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          null,
          null,
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`does not show a done button if showDoneButton is false even if there is a query string 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBox
    clearSearch={[MockFunction]}
    deactivate={[MockFunction]}
    fetchResults={[MockFunction]}
    searchQuery={
      Object {
        "query": "test me",
      }
    }
    setSearch={[MockFunction]}
    showDoneButton={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="search-box__search-field"
      >
        <div
          className="control-wrapper"
        >
          <SvgSymbol
            className="search-box__icon"
            sym="search-icon"
            viewBox="0 0 20 20"
          />
          <div
            className="control is-medium"
          >
            <input
              className="input is-medium search-box__input"
              maxLength="63"
              onChange={[Function]}
              onKeyDown={[Function]}
              type="text"
              value="test me"
            />
          </div>
        </div>
        <button
          aria-label="delete"
          className="search-box--clear-button delete"
          onClick={[MockFunction]}
        />
      </div>,
      "className": "search-box",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value="test me"
              />
            </div>
          </div>,
          null,
          <button
            aria-label="delete"
            className="search-box--clear-button delete"
            onClick={[MockFunction]}
          />,
        ],
        "className": "search-box__search-field",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />,
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value="test me"
                />
              </div>,
            ],
            "className": "control-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "search-box__icon",
                "sym": "search-icon",
                "viewBox": "0 0 20 20",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value="test me"
                />,
                "className": "control is-medium",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input is-medium search-box__input",
                  "maxLength": "63",
                  "onChange": [Function],
                  "onKeyDown": [Function],
                  "placeholder": undefined,
                  "type": "text",
                  "value": "test me",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "aria-label": "delete",
            "className": "search-box--clear-button delete",
            "onClick": [MockFunction],
          },
          "ref": null,
          "rendered": null,
          "type": "button",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="search-box__search-field"
        >
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value="test me"
              />
            </div>
          </div>
          <button
            aria-label="delete"
            className="search-box--clear-button delete"
            onClick={[MockFunction]}
          />
        </div>,
        "className": "search-box",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="control-wrapper"
            >
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value="test me"
                />
              </div>
            </div>,
            null,
            <button
              aria-label="delete"
              className="search-box--clear-button delete"
              onClick={[MockFunction]}
            />,
          ],
          "className": "search-box__search-field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <SvgSymbol
                  className="search-box__icon"
                  sym="search-icon"
                  viewBox="0 0 20 20"
                />,
                <div
                  className="control is-medium"
                >
                  <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value="test me"
                  />
                </div>,
              ],
              "className": "control-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "search-box__icon",
                  "sym": "search-icon",
                  "viewBox": "0 0 20 20",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value="test me"
                  />,
                  "className": "control is-medium",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "input is-medium search-box__input",
                    "maxLength": "63",
                    "onChange": [Function],
                    "onKeyDown": [Function],
                    "placeholder": undefined,
                    "type": "text",
                    "value": "test me",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          null,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-label": "delete",
              "className": "search-box--clear-button delete",
              "onClick": [MockFunction],
            },
            "ref": null,
            "rendered": null,
            "type": "button",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`does not show a search icon if suppressIcon is true 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBox
    clearSearch={[MockFunction]}
    deactivate={[MockFunction]}
    fetchResults={[MockFunction]}
    searchQuery={
      Object {
        "query": "",
      }
    }
    setSearch={[MockFunction]}
    suppressIcon={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="search-box__search-field"
      >
        <div
          className="control-wrapper"
        >
          <div
            className="control is-medium"
          >
            <input
              className="input is-medium search-box__input"
              maxLength="63"
              onChange={[Function]}
              onKeyDown={[Function]}
              type="text"
              value=""
            />
          </div>
        </div>
      </div>,
      "className": "search-box",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="control-wrapper"
          >
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value=""
              />
            </div>
          </div>,
          null,
          null,
        ],
        "className": "search-box__search-field",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />
              </div>,
            ],
            "className": "control-wrapper",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />,
                "className": "control is-medium",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input is-medium search-box__input",
                  "maxLength": "63",
                  "onChange": [Function],
                  "onKeyDown": [Function],
                  "placeholder": undefined,
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        null,
        null,
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="search-box__search-field"
        >
          <div
            className="control-wrapper"
          >
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value=""
              />
            </div>
          </div>
        </div>,
        "className": "search-box",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="control-wrapper"
            >
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />
              </div>
            </div>,
            null,
            null,
          ],
          "className": "search-box__search-field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                false,
                <div
                  className="control is-medium"
                >
                  <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value=""
                  />
                </div>,
              ],
              "className": "control-wrapper",
            },
            "ref": null,
            "rendered": Array [
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value=""
                  />,
                  "className": "control is-medium",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "input is-medium search-box__input",
                    "maxLength": "63",
                    "onChange": [Function],
                    "onKeyDown": [Function],
                    "placeholder": undefined,
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          null,
          null,
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`does show a search icon when suppressIcon is false 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBox
    clearSearch={[MockFunction]}
    deactivate={[MockFunction]}
    fetchResults={[MockFunction]}
    searchQuery={
      Object {
        "query": "",
      }
    }
    setSearch={[MockFunction]}
    suppressIcon={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="search-box__search-field"
      >
        <div
          className="control-wrapper"
        >
          <SvgSymbol
            className="search-box__icon"
            sym="search-icon"
            viewBox="0 0 20 20"
          />
          <div
            className="control is-medium"
          >
            <input
              className="input is-medium search-box__input"
              maxLength="63"
              onChange={[Function]}
              onKeyDown={[Function]}
              type="text"
              value=""
            />
          </div>
        </div>
      </div>,
      "className": "search-box",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value=""
              />
            </div>
          </div>,
          null,
          null,
        ],
        "className": "search-box__search-field",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />,
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />
              </div>,
            ],
            "className": "control-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "search-box__icon",
                "sym": "search-icon",
                "viewBox": "0 0 20 20",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />,
                "className": "control is-medium",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input is-medium search-box__input",
                  "maxLength": "63",
                  "onChange": [Function],
                  "onKeyDown": [Function],
                  "placeholder": undefined,
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        null,
        null,
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="search-box__search-field"
        >
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value=""
              />
            </div>
          </div>
        </div>,
        "className": "search-box",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="control-wrapper"
            >
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />
              </div>
            </div>,
            null,
            null,
          ],
          "className": "search-box__search-field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <SvgSymbol
                  className="search-box__icon"
                  sym="search-icon"
                  viewBox="0 0 20 20"
                />,
                <div
                  className="control is-medium"
                >
                  <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value=""
                  />
                </div>,
              ],
              "className": "control-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "search-box__icon",
                  "sym": "search-icon",
                  "viewBox": "0 0 20 20",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value=""
                  />,
                  "className": "control is-medium",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "input is-medium search-box__input",
                    "maxLength": "63",
                    "onChange": [Function],
                    "onKeyDown": [Function],
                    "placeholder": undefined,
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          null,
          null,
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`is-loading class added when searchQuery.fetchingResults 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBox
    clearSearch={[MockFunction]}
    deactivate={[MockFunction]}
    fetchResults={[MockFunction]}
    searchQuery={
      Object {
        "meta": Object {
          "fetchingResults": "myFetchId",
        },
        "query": "test me",
      }
    }
    setSearch={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="search-box__search-field"
      >
        <div
          className="control-wrapper"
        >
          <SvgSymbol
            className="search-box__icon"
            sym="search-icon"
            viewBox="0 0 20 20"
          />
          <div
            className="control is-medium is-loading"
          >
            <input
              className="input is-medium search-box__input"
              maxLength="63"
              onChange={[Function]}
              onKeyDown={[Function]}
              type="text"
              value="test me"
            />
          </div>
        </div>
        <button
          aria-label="delete"
          className="search-box--clear-button delete"
          onClick={[MockFunction]}
        />
      </div>,
      "className": "search-box",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium is-loading"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value="test me"
              />
            </div>
          </div>,
          null,
          <button
            aria-label="delete"
            className="search-box--clear-button delete"
            onClick={[MockFunction]}
          />,
        ],
        "className": "search-box__search-field",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />,
              <div
                className="control is-medium is-loading"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value="test me"
                />
              </div>,
            ],
            "className": "control-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "search-box__icon",
                "sym": "search-icon",
                "viewBox": "0 0 20 20",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value="test me"
                />,
                "className": "control is-medium is-loading",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input is-medium search-box__input",
                  "maxLength": "63",
                  "onChange": [Function],
                  "onKeyDown": [Function],
                  "placeholder": undefined,
                  "type": "text",
                  "value": "test me",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "aria-label": "delete",
            "className": "search-box--clear-button delete",
            "onClick": [MockFunction],
          },
          "ref": null,
          "rendered": null,
          "type": "button",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="search-box__search-field"
        >
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium is-loading"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value="test me"
              />
            </div>
          </div>
          <button
            aria-label="delete"
            className="search-box--clear-button delete"
            onClick={[MockFunction]}
          />
        </div>,
        "className": "search-box",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="control-wrapper"
            >
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />
              <div
                className="control is-medium is-loading"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value="test me"
                />
              </div>
            </div>,
            null,
            <button
              aria-label="delete"
              className="search-box--clear-button delete"
              onClick={[MockFunction]}
            />,
          ],
          "className": "search-box__search-field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <SvgSymbol
                  className="search-box__icon"
                  sym="search-icon"
                  viewBox="0 0 20 20"
                />,
                <div
                  className="control is-medium is-loading"
                >
                  <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value="test me"
                  />
                </div>,
              ],
              "className": "control-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "search-box__icon",
                  "sym": "search-icon",
                  "viewBox": "0 0 20 20",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value="test me"
                  />,
                  "className": "control is-medium is-loading",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "input is-medium search-box__input",
                    "maxLength": "63",
                    "onChange": [Function],
                    "onKeyDown": [Function],
                    "placeholder": undefined,
                    "type": "text",
                    "value": "test me",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          null,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-label": "delete",
              "className": "search-box--clear-button delete",
              "onClick": [MockFunction],
            },
            "ref": null,
            "rendered": null,
            "type": "button",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`is-loading class not present normally 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBox
    clearSearch={[MockFunction]}
    deactivate={[MockFunction]}
    fetchResults={[MockFunction]}
    searchQuery={
      Object {
        "query": "",
      }
    }
    setSearch={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="search-box__search-field"
      >
        <div
          className="control-wrapper"
        >
          <SvgSymbol
            className="search-box__icon"
            sym="search-icon"
            viewBox="0 0 20 20"
          />
          <div
            className="control is-medium"
          >
            <input
              className="input is-medium search-box__input"
              maxLength="63"
              onChange={[Function]}
              onKeyDown={[Function]}
              type="text"
              value=""
            />
          </div>
        </div>
      </div>,
      "className": "search-box",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value=""
              />
            </div>
          </div>,
          null,
          null,
        ],
        "className": "search-box__search-field",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />,
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />
              </div>,
            ],
            "className": "control-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "search-box__icon",
                "sym": "search-icon",
                "viewBox": "0 0 20 20",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />,
                "className": "control is-medium",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input is-medium search-box__input",
                  "maxLength": "63",
                  "onChange": [Function],
                  "onKeyDown": [Function],
                  "placeholder": undefined,
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        null,
        null,
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="search-box__search-field"
        >
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value=""
              />
            </div>
          </div>
        </div>,
        "className": "search-box",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="control-wrapper"
            >
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />
              </div>
            </div>,
            null,
            null,
          ],
          "className": "search-box__search-field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <SvgSymbol
                  className="search-box__icon"
                  sym="search-icon"
                  viewBox="0 0 20 20"
                />,
                <div
                  className="control is-medium"
                >
                  <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value=""
                  />
                </div>,
              ],
              "className": "control-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "search-box__icon",
                  "sym": "search-icon",
                  "viewBox": "0 0 20 20",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value=""
                  />,
                  "className": "control is-medium",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "input is-medium search-box__input",
                    "maxLength": "63",
                    "onChange": [Function],
                    "onKeyDown": [Function],
                    "placeholder": undefined,
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          null,
          null,
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`placeholder props is inserted into text box 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBox
    clearSearch={[MockFunction]}
    deactivate={[MockFunction]}
    fetchResults={[MockFunction]}
    placeholder="some text here"
    searchQuery={
      Object {
        "query": "",
      }
    }
    setSearch={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="search-box__search-field"
      >
        <div
          className="control-wrapper"
        >
          <SvgSymbol
            className="search-box__icon"
            sym="search-icon"
            viewBox="0 0 20 20"
          />
          <div
            className="control is-medium"
          >
            <input
              className="input is-medium search-box__input"
              maxLength="63"
              onChange={[Function]}
              onKeyDown={[Function]}
              placeholder="some text here"
              type="text"
              value=""
            />
          </div>
        </div>
      </div>,
      "className": "search-box",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                placeholder="some text here"
                type="text"
                value=""
              />
            </div>
          </div>,
          null,
          null,
        ],
        "className": "search-box__search-field",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />,
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  placeholder="some text here"
                  type="text"
                  value=""
                />
              </div>,
            ],
            "className": "control-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "search-box__icon",
                "sym": "search-icon",
                "viewBox": "0 0 20 20",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  placeholder="some text here"
                  type="text"
                  value=""
                />,
                "className": "control is-medium",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input is-medium search-box__input",
                  "maxLength": "63",
                  "onChange": [Function],
                  "onKeyDown": [Function],
                  "placeholder": "some text here",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        null,
        null,
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="search-box__search-field"
        >
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                placeholder="some text here"
                type="text"
                value=""
              />
            </div>
          </div>
        </div>,
        "className": "search-box",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="control-wrapper"
            >
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  placeholder="some text here"
                  type="text"
                  value=""
                />
              </div>
            </div>,
            null,
            null,
          ],
          "className": "search-box__search-field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <SvgSymbol
                  className="search-box__icon"
                  sym="search-icon"
                  viewBox="0 0 20 20"
                />,
                <div
                  className="control is-medium"
                >
                  <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    placeholder="some text here"
                    type="text"
                    value=""
                  />
                </div>,
              ],
              "className": "control-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "search-box__icon",
                  "sym": "search-icon",
                  "viewBox": "0 0 20 20",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    placeholder="some text here"
                    type="text"
                    value=""
                  />,
                  "className": "control is-medium",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "input is-medium search-box__input",
                    "maxLength": "63",
                    "onChange": [Function],
                    "onKeyDown": [Function],
                    "placeholder": "some text here",
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          null,
          null,
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`setSearch called when the query in box is changed 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBox
    clearSearch={[MockFunction]}
    deactivate={[MockFunction]}
    fetchResults={[MockFunction]}
    searchQuery={
      Object {
        "query": "",
      }
    }
    setSearch={
      [MockFunction] {
        "calls": Array [
          Array [
            "Hello",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="search-box__search-field"
      >
        <div
          className="control-wrapper"
        >
          <SvgSymbol
            className="search-box__icon"
            sym="search-icon"
            viewBox="0 0 20 20"
          />
          <div
            className="control is-medium"
          >
            <input
              className="input is-medium search-box__input"
              maxLength="63"
              onChange={[Function]}
              onKeyDown={[Function]}
              type="text"
              value=""
            />
          </div>
        </div>
      </div>,
      "className": "search-box",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value=""
              />
            </div>
          </div>,
          null,
          null,
        ],
        "className": "search-box__search-field",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />,
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />
              </div>,
            ],
            "className": "control-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "search-box__icon",
                "sym": "search-icon",
                "viewBox": "0 0 20 20",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />,
                "className": "control is-medium",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input is-medium search-box__input",
                  "maxLength": "63",
                  "onChange": [Function],
                  "onKeyDown": [Function],
                  "placeholder": undefined,
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        null,
        null,
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="search-box__search-field"
        >
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value=""
              />
            </div>
          </div>
        </div>,
        "className": "search-box",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="control-wrapper"
            >
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value=""
                />
              </div>
            </div>,
            null,
            null,
          ],
          "className": "search-box__search-field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <SvgSymbol
                  className="search-box__icon"
                  sym="search-icon"
                  viewBox="0 0 20 20"
                />,
                <div
                  className="control is-medium"
                >
                  <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value=""
                  />
                </div>,
              ],
              "className": "control-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "search-box__icon",
                  "sym": "search-icon",
                  "viewBox": "0 0 20 20",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value=""
                  />,
                  "className": "control is-medium",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "input is-medium search-box__input",
                    "maxLength": "63",
                    "onChange": [Function],
                    "onKeyDown": [Function],
                    "placeholder": undefined,
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          null,
          null,
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`shows a clear button if there is a query in the search box 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBox
    clearSearch={[MockFunction]}
    deactivate={[MockFunction]}
    fetchResults={[MockFunction]}
    searchQuery={
      Object {
        "query": "test me",
      }
    }
    setSearch={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="search-box__search-field"
      >
        <div
          className="control-wrapper"
        >
          <SvgSymbol
            className="search-box__icon"
            sym="search-icon"
            viewBox="0 0 20 20"
          />
          <div
            className="control is-medium"
          >
            <input
              className="input is-medium search-box__input"
              maxLength="63"
              onChange={[Function]}
              onKeyDown={[Function]}
              type="text"
              value="test me"
            />
          </div>
        </div>
        <button
          aria-label="delete"
          className="search-box--clear-button delete"
          onClick={[MockFunction]}
        />
      </div>,
      "className": "search-box",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value="test me"
              />
            </div>
          </div>,
          null,
          <button
            aria-label="delete"
            className="search-box--clear-button delete"
            onClick={[MockFunction]}
          />,
        ],
        "className": "search-box__search-field",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />,
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value="test me"
                />
              </div>,
            ],
            "className": "control-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "search-box__icon",
                "sym": "search-icon",
                "viewBox": "0 0 20 20",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value="test me"
                />,
                "className": "control is-medium",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input is-medium search-box__input",
                  "maxLength": "63",
                  "onChange": [Function],
                  "onKeyDown": [Function],
                  "placeholder": undefined,
                  "type": "text",
                  "value": "test me",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "aria-label": "delete",
            "className": "search-box--clear-button delete",
            "onClick": [MockFunction],
          },
          "ref": null,
          "rendered": null,
          "type": "button",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="search-box__search-field"
        >
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value="test me"
              />
            </div>
          </div>
          <button
            aria-label="delete"
            className="search-box--clear-button delete"
            onClick={[MockFunction]}
          />
        </div>,
        "className": "search-box",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="control-wrapper"
            >
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value="test me"
                />
              </div>
            </div>,
            null,
            <button
              aria-label="delete"
              className="search-box--clear-button delete"
              onClick={[MockFunction]}
            />,
          ],
          "className": "search-box__search-field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <SvgSymbol
                  className="search-box__icon"
                  sym="search-icon"
                  viewBox="0 0 20 20"
                />,
                <div
                  className="control is-medium"
                >
                  <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value="test me"
                  />
                </div>,
              ],
              "className": "control-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "search-box__icon",
                  "sym": "search-icon",
                  "viewBox": "0 0 20 20",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value="test me"
                  />,
                  "className": "control is-medium",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "input is-medium search-box__input",
                    "maxLength": "63",
                    "onChange": [Function],
                    "onKeyDown": [Function],
                    "placeholder": undefined,
                    "type": "text",
                    "value": "test me",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          null,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-label": "delete",
              "className": "search-box--clear-button delete",
              "onClick": [MockFunction],
            },
            "ref": null,
            "rendered": null,
            "type": "button",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`shows a done button if showDoneButton is true and there is a query string 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBox
    clearSearch={[MockFunction]}
    deactivate={[MockFunction]}
    fetchResults={[MockFunction]}
    searchQuery={
      Object {
        "query": "test Me",
      }
    }
    setSearch={[MockFunction]}
    showDoneButton={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="search-box__search-field"
      >
        <div
          className="control-wrapper"
        >
          <SvgSymbol
            className="search-box__icon"
            sym="search-icon"
            viewBox="0 0 20 20"
          />
          <div
            className="control is-medium"
          >
            <input
              className="input is-medium search-box__input"
              maxLength="63"
              onChange={[Function]}
              onKeyDown={[Function]}
              type="text"
              value="test Me"
            />
          </div>
        </div>
        <button
          className="button is-clear has-svg-icon search-box--done-button"
          onClick={[Function]}
        >
          <SvgSymbol
            sym="outline-arrow-right-icon"
            viewBox="0 0 20 20"
          />
        </button>
        <button
          aria-label="delete"
          className="search-box--clear-button delete"
          onClick={[MockFunction]}
        />
      </div>,
      "className": "search-box",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value="test Me"
              />
            </div>
          </div>,
          <button
            className="button is-clear has-svg-icon search-box--done-button"
            onClick={[Function]}
          >
            <SvgSymbol
              sym="outline-arrow-right-icon"
              viewBox="0 0 20 20"
            />
          </button>,
          <button
            aria-label="delete"
            className="search-box--clear-button delete"
            onClick={[MockFunction]}
          />,
        ],
        "className": "search-box__search-field",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />,
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value="test Me"
                />
              </div>,
            ],
            "className": "control-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "search-box__icon",
                "sym": "search-icon",
                "viewBox": "0 0 20 20",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value="test Me"
                />,
                "className": "control is-medium",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input is-medium search-box__input",
                  "maxLength": "63",
                  "onChange": [Function],
                  "onKeyDown": [Function],
                  "placeholder": undefined,
                  "type": "text",
                  "value": "test Me",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <SvgSymbol
              sym="outline-arrow-right-icon"
              viewBox="0 0 20 20"
            />,
            "className": "button is-clear has-svg-icon search-box--done-button",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "sym": "outline-arrow-right-icon",
              "viewBox": "0 0 20 20",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "aria-label": "delete",
            "className": "search-box--clear-button delete",
            "onClick": [MockFunction],
          },
          "ref": null,
          "rendered": null,
          "type": "button",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="search-box__search-field"
        >
          <div
            className="control-wrapper"
          >
            <SvgSymbol
              className="search-box__icon"
              sym="search-icon"
              viewBox="0 0 20 20"
            />
            <div
              className="control is-medium"
            >
              <input
                className="input is-medium search-box__input"
                maxLength="63"
                onChange={[Function]}
                onKeyDown={[Function]}
                type="text"
                value="test Me"
              />
            </div>
          </div>
          <button
            className="button is-clear has-svg-icon search-box--done-button"
            onClick={[Function]}
          >
            <SvgSymbol
              sym="outline-arrow-right-icon"
              viewBox="0 0 20 20"
            />
          </button>
          <button
            aria-label="delete"
            className="search-box--clear-button delete"
            onClick={[MockFunction]}
          />
        </div>,
        "className": "search-box",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="control-wrapper"
            >
              <SvgSymbol
                className="search-box__icon"
                sym="search-icon"
                viewBox="0 0 20 20"
              />
              <div
                className="control is-medium"
              >
                <input
                  className="input is-medium search-box__input"
                  maxLength="63"
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  type="text"
                  value="test Me"
                />
              </div>
            </div>,
            <button
              className="button is-clear has-svg-icon search-box--done-button"
              onClick={[Function]}
            >
              <SvgSymbol
                sym="outline-arrow-right-icon"
                viewBox="0 0 20 20"
              />
            </button>,
            <button
              aria-label="delete"
              className="search-box--clear-button delete"
              onClick={[MockFunction]}
            />,
          ],
          "className": "search-box__search-field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <SvgSymbol
                  className="search-box__icon"
                  sym="search-icon"
                  viewBox="0 0 20 20"
                />,
                <div
                  className="control is-medium"
                >
                  <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value="test Me"
                  />
                </div>,
              ],
              "className": "control-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "search-box__icon",
                  "sym": "search-icon",
                  "viewBox": "0 0 20 20",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    className="input is-medium search-box__input"
                    maxLength="63"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text"
                    value="test Me"
                  />,
                  "className": "control is-medium",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "input is-medium search-box__input",
                    "maxLength": "63",
                    "onChange": [Function],
                    "onKeyDown": [Function],
                    "placeholder": undefined,
                    "type": "text",
                    "value": "test Me",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <SvgSymbol
                sym="outline-arrow-right-icon"
                viewBox="0 0 20 20"
              />,
              "className": "button is-clear has-svg-icon search-box--done-button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "sym": "outline-arrow-right-icon",
                "viewBox": "0 0 20 20",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-label": "delete",
              "className": "search-box--clear-button delete",
              "onClick": [MockFunction],
            },
            "ref": null,
            "rendered": null,
            "type": "button",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
