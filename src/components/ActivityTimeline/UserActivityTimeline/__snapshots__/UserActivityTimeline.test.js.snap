// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`it does not consolidate duplicate activities on different days 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserActivityTimeline
    activity={
      Array [
        Object {
          "action": 0,
          "challengeId": 123,
          "challengeName": "Challenge 123",
          "created": "2017-02-20T20:42:19-08:00",
          "status": 1,
          "typeId": 2,
        },
        Object {
          "action": 0,
          "challengeId": 123,
          "challengeName": "Challenge 123",
          "created": "2017-02-24T20:42:20-08:00",
          "status": 1,
          "typeId": 2,
        },
        Object {
          "action": 0,
          "challengeId": 123,
          "challengeName": "Challenge 123",
          "created": "2017-02-25T21:42:20-08:00",
          "status": 3,
          "typeId": 2,
        },
      ]
    }
    intl={
      Object {
        "formatDate": [MockFunction] {
          "calls": Array [
            Array [
              2017-02-26T00:00:00.000Z,
              Object {
                "day": "numeric",
                "month": "long",
              },
            ],
            Array [
              2017-02-25T00:00:00.000Z,
              Object {
                "day": "numeric",
                "month": "long",
              },
            ],
            Array [
              2017-02-21T00:00:00.000Z,
              Object {
                "day": "numeric",
                "month": "long",
              },
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
        "formatMessage": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "defaultMessage": "Updated",
                "id": "Activity.action.updated",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Created",
                "id": "Activity.action.created",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Deleted",
                "id": "Activity.action.deleted",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Viewed",
                "id": "Activity.action.taskViewed",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Set Status on",
                "id": "Activity.action.taskStatusSet",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Added Tag to",
                "id": "Activity.action.tagAdded",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Removed Tag from",
                "id": "Activity.action.tagRemoved",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Answered Question on",
                "id": "Activity.action.questionAnswered",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Project",
                "id": "Activity.item.project",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Challenge",
                "id": "Activity.item.challenge",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Task",
                "id": "Activity.item.task",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Tag",
                "id": "Activity.item.tag",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Survey",
                "id": "Activity.item.survey",
              },
            ],
            Array [
              Object {
                "defaultMessage": "User",
                "id": "Activity.item.user",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Group",
                "id": "Activity.item.group",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Created",
                "id": "Task.status.created",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Fixed",
                "id": "Task.status.fixed",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Not an Issue",
                "id": "Task.status.falsePositive",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Skipped",
                "id": "Task.status.skipped",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Deleted",
                "id": "Task.status.deleted",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Already Fixed",
                "id": "Task.status.alreadyFixed",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Too Hard",
                "id": "Task.status.tooHard",
              },
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      }
    }
    startOfDay={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="timeline-header"
        >
          <span
            className="tag is-medium"
          >
            Activity
          </span>
        </header>,
        Array [
          <div
            className="timeline-item"
          >
            <div
              className="timeline-marker"
            />
            <div
              className="timeline-content"
            >
              <p
                className="heading"
              />
              <div
                className="challenge-activity"
              >
                <div
                  className="challenge-name"
                >
                  <Link
                    replace={false}
                    to="/browse/challenges/NaN"
                  />
                </div>
                <p
                  className="timeline-item__activity-entry"
                >
                  <span
                    className="badge"
                    data-badge={1}
                  >
                    undefined undefined as undefined
                  </span>
                </p>
              </div>
            </div>
          </div>,
          <div
            className="timeline-item"
          >
            <div
              className="timeline-marker"
            />
            <div
              className="timeline-content"
            >
              <p
                className="heading"
              />
              <div
                className="challenge-activity"
              >
                <div
                  className="challenge-name"
                >
                  <Link
                    replace={false}
                    to="/browse/challenges/NaN"
                  />
                </div>
                <p
                  className="timeline-item__activity-entry"
                >
                  <span
                    className="badge"
                    data-badge={1}
                  >
                    undefined undefined as undefined
                  </span>
                </p>
              </div>
            </div>
          </div>,
          <div
            className="timeline-item"
          >
            <div
              className="timeline-marker"
            />
            <div
              className="timeline-content"
            >
              <p
                className="heading"
              />
              <div
                className="challenge-activity"
              >
                <div
                  className="challenge-name"
                >
                  <Link
                    replace={false}
                    to="/browse/challenges/NaN"
                  />
                </div>
                <p
                  className="timeline-item__activity-entry"
                >
                  <span
                    className="badge"
                    data-badge={1}
                  >
                    undefined undefined as undefined
                  </span>
                </p>
              </div>
            </div>
          </div>,
        ],
        <div
          className="timeline-header"
        >
          <span
            className="tag is-medium"
          >
            End
          </span>
        </div>,
      ],
      "className": "timeline activity-timeline",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="tag is-medium"
          >
            Activity
          </span>,
          "className": "timeline-header",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Activity",
            "className": "tag is-medium",
          },
          "ref": null,
          "rendered": "Activity",
          "type": "span",
        },
        "type": "header",
      },
      Object {
        "instance": null,
        "key": "2017-02-26T00:00:00.000Z",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="timeline-marker"
            />,
            <div
              className="timeline-content"
            >
              <p
                className="heading"
              />
              <div
                className="challenge-activity"
              >
                <div
                  className="challenge-name"
                >
                  <Link
                    replace={false}
                    to="/browse/challenges/NaN"
                  />
                </div>
                <p
                  className="timeline-item__activity-entry"
                >
                  <span
                    className="badge"
                    data-badge={1}
                  >
                    undefined undefined as undefined
                  </span>
                </p>
              </div>
            </div>,
          ],
          "className": "timeline-item",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "timeline-marker",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="heading"
                />,
                Array [
                  <div
                    className="challenge-activity"
                  >
                    <div
                      className="challenge-name"
                    >
                      <Link
                        replace={false}
                        to="/browse/challenges/NaN"
                      />
                    </div>
                    <p
                      className="timeline-item__activity-entry"
                    >
                      <span
                        className="badge"
                        data-badge={1}
                      >
                        undefined undefined as undefined
                      </span>
                    </p>
                  </div>,
                ],
              ],
              "className": "timeline-content",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "heading",
                },
                "ref": null,
                "rendered": null,
                "type": "p",
              },
              Object {
                "instance": null,
                "key": "NaN",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="challenge-name"
                    >
                      <Link
                        replace={false}
                        to="/browse/challenges/NaN"
                      />
                    </div>,
                    Array [
                      <p
                        className="timeline-item__activity-entry"
                      >
                        <span
                          className="badge"
                          data-badge={1}
                        >
                          undefined undefined as undefined
                        </span>
                      </p>,
                    ],
                  ],
                  "className": "challenge-activity",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Link
                        replace={false}
                        to="/browse/challenges/NaN"
                      />,
                      "className": "challenge-name",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": undefined,
                        "replace": false,
                        "to": "/browse/challenges/NaN",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": "undefined undefined as undefined",
                    "nodeType": "host",
                    "props": Object {
                      "children": <span
                        className="badge"
                        data-badge={1}
                      >
                        undefined undefined as undefined
                      </span>,
                      "className": "timeline-item__activity-entry",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "undefined undefined as undefined",
                        "className": "badge",
                        "data-badge": 1,
                      },
                      "ref": null,
                      "rendered": "undefined undefined as undefined",
                      "type": "span",
                    },
                    "type": "p",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "2017-02-25T00:00:00.000Z",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="timeline-marker"
            />,
            <div
              className="timeline-content"
            >
              <p
                className="heading"
              />
              <div
                className="challenge-activity"
              >
                <div
                  className="challenge-name"
                >
                  <Link
                    replace={false}
                    to="/browse/challenges/NaN"
                  />
                </div>
                <p
                  className="timeline-item__activity-entry"
                >
                  <span
                    className="badge"
                    data-badge={1}
                  >
                    undefined undefined as undefined
                  </span>
                </p>
              </div>
            </div>,
          ],
          "className": "timeline-item",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "timeline-marker",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="heading"
                />,
                Array [
                  <div
                    className="challenge-activity"
                  >
                    <div
                      className="challenge-name"
                    >
                      <Link
                        replace={false}
                        to="/browse/challenges/NaN"
                      />
                    </div>
                    <p
                      className="timeline-item__activity-entry"
                    >
                      <span
                        className="badge"
                        data-badge={1}
                      >
                        undefined undefined as undefined
                      </span>
                    </p>
                  </div>,
                ],
              ],
              "className": "timeline-content",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "heading",
                },
                "ref": null,
                "rendered": null,
                "type": "p",
              },
              Object {
                "instance": null,
                "key": "NaN",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="challenge-name"
                    >
                      <Link
                        replace={false}
                        to="/browse/challenges/NaN"
                      />
                    </div>,
                    Array [
                      <p
                        className="timeline-item__activity-entry"
                      >
                        <span
                          className="badge"
                          data-badge={1}
                        >
                          undefined undefined as undefined
                        </span>
                      </p>,
                    ],
                  ],
                  "className": "challenge-activity",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Link
                        replace={false}
                        to="/browse/challenges/NaN"
                      />,
                      "className": "challenge-name",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": undefined,
                        "replace": false,
                        "to": "/browse/challenges/NaN",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": "undefined undefined as undefined",
                    "nodeType": "host",
                    "props": Object {
                      "children": <span
                        className="badge"
                        data-badge={1}
                      >
                        undefined undefined as undefined
                      </span>,
                      "className": "timeline-item__activity-entry",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "undefined undefined as undefined",
                        "className": "badge",
                        "data-badge": 1,
                      },
                      "ref": null,
                      "rendered": "undefined undefined as undefined",
                      "type": "span",
                    },
                    "type": "p",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "2017-02-21T00:00:00.000Z",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="timeline-marker"
            />,
            <div
              className="timeline-content"
            >
              <p
                className="heading"
              />
              <div
                className="challenge-activity"
              >
                <div
                  className="challenge-name"
                >
                  <Link
                    replace={false}
                    to="/browse/challenges/NaN"
                  />
                </div>
                <p
                  className="timeline-item__activity-entry"
                >
                  <span
                    className="badge"
                    data-badge={1}
                  >
                    undefined undefined as undefined
                  </span>
                </p>
              </div>
            </div>,
          ],
          "className": "timeline-item",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "timeline-marker",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="heading"
                />,
                Array [
                  <div
                    className="challenge-activity"
                  >
                    <div
                      className="challenge-name"
                    >
                      <Link
                        replace={false}
                        to="/browse/challenges/NaN"
                      />
                    </div>
                    <p
                      className="timeline-item__activity-entry"
                    >
                      <span
                        className="badge"
                        data-badge={1}
                      >
                        undefined undefined as undefined
                      </span>
                    </p>
                  </div>,
                ],
              ],
              "className": "timeline-content",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "heading",
                },
                "ref": null,
                "rendered": null,
                "type": "p",
              },
              Object {
                "instance": null,
                "key": "NaN",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="challenge-name"
                    >
                      <Link
                        replace={false}
                        to="/browse/challenges/NaN"
                      />
                    </div>,
                    Array [
                      <p
                        className="timeline-item__activity-entry"
                      >
                        <span
                          className="badge"
                          data-badge={1}
                        >
                          undefined undefined as undefined
                        </span>
                      </p>,
                    ],
                  ],
                  "className": "challenge-activity",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Link
                        replace={false}
                        to="/browse/challenges/NaN"
                      />,
                      "className": "challenge-name",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": undefined,
                        "replace": false,
                        "to": "/browse/challenges/NaN",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": "undefined undefined as undefined",
                    "nodeType": "host",
                    "props": Object {
                      "children": <span
                        className="badge"
                        data-badge={1}
                      >
                        undefined undefined as undefined
                      </span>,
                      "className": "timeline-item__activity-entry",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "undefined undefined as undefined",
                        "className": "badge",
                        "data-badge": 1,
                      },
                      "ref": null,
                      "rendered": "undefined undefined as undefined",
                      "type": "span",
                    },
                    "type": "p",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="tag is-medium"
          >
            End
          </span>,
          "className": "timeline-header",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "End",
            "className": "tag is-medium",
          },
          "ref": null,
          "rendered": "End",
          "type": "span",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="timeline-header"
          >
            <span
              className="tag is-medium"
            >
              Activity
            </span>
          </header>,
          Array [
            <div
              className="timeline-item"
            >
              <div
                className="timeline-marker"
              />
              <div
                className="timeline-content"
              >
                <p
                  className="heading"
                />
                <div
                  className="challenge-activity"
                >
                  <div
                    className="challenge-name"
                  >
                    <Link
                      replace={false}
                      to="/browse/challenges/NaN"
                    />
                  </div>
                  <p
                    className="timeline-item__activity-entry"
                  >
                    <span
                      className="badge"
                      data-badge={1}
                    >
                      undefined undefined as undefined
                    </span>
                  </p>
                </div>
              </div>
            </div>,
            <div
              className="timeline-item"
            >
              <div
                className="timeline-marker"
              />
              <div
                className="timeline-content"
              >
                <p
                  className="heading"
                />
                <div
                  className="challenge-activity"
                >
                  <div
                    className="challenge-name"
                  >
                    <Link
                      replace={false}
                      to="/browse/challenges/NaN"
                    />
                  </div>
                  <p
                    className="timeline-item__activity-entry"
                  >
                    <span
                      className="badge"
                      data-badge={1}
                    >
                      undefined undefined as undefined
                    </span>
                  </p>
                </div>
              </div>
            </div>,
            <div
              className="timeline-item"
            >
              <div
                className="timeline-marker"
              />
              <div
                className="timeline-content"
              >
                <p
                  className="heading"
                />
                <div
                  className="challenge-activity"
                >
                  <div
                    className="challenge-name"
                  >
                    <Link
                      replace={false}
                      to="/browse/challenges/NaN"
                    />
                  </div>
                  <p
                    className="timeline-item__activity-entry"
                  >
                    <span
                      className="badge"
                      data-badge={1}
                    >
                      undefined undefined as undefined
                    </span>
                  </p>
                </div>
              </div>
            </div>,
          ],
          <div
            className="timeline-header"
          >
            <span
              className="tag is-medium"
            >
              End
            </span>
          </div>,
        ],
        "className": "timeline activity-timeline",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="tag is-medium"
            >
              Activity
            </span>,
            "className": "timeline-header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Activity",
              "className": "tag is-medium",
            },
            "ref": null,
            "rendered": "Activity",
            "type": "span",
          },
          "type": "header",
        },
        Object {
          "instance": null,
          "key": "2017-02-26T00:00:00.000Z",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="timeline-marker"
              />,
              <div
                className="timeline-content"
              >
                <p
                  className="heading"
                />
                <div
                  className="challenge-activity"
                >
                  <div
                    className="challenge-name"
                  >
                    <Link
                      replace={false}
                      to="/browse/challenges/NaN"
                    />
                  </div>
                  <p
                    className="timeline-item__activity-entry"
                  >
                    <span
                      className="badge"
                      data-badge={1}
                    >
                      undefined undefined as undefined
                    </span>
                  </p>
                </div>
              </div>,
            ],
            "className": "timeline-item",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "timeline-marker",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="heading"
                  />,
                  Array [
                    <div
                      className="challenge-activity"
                    >
                      <div
                        className="challenge-name"
                      >
                        <Link
                          replace={false}
                          to="/browse/challenges/NaN"
                        />
                      </div>
                      <p
                        className="timeline-item__activity-entry"
                      >
                        <span
                          className="badge"
                          data-badge={1}
                        >
                          undefined undefined as undefined
                        </span>
                      </p>
                    </div>,
                  ],
                ],
                "className": "timeline-content",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                    "className": "heading",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": "NaN",
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="challenge-name"
                      >
                        <Link
                          replace={false}
                          to="/browse/challenges/NaN"
                        />
                      </div>,
                      Array [
                        <p
                          className="timeline-item__activity-entry"
                        >
                          <span
                            className="badge"
                            data-badge={1}
                          >
                            undefined undefined as undefined
                          </span>
                        </p>,
                      ],
                    ],
                    "className": "challenge-activity",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Link
                          replace={false}
                          to="/browse/challenges/NaN"
                        />,
                        "className": "challenge-name",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": undefined,
                          "replace": false,
                          "to": "/browse/challenges/NaN",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": "undefined undefined as undefined",
                      "nodeType": "host",
                      "props": Object {
                        "children": <span
                          className="badge"
                          data-badge={1}
                        >
                          undefined undefined as undefined
                        </span>,
                        "className": "timeline-item__activity-entry",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "undefined undefined as undefined",
                          "className": "badge",
                          "data-badge": 1,
                        },
                        "ref": null,
                        "rendered": "undefined undefined as undefined",
                        "type": "span",
                      },
                      "type": "p",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "2017-02-25T00:00:00.000Z",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="timeline-marker"
              />,
              <div
                className="timeline-content"
              >
                <p
                  className="heading"
                />
                <div
                  className="challenge-activity"
                >
                  <div
                    className="challenge-name"
                  >
                    <Link
                      replace={false}
                      to="/browse/challenges/NaN"
                    />
                  </div>
                  <p
                    className="timeline-item__activity-entry"
                  >
                    <span
                      className="badge"
                      data-badge={1}
                    >
                      undefined undefined as undefined
                    </span>
                  </p>
                </div>
              </div>,
            ],
            "className": "timeline-item",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "timeline-marker",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="heading"
                  />,
                  Array [
                    <div
                      className="challenge-activity"
                    >
                      <div
                        className="challenge-name"
                      >
                        <Link
                          replace={false}
                          to="/browse/challenges/NaN"
                        />
                      </div>
                      <p
                        className="timeline-item__activity-entry"
                      >
                        <span
                          className="badge"
                          data-badge={1}
                        >
                          undefined undefined as undefined
                        </span>
                      </p>
                    </div>,
                  ],
                ],
                "className": "timeline-content",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                    "className": "heading",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": "NaN",
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="challenge-name"
                      >
                        <Link
                          replace={false}
                          to="/browse/challenges/NaN"
                        />
                      </div>,
                      Array [
                        <p
                          className="timeline-item__activity-entry"
                        >
                          <span
                            className="badge"
                            data-badge={1}
                          >
                            undefined undefined as undefined
                          </span>
                        </p>,
                      ],
                    ],
                    "className": "challenge-activity",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Link
                          replace={false}
                          to="/browse/challenges/NaN"
                        />,
                        "className": "challenge-name",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": undefined,
                          "replace": false,
                          "to": "/browse/challenges/NaN",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": "undefined undefined as undefined",
                      "nodeType": "host",
                      "props": Object {
                        "children": <span
                          className="badge"
                          data-badge={1}
                        >
                          undefined undefined as undefined
                        </span>,
                        "className": "timeline-item__activity-entry",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "undefined undefined as undefined",
                          "className": "badge",
                          "data-badge": 1,
                        },
                        "ref": null,
                        "rendered": "undefined undefined as undefined",
                        "type": "span",
                      },
                      "type": "p",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "2017-02-21T00:00:00.000Z",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="timeline-marker"
              />,
              <div
                className="timeline-content"
              >
                <p
                  className="heading"
                />
                <div
                  className="challenge-activity"
                >
                  <div
                    className="challenge-name"
                  >
                    <Link
                      replace={false}
                      to="/browse/challenges/NaN"
                    />
                  </div>
                  <p
                    className="timeline-item__activity-entry"
                  >
                    <span
                      className="badge"
                      data-badge={1}
                    >
                      undefined undefined as undefined
                    </span>
                  </p>
                </div>
              </div>,
            ],
            "className": "timeline-item",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "timeline-marker",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="heading"
                  />,
                  Array [
                    <div
                      className="challenge-activity"
                    >
                      <div
                        className="challenge-name"
                      >
                        <Link
                          replace={false}
                          to="/browse/challenges/NaN"
                        />
                      </div>
                      <p
                        className="timeline-item__activity-entry"
                      >
                        <span
                          className="badge"
                          data-badge={1}
                        >
                          undefined undefined as undefined
                        </span>
                      </p>
                    </div>,
                  ],
                ],
                "className": "timeline-content",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                    "className": "heading",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": "NaN",
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="challenge-name"
                      >
                        <Link
                          replace={false}
                          to="/browse/challenges/NaN"
                        />
                      </div>,
                      Array [
                        <p
                          className="timeline-item__activity-entry"
                        >
                          <span
                            className="badge"
                            data-badge={1}
                          >
                            undefined undefined as undefined
                          </span>
                        </p>,
                      ],
                    ],
                    "className": "challenge-activity",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Link
                          replace={false}
                          to="/browse/challenges/NaN"
                        />,
                        "className": "challenge-name",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": undefined,
                          "replace": false,
                          "to": "/browse/challenges/NaN",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": "undefined undefined as undefined",
                      "nodeType": "host",
                      "props": Object {
                        "children": <span
                          className="badge"
                          data-badge={1}
                        >
                          undefined undefined as undefined
                        </span>,
                        "className": "timeline-item__activity-entry",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "undefined undefined as undefined",
                          "className": "badge",
                          "data-badge": 1,
                        },
                        "ref": null,
                        "rendered": "undefined undefined as undefined",
                        "type": "span",
                      },
                      "type": "p",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="tag is-medium"
            >
              End
            </span>,
            "className": "timeline-header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "End",
              "className": "tag is-medium",
            },
            "ref": null,
            "rendered": "End",
            "type": "span",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`it indicates on the timeline if there is no activity 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserActivityTimeline
    activity={Array []}
    intl={
      Object {
        "formatDate": [MockFunction],
        "formatMessage": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "defaultMessage": "Updated",
                "id": "Activity.action.updated",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Created",
                "id": "Activity.action.created",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Deleted",
                "id": "Activity.action.deleted",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Viewed",
                "id": "Activity.action.taskViewed",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Set Status on",
                "id": "Activity.action.taskStatusSet",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Added Tag to",
                "id": "Activity.action.tagAdded",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Removed Tag from",
                "id": "Activity.action.tagRemoved",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Answered Question on",
                "id": "Activity.action.questionAnswered",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Project",
                "id": "Activity.item.project",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Challenge",
                "id": "Activity.item.challenge",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Task",
                "id": "Activity.item.task",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Tag",
                "id": "Activity.item.tag",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Survey",
                "id": "Activity.item.survey",
              },
            ],
            Array [
              Object {
                "defaultMessage": "User",
                "id": "Activity.item.user",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Group",
                "id": "Activity.item.group",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Created",
                "id": "Task.status.created",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Fixed",
                "id": "Task.status.fixed",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Not an Issue",
                "id": "Task.status.falsePositive",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Skipped",
                "id": "Task.status.skipped",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Deleted",
                "id": "Task.status.deleted",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Already Fixed",
                "id": "Task.status.alreadyFixed",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Too Hard",
                "id": "Task.status.tooHard",
              },
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      }
    }
    startOfDay={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="timeline-header"
        >
          <span
            className="tag is-medium"
          >
            Activity
          </span>
        </header>,
        Array [
          <div
            className="timeline-item no-activity"
          >
            <div
              className="timeline-content"
            >
              <p
                className="heading"
              >
                No Recent Activity
              </p>
            </div>
          </div>,
        ],
        <div
          className="timeline-header"
        >
          <span
            className="tag is-medium"
          >
            End
          </span>
        </div>,
      ],
      "className": "timeline activity-timeline",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="tag is-medium"
          >
            Activity
          </span>,
          "className": "timeline-header",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Activity",
            "className": "tag is-medium",
          },
          "ref": null,
          "rendered": "Activity",
          "type": "span",
        },
        "type": "header",
      },
      Object {
        "instance": null,
        "key": "no-activity",
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="timeline-content"
          >
            <p
              className="heading"
            >
              No Recent Activity
            </p>
          </div>,
          "className": "timeline-item no-activity",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <p
              className="heading"
            >
              No Recent Activity
            </p>,
            "className": "timeline-content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "No Recent Activity",
              "className": "heading",
            },
            "ref": null,
            "rendered": "No Recent Activity",
            "type": "p",
          },
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="tag is-medium"
          >
            End
          </span>,
          "className": "timeline-header",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "End",
            "className": "tag is-medium",
          },
          "ref": null,
          "rendered": "End",
          "type": "span",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="timeline-header"
          >
            <span
              className="tag is-medium"
            >
              Activity
            </span>
          </header>,
          Array [
            <div
              className="timeline-item no-activity"
            >
              <div
                className="timeline-content"
              >
                <p
                  className="heading"
                >
                  No Recent Activity
                </p>
              </div>
            </div>,
          ],
          <div
            className="timeline-header"
          >
            <span
              className="tag is-medium"
            >
              End
            </span>
          </div>,
        ],
        "className": "timeline activity-timeline",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="tag is-medium"
            >
              Activity
            </span>,
            "className": "timeline-header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Activity",
              "className": "tag is-medium",
            },
            "ref": null,
            "rendered": "Activity",
            "type": "span",
          },
          "type": "header",
        },
        Object {
          "instance": null,
          "key": "no-activity",
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="timeline-content"
            >
              <p
                className="heading"
              >
                No Recent Activity
              </p>
            </div>,
            "className": "timeline-item no-activity",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <p
                className="heading"
              >
                No Recent Activity
              </p>,
              "className": "timeline-content",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "No Recent Activity",
                "className": "heading",
              },
              "ref": null,
              "rendered": "No Recent Activity",
              "type": "p",
            },
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="tag is-medium"
            >
              End
            </span>,
            "className": "timeline-header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "End",
              "className": "tag is-medium",
            },
            "ref": null,
            "rendered": "End",
            "type": "span",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`it renders a timeline of the activity 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserActivityTimeline
    activity={
      Array [
        Object {
          "action": 0,
          "challengeId": 123,
          "challengeName": "Challenge 123",
          "created": "2017-02-24T20:42:19-08:00",
          "status": 1,
          "typeId": 2,
        },
        Object {
          "action": 0,
          "challengeId": 123,
          "challengeName": "Challenge 123",
          "created": "2017-02-24T20:42:20-08:00",
          "status": 1,
          "typeId": 2,
        },
        Object {
          "action": 0,
          "challengeId": 123,
          "challengeName": "Challenge 123",
          "created": "2017-02-25T21:42:20-08:00",
          "status": 3,
          "typeId": 2,
        },
      ]
    }
    intl={
      Object {
        "formatDate": [MockFunction] {
          "calls": Array [
            Array [
              2017-02-26T00:00:00.000Z,
              Object {
                "day": "numeric",
                "month": "long",
              },
            ],
            Array [
              2017-02-25T00:00:00.000Z,
              Object {
                "day": "numeric",
                "month": "long",
              },
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
        "formatMessage": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "defaultMessage": "Updated",
                "id": "Activity.action.updated",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Created",
                "id": "Activity.action.created",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Deleted",
                "id": "Activity.action.deleted",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Viewed",
                "id": "Activity.action.taskViewed",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Set Status on",
                "id": "Activity.action.taskStatusSet",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Added Tag to",
                "id": "Activity.action.tagAdded",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Removed Tag from",
                "id": "Activity.action.tagRemoved",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Answered Question on",
                "id": "Activity.action.questionAnswered",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Project",
                "id": "Activity.item.project",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Challenge",
                "id": "Activity.item.challenge",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Task",
                "id": "Activity.item.task",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Tag",
                "id": "Activity.item.tag",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Survey",
                "id": "Activity.item.survey",
              },
            ],
            Array [
              Object {
                "defaultMessage": "User",
                "id": "Activity.item.user",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Group",
                "id": "Activity.item.group",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Created",
                "id": "Task.status.created",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Fixed",
                "id": "Task.status.fixed",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Not an Issue",
                "id": "Task.status.falsePositive",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Skipped",
                "id": "Task.status.skipped",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Deleted",
                "id": "Task.status.deleted",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Already Fixed",
                "id": "Task.status.alreadyFixed",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Too Hard",
                "id": "Task.status.tooHard",
              },
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      }
    }
    startOfDay={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="timeline-header"
        >
          <span
            className="tag is-medium"
          >
            Activity
          </span>
        </header>,
        Array [
          <div
            className="timeline-item"
          >
            <div
              className="timeline-marker"
            />
            <div
              className="timeline-content"
            >
              <p
                className="heading"
              />
              <div
                className="challenge-activity"
              >
                <div
                  className="challenge-name"
                >
                  <Link
                    replace={false}
                    to="/browse/challenges/NaN"
                  />
                </div>
                <p
                  className="timeline-item__activity-entry"
                >
                  <span
                    className="badge"
                    data-badge={1}
                  >
                    undefined undefined as undefined
                  </span>
                </p>
              </div>
            </div>
          </div>,
          <div
            className="timeline-item"
          >
            <div
              className="timeline-marker"
            />
            <div
              className="timeline-content"
            >
              <p
                className="heading"
              />
              <div
                className="challenge-activity"
              >
                <div
                  className="challenge-name"
                >
                  <Link
                    replace={false}
                    to="/browse/challenges/NaN"
                  />
                </div>
                <p
                  className="timeline-item__activity-entry"
                >
                  <span
                    className="badge"
                    data-badge={2}
                  >
                    undefined undefined as undefined
                  </span>
                </p>
              </div>
            </div>
          </div>,
        ],
        <div
          className="timeline-header"
        >
          <span
            className="tag is-medium"
          >
            End
          </span>
        </div>,
      ],
      "className": "timeline activity-timeline",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="tag is-medium"
          >
            Activity
          </span>,
          "className": "timeline-header",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Activity",
            "className": "tag is-medium",
          },
          "ref": null,
          "rendered": "Activity",
          "type": "span",
        },
        "type": "header",
      },
      Object {
        "instance": null,
        "key": "2017-02-26T00:00:00.000Z",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="timeline-marker"
            />,
            <div
              className="timeline-content"
            >
              <p
                className="heading"
              />
              <div
                className="challenge-activity"
              >
                <div
                  className="challenge-name"
                >
                  <Link
                    replace={false}
                    to="/browse/challenges/NaN"
                  />
                </div>
                <p
                  className="timeline-item__activity-entry"
                >
                  <span
                    className="badge"
                    data-badge={1}
                  >
                    undefined undefined as undefined
                  </span>
                </p>
              </div>
            </div>,
          ],
          "className": "timeline-item",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "timeline-marker",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="heading"
                />,
                Array [
                  <div
                    className="challenge-activity"
                  >
                    <div
                      className="challenge-name"
                    >
                      <Link
                        replace={false}
                        to="/browse/challenges/NaN"
                      />
                    </div>
                    <p
                      className="timeline-item__activity-entry"
                    >
                      <span
                        className="badge"
                        data-badge={1}
                      >
                        undefined undefined as undefined
                      </span>
                    </p>
                  </div>,
                ],
              ],
              "className": "timeline-content",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "heading",
                },
                "ref": null,
                "rendered": null,
                "type": "p",
              },
              Object {
                "instance": null,
                "key": "NaN",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="challenge-name"
                    >
                      <Link
                        replace={false}
                        to="/browse/challenges/NaN"
                      />
                    </div>,
                    Array [
                      <p
                        className="timeline-item__activity-entry"
                      >
                        <span
                          className="badge"
                          data-badge={1}
                        >
                          undefined undefined as undefined
                        </span>
                      </p>,
                    ],
                  ],
                  "className": "challenge-activity",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Link
                        replace={false}
                        to="/browse/challenges/NaN"
                      />,
                      "className": "challenge-name",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": undefined,
                        "replace": false,
                        "to": "/browse/challenges/NaN",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": "undefined undefined as undefined",
                    "nodeType": "host",
                    "props": Object {
                      "children": <span
                        className="badge"
                        data-badge={1}
                      >
                        undefined undefined as undefined
                      </span>,
                      "className": "timeline-item__activity-entry",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "undefined undefined as undefined",
                        "className": "badge",
                        "data-badge": 1,
                      },
                      "ref": null,
                      "rendered": "undefined undefined as undefined",
                      "type": "span",
                    },
                    "type": "p",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "2017-02-25T00:00:00.000Z",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="timeline-marker"
            />,
            <div
              className="timeline-content"
            >
              <p
                className="heading"
              />
              <div
                className="challenge-activity"
              >
                <div
                  className="challenge-name"
                >
                  <Link
                    replace={false}
                    to="/browse/challenges/NaN"
                  />
                </div>
                <p
                  className="timeline-item__activity-entry"
                >
                  <span
                    className="badge"
                    data-badge={2}
                  >
                    undefined undefined as undefined
                  </span>
                </p>
              </div>
            </div>,
          ],
          "className": "timeline-item",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "timeline-marker",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="heading"
                />,
                Array [
                  <div
                    className="challenge-activity"
                  >
                    <div
                      className="challenge-name"
                    >
                      <Link
                        replace={false}
                        to="/browse/challenges/NaN"
                      />
                    </div>
                    <p
                      className="timeline-item__activity-entry"
                    >
                      <span
                        className="badge"
                        data-badge={2}
                      >
                        undefined undefined as undefined
                      </span>
                    </p>
                  </div>,
                ],
              ],
              "className": "timeline-content",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "heading",
                },
                "ref": null,
                "rendered": null,
                "type": "p",
              },
              Object {
                "instance": null,
                "key": "NaN",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="challenge-name"
                    >
                      <Link
                        replace={false}
                        to="/browse/challenges/NaN"
                      />
                    </div>,
                    Array [
                      <p
                        className="timeline-item__activity-entry"
                      >
                        <span
                          className="badge"
                          data-badge={2}
                        >
                          undefined undefined as undefined
                        </span>
                      </p>,
                    ],
                  ],
                  "className": "challenge-activity",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Link
                        replace={false}
                        to="/browse/challenges/NaN"
                      />,
                      "className": "challenge-name",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": undefined,
                        "replace": false,
                        "to": "/browse/challenges/NaN",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": "undefined undefined as undefined",
                    "nodeType": "host",
                    "props": Object {
                      "children": <span
                        className="badge"
                        data-badge={2}
                      >
                        undefined undefined as undefined
                      </span>,
                      "className": "timeline-item__activity-entry",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "undefined undefined as undefined",
                        "className": "badge",
                        "data-badge": 2,
                      },
                      "ref": null,
                      "rendered": "undefined undefined as undefined",
                      "type": "span",
                    },
                    "type": "p",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="tag is-medium"
          >
            End
          </span>,
          "className": "timeline-header",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "End",
            "className": "tag is-medium",
          },
          "ref": null,
          "rendered": "End",
          "type": "span",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="timeline-header"
          >
            <span
              className="tag is-medium"
            >
              Activity
            </span>
          </header>,
          Array [
            <div
              className="timeline-item"
            >
              <div
                className="timeline-marker"
              />
              <div
                className="timeline-content"
              >
                <p
                  className="heading"
                />
                <div
                  className="challenge-activity"
                >
                  <div
                    className="challenge-name"
                  >
                    <Link
                      replace={false}
                      to="/browse/challenges/NaN"
                    />
                  </div>
                  <p
                    className="timeline-item__activity-entry"
                  >
                    <span
                      className="badge"
                      data-badge={1}
                    >
                      undefined undefined as undefined
                    </span>
                  </p>
                </div>
              </div>
            </div>,
            <div
              className="timeline-item"
            >
              <div
                className="timeline-marker"
              />
              <div
                className="timeline-content"
              >
                <p
                  className="heading"
                />
                <div
                  className="challenge-activity"
                >
                  <div
                    className="challenge-name"
                  >
                    <Link
                      replace={false}
                      to="/browse/challenges/NaN"
                    />
                  </div>
                  <p
                    className="timeline-item__activity-entry"
                  >
                    <span
                      className="badge"
                      data-badge={2}
                    >
                      undefined undefined as undefined
                    </span>
                  </p>
                </div>
              </div>
            </div>,
          ],
          <div
            className="timeline-header"
          >
            <span
              className="tag is-medium"
            >
              End
            </span>
          </div>,
        ],
        "className": "timeline activity-timeline",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="tag is-medium"
            >
              Activity
            </span>,
            "className": "timeline-header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Activity",
              "className": "tag is-medium",
            },
            "ref": null,
            "rendered": "Activity",
            "type": "span",
          },
          "type": "header",
        },
        Object {
          "instance": null,
          "key": "2017-02-26T00:00:00.000Z",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="timeline-marker"
              />,
              <div
                className="timeline-content"
              >
                <p
                  className="heading"
                />
                <div
                  className="challenge-activity"
                >
                  <div
                    className="challenge-name"
                  >
                    <Link
                      replace={false}
                      to="/browse/challenges/NaN"
                    />
                  </div>
                  <p
                    className="timeline-item__activity-entry"
                  >
                    <span
                      className="badge"
                      data-badge={1}
                    >
                      undefined undefined as undefined
                    </span>
                  </p>
                </div>
              </div>,
            ],
            "className": "timeline-item",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "timeline-marker",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="heading"
                  />,
                  Array [
                    <div
                      className="challenge-activity"
                    >
                      <div
                        className="challenge-name"
                      >
                        <Link
                          replace={false}
                          to="/browse/challenges/NaN"
                        />
                      </div>
                      <p
                        className="timeline-item__activity-entry"
                      >
                        <span
                          className="badge"
                          data-badge={1}
                        >
                          undefined undefined as undefined
                        </span>
                      </p>
                    </div>,
                  ],
                ],
                "className": "timeline-content",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                    "className": "heading",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": "NaN",
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="challenge-name"
                      >
                        <Link
                          replace={false}
                          to="/browse/challenges/NaN"
                        />
                      </div>,
                      Array [
                        <p
                          className="timeline-item__activity-entry"
                        >
                          <span
                            className="badge"
                            data-badge={1}
                          >
                            undefined undefined as undefined
                          </span>
                        </p>,
                      ],
                    ],
                    "className": "challenge-activity",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Link
                          replace={false}
                          to="/browse/challenges/NaN"
                        />,
                        "className": "challenge-name",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": undefined,
                          "replace": false,
                          "to": "/browse/challenges/NaN",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": "undefined undefined as undefined",
                      "nodeType": "host",
                      "props": Object {
                        "children": <span
                          className="badge"
                          data-badge={1}
                        >
                          undefined undefined as undefined
                        </span>,
                        "className": "timeline-item__activity-entry",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "undefined undefined as undefined",
                          "className": "badge",
                          "data-badge": 1,
                        },
                        "ref": null,
                        "rendered": "undefined undefined as undefined",
                        "type": "span",
                      },
                      "type": "p",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "2017-02-25T00:00:00.000Z",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="timeline-marker"
              />,
              <div
                className="timeline-content"
              >
                <p
                  className="heading"
                />
                <div
                  className="challenge-activity"
                >
                  <div
                    className="challenge-name"
                  >
                    <Link
                      replace={false}
                      to="/browse/challenges/NaN"
                    />
                  </div>
                  <p
                    className="timeline-item__activity-entry"
                  >
                    <span
                      className="badge"
                      data-badge={2}
                    >
                      undefined undefined as undefined
                    </span>
                  </p>
                </div>
              </div>,
            ],
            "className": "timeline-item",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "timeline-marker",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="heading"
                  />,
                  Array [
                    <div
                      className="challenge-activity"
                    >
                      <div
                        className="challenge-name"
                      >
                        <Link
                          replace={false}
                          to="/browse/challenges/NaN"
                        />
                      </div>
                      <p
                        className="timeline-item__activity-entry"
                      >
                        <span
                          className="badge"
                          data-badge={2}
                        >
                          undefined undefined as undefined
                        </span>
                      </p>
                    </div>,
                  ],
                ],
                "className": "timeline-content",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                    "className": "heading",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": "NaN",
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="challenge-name"
                      >
                        <Link
                          replace={false}
                          to="/browse/challenges/NaN"
                        />
                      </div>,
                      Array [
                        <p
                          className="timeline-item__activity-entry"
                        >
                          <span
                            className="badge"
                            data-badge={2}
                          >
                            undefined undefined as undefined
                          </span>
                        </p>,
                      ],
                    ],
                    "className": "challenge-activity",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Link
                          replace={false}
                          to="/browse/challenges/NaN"
                        />,
                        "className": "challenge-name",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": undefined,
                          "replace": false,
                          "to": "/browse/challenges/NaN",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": "undefined undefined as undefined",
                      "nodeType": "host",
                      "props": Object {
                        "children": <span
                          className="badge"
                          data-badge={2}
                        >
                          undefined undefined as undefined
                        </span>,
                        "className": "timeline-item__activity-entry",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "undefined undefined as undefined",
                          "className": "badge",
                          "data-badge": 2,
                        },
                        "ref": null,
                        "rendered": "undefined undefined as undefined",
                        "type": "span",
                      },
                      "type": "p",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="tag is-medium"
            >
              End
            </span>,
            "className": "timeline-header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "End",
              "className": "tag is-medium",
            },
            "ref": null,
            "rendered": "End",
            "type": "span",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
